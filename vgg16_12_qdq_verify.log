Running [ MIGraphX Version: 2.9.0.352dcea2c ]: /code/AMDMIGraphX/build/bin/migraphx-driver verify vision/classification/vgg/model/vgg16-12-qdq.onnx
Reading: vision/classification/vgg/model/vgg16-12-qdq.onnx
module: "main"
data = @param:data -> float_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
@1 = @literal{0.20209} -> float_type, {1}, {0}, target_id=0
@2 = @literal{53} -> uint8_type, {1}, {0}, target_id=0
@3 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@4 = @literal{0.00104333} -> float_type, {1}, {0}, target_id=0
@5 = @literal{ ... } -> int8_type, {4096, 1000}, {1000, 1}, target_id=0
@6 = @literal{0.0450882} -> float_type, {1}, {0}, target_id=0
@7 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@8 = @literal{0.109745} -> float_type, {1}, {0}, target_id=0
@9 = @literal{151} -> uint8_type, {1}, {0}, target_id=0
@10 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@11 = @literal{0.000491461} -> float_type, {1}, {0}, target_id=0
@12 = @literal{ ... } -> int8_type, {4096, 4096}, {4096, 1}, target_id=0
@13 = @literal{0.0809295} -> float_type, {1}, {0}, target_id=0
@14 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@15 = @literal{0.209525} -> float_type, {1}, {0}, target_id=0
@16 = @literal{157} -> uint8_type, {1}, {0}, target_id=0
@17 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@18 = @literal{0.000378865} -> float_type, {1}, {0}, target_id=0
@19 = @literal{ ... } -> int8_type, {25088, 4096}, {4096, 1}, target_id=0
@20 = @literal{0.233266} -> float_type, {1}, {0}, target_id=0
@21 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@22 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@23 = @literal{0.000350484} -> float_type, {1}, {1}, target_id=0
@24 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@25 = @literal{0.233266} -> float_type, {1}, {0}, target_id=0
@26 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@27 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@28 = @literal{0.00123645} -> float_type, {1}, {0}, target_id=0
@29 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@30 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@31 = @literal{0.000806395} -> float_type, {1}, {1}, target_id=0
@32 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@33 = @literal{0.28346} -> float_type, {1}, {0}, target_id=0
@34 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@35 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@36 = @literal{0.00173175} -> float_type, {1}, {0}, target_id=0
@37 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@38 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@39 = @literal{0.000786583} -> float_type, {1}, {1}, target_id=0
@40 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@41 = @literal{0.465653} -> float_type, {1}, {0}, target_id=0
@42 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@43 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@44 = @literal{0.0022082} -> float_type, {1}, {0}, target_id=0
@45 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@46 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@47 = @literal{0.000870825} -> float_type, {1}, {1}, target_id=0
@48 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@49 = @literal{0.35621} -> float_type, {1}, {0}, target_id=0
@50 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@51 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@52 = @literal{0.00212013} -> float_type, {1}, {0}, target_id=0
@53 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@54 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@55 = @literal{0.000925222} -> float_type, {1}, {1}, target_id=0
@56 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@57 = @literal{0.41074} -> float_type, {1}, {0}, target_id=0
@58 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@59 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@60 = @literal{0.00197858} -> float_type, {1}, {0}, target_id=0
@61 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@62 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@63 = @literal{0.00145504} -> float_type, {1}, {1}, target_id=0
@64 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@65 = @literal{0.46762} -> float_type, {1}, {0}, target_id=0
@66 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@67 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@68 = @literal{0.00364695} -> float_type, {1}, {0}, target_id=0
@69 = @literal{ ... } -> int8_type, {512, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@70 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@71 = @literal{0.0016644} -> float_type, {1}, {1}, target_id=0
@72 = @literal{ ... } -> int32_type, {256}, {1}, target_id=0
@73 = @literal{0.398974} -> float_type, {1}, {0}, target_id=0
@74 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@75 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@76 = @literal{0.00450157} -> float_type, {1}, {0}, target_id=0
@77 = @literal{ ... } -> int8_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@78 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@79 = @literal{0.00167394} -> float_type, {1}, {1}, target_id=0
@80 = @literal{ ... } -> int32_type, {256}, {1}, target_id=0
@81 = @literal{0.369739} -> float_type, {1}, {0}, target_id=0
@82 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@83 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@84 = @literal{0.00423602} -> float_type, {1}, {0}, target_id=0
@85 = @literal{ ... } -> int8_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@86 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@87 = @literal{0.00188817} -> float_type, {1}, {1}, target_id=0
@88 = @literal{ ... } -> int32_type, {256}, {1}, target_id=0
@89 = @literal{0.395168} -> float_type, {1}, {0}, target_id=0
@90 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@91 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@92 = @literal{0.00569332} -> float_type, {1}, {0}, target_id=0
@93 = @literal{ ... } -> int8_type, {256, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@94 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@95 = @literal{0.000692262} -> float_type, {1}, {1}, target_id=0
@96 = @literal{ ... } -> int32_type, {128}, {1}, target_id=0
@97 = @literal{0.331647} -> float_type, {1}, {0}, target_id=0
@98 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@99 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@100 = @literal{0.00350343} -> float_type, {1}, {0}, target_id=0
@101 = @literal{ ... } -> int8_type, {128, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@102 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@103 = @literal{0.000891812} -> float_type, {1}, {1}, target_id=0
@104 = @literal{ ... } -> int32_type, {128}, {1}, target_id=0
@105 = @literal{0.197596} -> float_type, {1}, {0}, target_id=0
@106 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@107 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@108 = @literal{0.00529674} -> float_type, {1}, {0}, target_id=0
@109 = @literal{ ... } -> int8_type, {128, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@110 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@111 = @literal{0.000335972} -> float_type, {1}, {1}, target_id=0
@112 = @literal{ ... } -> int32_type, {64}, {1}, target_id=0
@113 = @literal{0.16837} -> float_type, {1}, {0}, target_id=0
@114 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@115 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@116 = @literal{0.00454209} -> float_type, {1}, {0}, target_id=0
@117 = @literal{ ... } -> int8_type, {64, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@118 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@119 = @literal{0.000246135} -> float_type, {1}, {1}, target_id=0
@120 = @literal{ ... } -> int32_type, {64}, {1}, target_id=0
@121 = @literal{0.0739686} -> float_type, {1}, {0}, target_id=0
@122 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@123 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@124 = @literal{0.0131916} -> float_type, {1}, {0}, target_id=0
@125 = @literal{ ... } -> int8_type, {64, 3, 3, 3}, {27, 9, 3, 1}, target_id=0
@126 = @literal{0.0186584} -> float_type, {1}, {0}, target_id=0
@127 = @literal{114} -> uint8_type, {1}, {0}, target_id=0
@128 = @literal{ ... } -> float_type, {1000}, {1}, target_id=0
@129 = @literal{ ... } -> float_type, {4096}, {1}, target_id=0
@130 = @literal{ ... } -> float_type, {4096}, {1}, target_id=0
@131 = multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@126) -> float_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
@132 = multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@127) -> uint8_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
@133 = quantizelinear(data,@131,@132) -> uint8_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
@134 = multibroadcast[out_lens={64},out_dyn_dims={}](@119) -> float_type, {64}, {0}, target_id=0
@135 = multibroadcast[out_lens={64},out_dyn_dims={}](@118) -> int32_type, {64}, {0}, target_id=0
@136 = dequantizelinear(@120,@134,@135) -> float_type, {64}, {1}, target_id=0
@137 = multibroadcast[out_lens={64, 3, 3, 3},out_dyn_dims={}](@124) -> float_type, {64, 3, 3, 3}, {0, 0, 0, 0}, target_id=0
@138 = multibroadcast[out_lens={64, 3, 3, 3},out_dyn_dims={}](@123) -> int8_type, {64, 3, 3, 3}, {0, 0, 0, 0}, target_id=0
@139 = dequantizelinear(@125,@137,@138) -> float_type, {64, 3, 3, 3}, {27, 9, 3, 1}, target_id=0
@140 = multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@126) -> float_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
@141 = multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@127) -> uint8_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
@142 = dequantizelinear(@133,@140,@141) -> float_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
@143 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@142,@139) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@144 = broadcast[axis=1,out_lens={1, 64, 224, 224}](@136) -> float_type, {1, 64, 224, 224}, {0, 1, 0, 0}, target_id=0
@145 = add(@143,@144) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@146 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@121) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@147 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@122) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@148 = quantizelinear(@145,@146,@147) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@149 = multibroadcast[out_lens={64},out_dyn_dims={}](@111) -> float_type, {64}, {0}, target_id=0
@150 = multibroadcast[out_lens={64},out_dyn_dims={}](@110) -> int32_type, {64}, {0}, target_id=0
@151 = dequantizelinear(@112,@149,@150) -> float_type, {64}, {1}, target_id=0
@152 = multibroadcast[out_lens={64, 64, 3, 3},out_dyn_dims={}](@116) -> float_type, {64, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
@153 = multibroadcast[out_lens={64, 64, 3, 3},out_dyn_dims={}](@115) -> int8_type, {64, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
@154 = dequantizelinear(@117,@152,@153) -> float_type, {64, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@155 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@121) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@156 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@122) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@157 = dequantizelinear(@148,@155,@156) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@158 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@157,@154) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@159 = broadcast[axis=1,out_lens={1, 64, 224, 224}](@151) -> float_type, {1, 64, 224, 224}, {0, 1, 0, 0}, target_id=0
@160 = add(@158,@159) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@161 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@113) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@162 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@163 = quantizelinear(@160,@161,@162) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@164 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@113) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@165 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@166 = dequantizelinear(@163,@164,@165) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@167 = pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@166) -> float_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
@168 = multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@113) -> float_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
@169 = multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
@170 = quantizelinear(@167,@168,@169) -> uint8_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
@171 = multibroadcast[out_lens={128},out_dyn_dims={}](@103) -> float_type, {128}, {0}, target_id=0
@172 = multibroadcast[out_lens={128},out_dyn_dims={}](@102) -> int32_type, {128}, {0}, target_id=0
@173 = dequantizelinear(@104,@171,@172) -> float_type, {128}, {1}, target_id=0
@174 = multibroadcast[out_lens={128, 64, 3, 3},out_dyn_dims={}](@108) -> float_type, {128, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
@175 = multibroadcast[out_lens={128, 64, 3, 3},out_dyn_dims={}](@107) -> int8_type, {128, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
@176 = dequantizelinear(@109,@174,@175) -> float_type, {128, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@177 = multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@113) -> float_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
@178 = multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
@179 = dequantizelinear(@170,@177,@178) -> float_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
@180 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@179,@176) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@181 = broadcast[axis=1,out_lens={1, 128, 112, 112}](@173) -> float_type, {1, 128, 112, 112}, {0, 1, 0, 0}, target_id=0
@182 = add(@180,@181) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@183 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@105) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@184 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@106) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@185 = quantizelinear(@182,@183,@184) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@186 = multibroadcast[out_lens={128},out_dyn_dims={}](@95) -> float_type, {128}, {0}, target_id=0
@187 = multibroadcast[out_lens={128},out_dyn_dims={}](@94) -> int32_type, {128}, {0}, target_id=0
@188 = dequantizelinear(@96,@186,@187) -> float_type, {128}, {1}, target_id=0
@189 = multibroadcast[out_lens={128, 128, 3, 3},out_dyn_dims={}](@100) -> float_type, {128, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
@190 = multibroadcast[out_lens={128, 128, 3, 3},out_dyn_dims={}](@99) -> int8_type, {128, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
@191 = dequantizelinear(@101,@189,@190) -> float_type, {128, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@192 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@105) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@193 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@106) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@194 = dequantizelinear(@185,@192,@193) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@195 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@194,@191) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@196 = broadcast[axis=1,out_lens={1, 128, 112, 112}](@188) -> float_type, {1, 128, 112, 112}, {0, 1, 0, 0}, target_id=0
@197 = add(@195,@196) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@198 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@97) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@199 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@200 = quantizelinear(@197,@198,@199) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@201 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@97) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@202 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@203 = dequantizelinear(@200,@201,@202) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@204 = pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@203) -> float_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
@205 = multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@97) -> float_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
@206 = multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
@207 = quantizelinear(@204,@205,@206) -> uint8_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
@208 = multibroadcast[out_lens={256},out_dyn_dims={}](@87) -> float_type, {256}, {0}, target_id=0
@209 = multibroadcast[out_lens={256},out_dyn_dims={}](@86) -> int32_type, {256}, {0}, target_id=0
@210 = dequantizelinear(@88,@208,@209) -> float_type, {256}, {1}, target_id=0
@211 = multibroadcast[out_lens={256, 128, 3, 3},out_dyn_dims={}](@92) -> float_type, {256, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
@212 = multibroadcast[out_lens={256, 128, 3, 3},out_dyn_dims={}](@91) -> int8_type, {256, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
@213 = dequantizelinear(@93,@211,@212) -> float_type, {256, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@214 = multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@97) -> float_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
@215 = multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
@216 = dequantizelinear(@207,@214,@215) -> float_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
@217 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@216,@213) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@218 = broadcast[axis=1,out_lens={1, 256, 56, 56}](@210) -> float_type, {1, 256, 56, 56}, {0, 1, 0, 0}, target_id=0
@219 = add(@217,@218) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@220 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@89) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@221 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@90) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@222 = quantizelinear(@219,@220,@221) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@223 = multibroadcast[out_lens={256},out_dyn_dims={}](@79) -> float_type, {256}, {0}, target_id=0
@224 = multibroadcast[out_lens={256},out_dyn_dims={}](@78) -> int32_type, {256}, {0}, target_id=0
@225 = dequantizelinear(@80,@223,@224) -> float_type, {256}, {1}, target_id=0
@226 = multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@84) -> float_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@227 = multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@83) -> int8_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@228 = dequantizelinear(@85,@226,@227) -> float_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@229 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@89) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@230 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@90) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@231 = dequantizelinear(@222,@229,@230) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@232 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@231,@228) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@233 = broadcast[axis=1,out_lens={1, 256, 56, 56}](@225) -> float_type, {1, 256, 56, 56}, {0, 1, 0, 0}, target_id=0
@234 = add(@232,@233) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@235 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@81) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@236 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@82) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@237 = quantizelinear(@234,@235,@236) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@238 = multibroadcast[out_lens={256},out_dyn_dims={}](@71) -> float_type, {256}, {0}, target_id=0
@239 = multibroadcast[out_lens={256},out_dyn_dims={}](@70) -> int32_type, {256}, {0}, target_id=0
@240 = dequantizelinear(@72,@238,@239) -> float_type, {256}, {1}, target_id=0
@241 = multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@76) -> float_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@242 = multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@75) -> int8_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@243 = dequantizelinear(@77,@241,@242) -> float_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@244 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@81) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@245 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@82) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@246 = dequantizelinear(@237,@244,@245) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@247 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@246,@243) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@248 = broadcast[axis=1,out_lens={1, 256, 56, 56}](@240) -> float_type, {1, 256, 56, 56}, {0, 1, 0, 0}, target_id=0
@249 = add(@247,@248) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@250 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@73) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@251 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@252 = quantizelinear(@249,@250,@251) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@253 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@73) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@254 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@255 = dequantizelinear(@252,@253,@254) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@256 = pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@255) -> float_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
@257 = multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@73) -> float_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
@258 = multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
@259 = quantizelinear(@256,@257,@258) -> uint8_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
@260 = multibroadcast[out_lens={512},out_dyn_dims={}](@63) -> float_type, {512}, {0}, target_id=0
@261 = multibroadcast[out_lens={512},out_dyn_dims={}](@62) -> int32_type, {512}, {0}, target_id=0
@262 = dequantizelinear(@64,@260,@261) -> float_type, {512}, {1}, target_id=0
@263 = multibroadcast[out_lens={512, 256, 3, 3},out_dyn_dims={}](@68) -> float_type, {512, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@264 = multibroadcast[out_lens={512, 256, 3, 3},out_dyn_dims={}](@67) -> int8_type, {512, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@265 = dequantizelinear(@69,@263,@264) -> float_type, {512, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@266 = multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@73) -> float_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
@267 = multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
@268 = dequantizelinear(@259,@266,@267) -> float_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
@269 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@268,@265) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@270 = broadcast[axis=1,out_lens={1, 512, 28, 28}](@262) -> float_type, {1, 512, 28, 28}, {0, 1, 0, 0}, target_id=0
@271 = add(@269,@270) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@272 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@65) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@273 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@66) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@274 = quantizelinear(@271,@272,@273) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@275 = multibroadcast[out_lens={512},out_dyn_dims={}](@55) -> float_type, {512}, {0}, target_id=0
@276 = multibroadcast[out_lens={512},out_dyn_dims={}](@54) -> int32_type, {512}, {0}, target_id=0
@277 = dequantizelinear(@56,@275,@276) -> float_type, {512}, {1}, target_id=0
@278 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@60) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@279 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@59) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@280 = dequantizelinear(@61,@278,@279) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@281 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@65) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@282 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@66) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@283 = dequantizelinear(@274,@281,@282) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@284 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@283,@280) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@285 = broadcast[axis=1,out_lens={1, 512, 28, 28}](@277) -> float_type, {1, 512, 28, 28}, {0, 1, 0, 0}, target_id=0
@286 = add(@284,@285) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@287 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@57) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@288 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@58) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@289 = quantizelinear(@286,@287,@288) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@290 = multibroadcast[out_lens={512},out_dyn_dims={}](@47) -> float_type, {512}, {0}, target_id=0
@291 = multibroadcast[out_lens={512},out_dyn_dims={}](@46) -> int32_type, {512}, {0}, target_id=0
@292 = dequantizelinear(@48,@290,@291) -> float_type, {512}, {1}, target_id=0
@293 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@52) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@294 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@51) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@295 = dequantizelinear(@53,@293,@294) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@296 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@57) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@297 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@58) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@298 = dequantizelinear(@289,@296,@297) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@299 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@298,@295) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@300 = broadcast[axis=1,out_lens={1, 512, 28, 28}](@292) -> float_type, {1, 512, 28, 28}, {0, 1, 0, 0}, target_id=0
@301 = add(@299,@300) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@302 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@49) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@303 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@304 = quantizelinear(@301,@302,@303) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@305 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@49) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@306 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@307 = dequantizelinear(@304,@305,@306) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@308 = pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@307) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@309 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@49) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@310 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@311 = quantizelinear(@308,@309,@310) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@312 = multibroadcast[out_lens={512},out_dyn_dims={}](@39) -> float_type, {512}, {0}, target_id=0
@313 = multibroadcast[out_lens={512},out_dyn_dims={}](@38) -> int32_type, {512}, {0}, target_id=0
@314 = dequantizelinear(@40,@312,@313) -> float_type, {512}, {1}, target_id=0
@315 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@44) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@316 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@43) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@317 = dequantizelinear(@45,@315,@316) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@318 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@49) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@319 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@320 = dequantizelinear(@311,@318,@319) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@321 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@320,@317) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@322 = broadcast[axis=1,out_lens={1, 512, 14, 14}](@314) -> float_type, {1, 512, 14, 14}, {0, 1, 0, 0}, target_id=0
@323 = add(@321,@322) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@324 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@41) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@325 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@42) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@326 = quantizelinear(@323,@324,@325) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@327 = multibroadcast[out_lens={512},out_dyn_dims={}](@31) -> float_type, {512}, {0}, target_id=0
@328 = multibroadcast[out_lens={512},out_dyn_dims={}](@30) -> int32_type, {512}, {0}, target_id=0
@329 = dequantizelinear(@32,@327,@328) -> float_type, {512}, {1}, target_id=0
@330 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@36) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@331 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@35) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@332 = dequantizelinear(@37,@330,@331) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@333 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@41) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@334 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@42) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@335 = dequantizelinear(@326,@333,@334) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@336 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@335,@332) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@337 = broadcast[axis=1,out_lens={1, 512, 14, 14}](@329) -> float_type, {1, 512, 14, 14}, {0, 1, 0, 0}, target_id=0
@338 = add(@336,@337) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@339 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@33) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@340 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@34) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@341 = quantizelinear(@338,@339,@340) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@342 = multibroadcast[out_lens={512},out_dyn_dims={}](@23) -> float_type, {512}, {0}, target_id=0
@343 = multibroadcast[out_lens={512},out_dyn_dims={}](@22) -> int32_type, {512}, {0}, target_id=0
@344 = dequantizelinear(@24,@342,@343) -> float_type, {512}, {1}, target_id=0
@345 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@28) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@346 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@27) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@347 = dequantizelinear(@29,@345,@346) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@348 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@33) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@349 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@34) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@350 = dequantizelinear(@341,@348,@349) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@351 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@350,@347) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@352 = broadcast[axis=1,out_lens={1, 512, 14, 14}](@344) -> float_type, {1, 512, 14, 14}, {0, 1, 0, 0}, target_id=0
@353 = add(@351,@352) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@354 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@25) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@355 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@356 = quantizelinear(@353,@354,@355) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@357 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@25) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@358 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@359 = dequantizelinear(@356,@357,@358) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@360 = pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@359) -> float_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
@361 = multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@25) -> float_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
@362 = multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
@363 = quantizelinear(@360,@361,@362) -> uint8_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
@364 = multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@25) -> float_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
@365 = multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
@366 = dequantizelinear(@363,@364,@365) -> float_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
@367 = flatten[axis=1](@366) -> float_type, {1, 25088}, {25088, 1}, target_id=0
@368 = multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@20) -> float_type, {1, 25088}, {0, 0}, target_id=0
@369 = multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@21) -> uint8_type, {1, 25088}, {0, 0}, target_id=0
@370 = quantizelinear(@367,@368,@369) -> uint8_type, {1, 25088}, {25088, 1}, target_id=0
@371 = multibroadcast[out_lens={25088, 4096},out_dyn_dims={}](@18) -> float_type, {25088, 4096}, {0, 0}, target_id=0
@372 = multibroadcast[out_lens={25088, 4096},out_dyn_dims={}](@17) -> int8_type, {25088, 4096}, {0, 0}, target_id=0
@373 = dequantizelinear(@19,@371,@372) -> float_type, {25088, 4096}, {4096, 1}, target_id=0
@374 = multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@20) -> float_type, {1, 25088}, {0, 0}, target_id=0
@375 = multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@21) -> uint8_type, {1, 25088}, {0, 0}, target_id=0
@376 = dequantizelinear(@370,@374,@375) -> float_type, {1, 25088}, {25088, 1}, target_id=0
@377 = dot(@376,@373) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@378 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@15) -> float_type, {1, 4096}, {0, 0}, target_id=0
@379 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@16) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@380 = quantizelinear(@377,@378,@379) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@381 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@15) -> float_type, {1, 4096}, {0, 0}, target_id=0
@382 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@16) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@383 = dequantizelinear(@380,@381,@382) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@384 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@130) -> float_type, {1, 4096}, {0, 1}, target_id=0
@385 = add(@383,@384) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@386 = relu(@385) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@387 = flatten[axis=1](@386) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@388 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@13) -> float_type, {1, 4096}, {0, 0}, target_id=0
@389 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@14) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@390 = quantizelinear(@387,@388,@389) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@391 = multibroadcast[out_lens={4096, 4096},out_dyn_dims={}](@11) -> float_type, {4096, 4096}, {0, 0}, target_id=0
@392 = multibroadcast[out_lens={4096, 4096},out_dyn_dims={}](@10) -> int8_type, {4096, 4096}, {0, 0}, target_id=0
@393 = dequantizelinear(@12,@391,@392) -> float_type, {4096, 4096}, {4096, 1}, target_id=0
@394 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@13) -> float_type, {1, 4096}, {0, 0}, target_id=0
@395 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@14) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@396 = dequantizelinear(@390,@394,@395) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@397 = dot(@396,@393) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@398 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@8) -> float_type, {1, 4096}, {0, 0}, target_id=0
@399 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@9) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@400 = quantizelinear(@397,@398,@399) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@401 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@8) -> float_type, {1, 4096}, {0, 0}, target_id=0
@402 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@9) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@403 = dequantizelinear(@400,@401,@402) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@404 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@129) -> float_type, {1, 4096}, {0, 1}, target_id=0
@405 = add(@403,@404) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@406 = relu(@405) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@407 = flatten[axis=1](@406) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@408 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@6) -> float_type, {1, 4096}, {0, 0}, target_id=0
@409 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@7) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@410 = quantizelinear(@407,@408,@409) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@411 = multibroadcast[out_lens={4096, 1000},out_dyn_dims={}](@4) -> float_type, {4096, 1000}, {0, 0}, target_id=0
@412 = multibroadcast[out_lens={4096, 1000},out_dyn_dims={}](@3) -> int8_type, {4096, 1000}, {0, 0}, target_id=0
@413 = dequantizelinear(@5,@411,@412) -> float_type, {4096, 1000}, {1000, 1}, target_id=0
@414 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@6) -> float_type, {1, 4096}, {0, 0}, target_id=0
@415 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@7) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@416 = dequantizelinear(@410,@414,@415) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@417 = dot(@416,@413) -> float_type, {1, 1000}, {1000, 1}, target_id=0
@418 = multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@1) -> float_type, {1, 1000}, {0, 0}, target_id=0
@419 = multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@2) -> uint8_type, {1, 1000}, {0, 0}, target_id=0
@420 = quantizelinear(@417,@418,@419) -> uint8_type, {1, 1000}, {1000, 1}, target_id=0
@421 = multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@1) -> float_type, {1, 1000}, {0, 0}, target_id=0
@422 = multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@2) -> uint8_type, {1, 1000}, {0, 0}, target_id=0
@423 = dequantizelinear(@420,@421,@422) -> float_type, {1, 1000}, {1000, 1}, target_id=0
@424 = multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@128) -> float_type, {1, 1000}, {0, 1}, target_id=0
@425 = add(@423,@424) -> float_type, {1, 1000}, {1000, 1}, target_id=0
@426 = @return(@425), target_id=0


module: "main"
data = @param:data -> float_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
@1 = @literal{0.20209} -> float_type, {1}, {0}, target_id=0
@2 = @literal{53} -> uint8_type, {1}, {0}, target_id=0
@3 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@4 = @literal{0.00104333} -> float_type, {1}, {0}, target_id=0
@5 = @literal{ ... } -> int8_type, {4096, 1000}, {1000, 1}, target_id=0
@6 = @literal{0.0450882} -> float_type, {1}, {0}, target_id=0
@7 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@8 = @literal{0.109745} -> float_type, {1}, {0}, target_id=0
@9 = @literal{151} -> uint8_type, {1}, {0}, target_id=0
@10 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@11 = @literal{0.000491461} -> float_type, {1}, {0}, target_id=0
@12 = @literal{ ... } -> int8_type, {4096, 4096}, {4096, 1}, target_id=0
@13 = @literal{0.0809295} -> float_type, {1}, {0}, target_id=0
@14 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@15 = @literal{0.209525} -> float_type, {1}, {0}, target_id=0
@16 = @literal{157} -> uint8_type, {1}, {0}, target_id=0
@17 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@18 = @literal{0.000378865} -> float_type, {1}, {0}, target_id=0
@19 = @literal{ ... } -> int8_type, {25088, 4096}, {4096, 1}, target_id=0
@20 = @literal{0.233266} -> float_type, {1}, {0}, target_id=0
@21 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@22 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@23 = @literal{0.000350484} -> float_type, {1}, {1}, target_id=0
@24 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@25 = @literal{0.233266} -> float_type, {1}, {0}, target_id=0
@26 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@27 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@28 = @literal{0.00123645} -> float_type, {1}, {0}, target_id=0
@29 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@30 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@31 = @literal{0.000806395} -> float_type, {1}, {1}, target_id=0
@32 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@33 = @literal{0.28346} -> float_type, {1}, {0}, target_id=0
@34 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@35 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@36 = @literal{0.00173175} -> float_type, {1}, {0}, target_id=0
@37 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@38 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@39 = @literal{0.000786583} -> float_type, {1}, {1}, target_id=0
@40 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@41 = @literal{0.465653} -> float_type, {1}, {0}, target_id=0
@42 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@43 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@44 = @literal{0.0022082} -> float_type, {1}, {0}, target_id=0
@45 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@46 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@47 = @literal{0.000870825} -> float_type, {1}, {1}, target_id=0
@48 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@49 = @literal{0.35621} -> float_type, {1}, {0}, target_id=0
@50 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@51 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@52 = @literal{0.00212013} -> float_type, {1}, {0}, target_id=0
@53 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@54 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@55 = @literal{0.000925222} -> float_type, {1}, {1}, target_id=0
@56 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@57 = @literal{0.41074} -> float_type, {1}, {0}, target_id=0
@58 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@59 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@60 = @literal{0.00197858} -> float_type, {1}, {0}, target_id=0
@61 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@62 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@63 = @literal{0.00145504} -> float_type, {1}, {1}, target_id=0
@64 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@65 = @literal{0.46762} -> float_type, {1}, {0}, target_id=0
@66 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@67 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@68 = @literal{0.00364695} -> float_type, {1}, {0}, target_id=0
@69 = @literal{ ... } -> int8_type, {512, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@70 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@71 = @literal{0.0016644} -> float_type, {1}, {1}, target_id=0
@72 = @literal{ ... } -> int32_type, {256}, {1}, target_id=0
@73 = @literal{0.398974} -> float_type, {1}, {0}, target_id=0
@74 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@75 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@76 = @literal{0.00450157} -> float_type, {1}, {0}, target_id=0
@77 = @literal{ ... } -> int8_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@78 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@79 = @literal{0.00167394} -> float_type, {1}, {1}, target_id=0
@80 = @literal{ ... } -> int32_type, {256}, {1}, target_id=0
@81 = @literal{0.369739} -> float_type, {1}, {0}, target_id=0
@82 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@83 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@84 = @literal{0.00423602} -> float_type, {1}, {0}, target_id=0
@85 = @literal{ ... } -> int8_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@86 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@87 = @literal{0.00188817} -> float_type, {1}, {1}, target_id=0
@88 = @literal{ ... } -> int32_type, {256}, {1}, target_id=0
@89 = @literal{0.395168} -> float_type, {1}, {0}, target_id=0
@90 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@91 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@92 = @literal{0.00569332} -> float_type, {1}, {0}, target_id=0
@93 = @literal{ ... } -> int8_type, {256, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@94 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@95 = @literal{0.000692262} -> float_type, {1}, {1}, target_id=0
@96 = @literal{ ... } -> int32_type, {128}, {1}, target_id=0
@97 = @literal{0.331647} -> float_type, {1}, {0}, target_id=0
@98 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@99 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@100 = @literal{0.00350343} -> float_type, {1}, {0}, target_id=0
@101 = @literal{ ... } -> int8_type, {128, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@102 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@103 = @literal{0.000891812} -> float_type, {1}, {1}, target_id=0
@104 = @literal{ ... } -> int32_type, {128}, {1}, target_id=0
@105 = @literal{0.197596} -> float_type, {1}, {0}, target_id=0
@106 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@107 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@108 = @literal{0.00529674} -> float_type, {1}, {0}, target_id=0
@109 = @literal{ ... } -> int8_type, {128, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@110 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@111 = @literal{0.000335972} -> float_type, {1}, {1}, target_id=0
@112 = @literal{ ... } -> int32_type, {64}, {1}, target_id=0
@113 = @literal{0.16837} -> float_type, {1}, {0}, target_id=0
@114 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@115 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@116 = @literal{0.00454209} -> float_type, {1}, {0}, target_id=0
@117 = @literal{ ... } -> int8_type, {64, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@118 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@119 = @literal{0.000246135} -> float_type, {1}, {1}, target_id=0
@120 = @literal{ ... } -> int32_type, {64}, {1}, target_id=0
@121 = @literal{0.0739686} -> float_type, {1}, {0}, target_id=0
@122 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@123 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@124 = @literal{0.0131916} -> float_type, {1}, {0}, target_id=0
@125 = @literal{ ... } -> int8_type, {64, 3, 3, 3}, {27, 9, 3, 1}, target_id=0
@126 = @literal{0.0186584} -> float_type, {1}, {0}, target_id=0
@127 = @literal{114} -> uint8_type, {1}, {0}, target_id=0
@128 = @literal{ ... } -> float_type, {1000}, {1}, target_id=0
@129 = @literal{ ... } -> float_type, {4096}, {1}, target_id=0
@130 = @literal{ ... } -> float_type, {4096}, {1}, target_id=0
@131 = multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@126) -> float_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
@132 = multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@127) -> uint8_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
@133 = quantizelinear(data,@131,@132) -> uint8_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
@134 = multibroadcast[out_lens={64},out_dyn_dims={}](@119) -> float_type, {64}, {0}, target_id=0
@135 = multibroadcast[out_lens={64},out_dyn_dims={}](@118) -> int32_type, {64}, {0}, target_id=0
@136 = dequantizelinear(@120,@134,@135) -> float_type, {64}, {1}, target_id=0
@137 = multibroadcast[out_lens={64, 3, 3, 3},out_dyn_dims={}](@124) -> float_type, {64, 3, 3, 3}, {0, 0, 0, 0}, target_id=0
@138 = multibroadcast[out_lens={64, 3, 3, 3},out_dyn_dims={}](@123) -> int8_type, {64, 3, 3, 3}, {0, 0, 0, 0}, target_id=0
@139 = dequantizelinear(@125,@137,@138) -> float_type, {64, 3, 3, 3}, {27, 9, 3, 1}, target_id=0
@140 = multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@126) -> float_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
@141 = multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@127) -> uint8_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
@142 = dequantizelinear(@133,@140,@141) -> float_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
@143 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@142,@139) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@144 = broadcast[axis=1,out_lens={1, 64, 224, 224}](@136) -> float_type, {1, 64, 224, 224}, {0, 1, 0, 0}, target_id=0
@145 = add(@143,@144) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@146 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@121) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@147 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@122) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@148 = quantizelinear(@145,@146,@147) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@149 = multibroadcast[out_lens={64},out_dyn_dims={}](@111) -> float_type, {64}, {0}, target_id=0
@150 = multibroadcast[out_lens={64},out_dyn_dims={}](@110) -> int32_type, {64}, {0}, target_id=0
@151 = dequantizelinear(@112,@149,@150) -> float_type, {64}, {1}, target_id=0
@152 = multibroadcast[out_lens={64, 64, 3, 3},out_dyn_dims={}](@116) -> float_type, {64, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
@153 = multibroadcast[out_lens={64, 64, 3, 3},out_dyn_dims={}](@115) -> int8_type, {64, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
@154 = dequantizelinear(@117,@152,@153) -> float_type, {64, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@155 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@121) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@156 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@122) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@157 = dequantizelinear(@148,@155,@156) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@158 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@157,@154) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@159 = broadcast[axis=1,out_lens={1, 64, 224, 224}](@151) -> float_type, {1, 64, 224, 224}, {0, 1, 0, 0}, target_id=0
@160 = add(@158,@159) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@161 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@113) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@162 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@163 = quantizelinear(@160,@161,@162) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@164 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@113) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@165 = multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@166 = dequantizelinear(@163,@164,@165) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@167 = pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@166) -> float_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
@168 = multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@113) -> float_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
@169 = multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
@170 = quantizelinear(@167,@168,@169) -> uint8_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
@171 = multibroadcast[out_lens={128},out_dyn_dims={}](@103) -> float_type, {128}, {0}, target_id=0
@172 = multibroadcast[out_lens={128},out_dyn_dims={}](@102) -> int32_type, {128}, {0}, target_id=0
@173 = dequantizelinear(@104,@171,@172) -> float_type, {128}, {1}, target_id=0
@174 = multibroadcast[out_lens={128, 64, 3, 3},out_dyn_dims={}](@108) -> float_type, {128, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
@175 = multibroadcast[out_lens={128, 64, 3, 3},out_dyn_dims={}](@107) -> int8_type, {128, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
@176 = dequantizelinear(@109,@174,@175) -> float_type, {128, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@177 = multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@113) -> float_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
@178 = multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
@179 = dequantizelinear(@170,@177,@178) -> float_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
@180 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@179,@176) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@181 = broadcast[axis=1,out_lens={1, 128, 112, 112}](@173) -> float_type, {1, 128, 112, 112}, {0, 1, 0, 0}, target_id=0
@182 = add(@180,@181) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@183 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@105) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@184 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@106) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@185 = quantizelinear(@182,@183,@184) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@186 = multibroadcast[out_lens={128},out_dyn_dims={}](@95) -> float_type, {128}, {0}, target_id=0
@187 = multibroadcast[out_lens={128},out_dyn_dims={}](@94) -> int32_type, {128}, {0}, target_id=0
@188 = dequantizelinear(@96,@186,@187) -> float_type, {128}, {1}, target_id=0
@189 = multibroadcast[out_lens={128, 128, 3, 3},out_dyn_dims={}](@100) -> float_type, {128, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
@190 = multibroadcast[out_lens={128, 128, 3, 3},out_dyn_dims={}](@99) -> int8_type, {128, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
@191 = dequantizelinear(@101,@189,@190) -> float_type, {128, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@192 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@105) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@193 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@106) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@194 = dequantizelinear(@185,@192,@193) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@195 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@194,@191) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@196 = broadcast[axis=1,out_lens={1, 128, 112, 112}](@188) -> float_type, {1, 128, 112, 112}, {0, 1, 0, 0}, target_id=0
@197 = add(@195,@196) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@198 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@97) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@199 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@200 = quantizelinear(@197,@198,@199) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@201 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@97) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@202 = multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@203 = dequantizelinear(@200,@201,@202) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@204 = pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@203) -> float_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
@205 = multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@97) -> float_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
@206 = multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
@207 = quantizelinear(@204,@205,@206) -> uint8_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
@208 = multibroadcast[out_lens={256},out_dyn_dims={}](@87) -> float_type, {256}, {0}, target_id=0
@209 = multibroadcast[out_lens={256},out_dyn_dims={}](@86) -> int32_type, {256}, {0}, target_id=0
@210 = dequantizelinear(@88,@208,@209) -> float_type, {256}, {1}, target_id=0
@211 = multibroadcast[out_lens={256, 128, 3, 3},out_dyn_dims={}](@92) -> float_type, {256, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
@212 = multibroadcast[out_lens={256, 128, 3, 3},out_dyn_dims={}](@91) -> int8_type, {256, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
@213 = dequantizelinear(@93,@211,@212) -> float_type, {256, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@214 = multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@97) -> float_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
@215 = multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
@216 = dequantizelinear(@207,@214,@215) -> float_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
@217 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@216,@213) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@218 = broadcast[axis=1,out_lens={1, 256, 56, 56}](@210) -> float_type, {1, 256, 56, 56}, {0, 1, 0, 0}, target_id=0
@219 = add(@217,@218) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@220 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@89) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@221 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@90) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@222 = quantizelinear(@219,@220,@221) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@223 = multibroadcast[out_lens={256},out_dyn_dims={}](@79) -> float_type, {256}, {0}, target_id=0
@224 = multibroadcast[out_lens={256},out_dyn_dims={}](@78) -> int32_type, {256}, {0}, target_id=0
@225 = dequantizelinear(@80,@223,@224) -> float_type, {256}, {1}, target_id=0
@226 = multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@84) -> float_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@227 = multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@83) -> int8_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@228 = dequantizelinear(@85,@226,@227) -> float_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@229 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@89) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@230 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@90) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@231 = dequantizelinear(@222,@229,@230) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@232 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@231,@228) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@233 = broadcast[axis=1,out_lens={1, 256, 56, 56}](@225) -> float_type, {1, 256, 56, 56}, {0, 1, 0, 0}, target_id=0
@234 = add(@232,@233) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@235 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@81) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@236 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@82) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@237 = quantizelinear(@234,@235,@236) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@238 = multibroadcast[out_lens={256},out_dyn_dims={}](@71) -> float_type, {256}, {0}, target_id=0
@239 = multibroadcast[out_lens={256},out_dyn_dims={}](@70) -> int32_type, {256}, {0}, target_id=0
@240 = dequantizelinear(@72,@238,@239) -> float_type, {256}, {1}, target_id=0
@241 = multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@76) -> float_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@242 = multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@75) -> int8_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@243 = dequantizelinear(@77,@241,@242) -> float_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@244 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@81) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@245 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@82) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@246 = dequantizelinear(@237,@244,@245) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@247 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@246,@243) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@248 = broadcast[axis=1,out_lens={1, 256, 56, 56}](@240) -> float_type, {1, 256, 56, 56}, {0, 1, 0, 0}, target_id=0
@249 = add(@247,@248) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@250 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@73) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@251 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@252 = quantizelinear(@249,@250,@251) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@253 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@73) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@254 = multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@255 = dequantizelinear(@252,@253,@254) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@256 = pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@255) -> float_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
@257 = multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@73) -> float_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
@258 = multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
@259 = quantizelinear(@256,@257,@258) -> uint8_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
@260 = multibroadcast[out_lens={512},out_dyn_dims={}](@63) -> float_type, {512}, {0}, target_id=0
@261 = multibroadcast[out_lens={512},out_dyn_dims={}](@62) -> int32_type, {512}, {0}, target_id=0
@262 = dequantizelinear(@64,@260,@261) -> float_type, {512}, {1}, target_id=0
@263 = multibroadcast[out_lens={512, 256, 3, 3},out_dyn_dims={}](@68) -> float_type, {512, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@264 = multibroadcast[out_lens={512, 256, 3, 3},out_dyn_dims={}](@67) -> int8_type, {512, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@265 = dequantizelinear(@69,@263,@264) -> float_type, {512, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@266 = multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@73) -> float_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
@267 = multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
@268 = dequantizelinear(@259,@266,@267) -> float_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
@269 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@268,@265) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@270 = broadcast[axis=1,out_lens={1, 512, 28, 28}](@262) -> float_type, {1, 512, 28, 28}, {0, 1, 0, 0}, target_id=0
@271 = add(@269,@270) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@272 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@65) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@273 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@66) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@274 = quantizelinear(@271,@272,@273) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@275 = multibroadcast[out_lens={512},out_dyn_dims={}](@55) -> float_type, {512}, {0}, target_id=0
@276 = multibroadcast[out_lens={512},out_dyn_dims={}](@54) -> int32_type, {512}, {0}, target_id=0
@277 = dequantizelinear(@56,@275,@276) -> float_type, {512}, {1}, target_id=0
@278 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@60) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@279 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@59) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@280 = dequantizelinear(@61,@278,@279) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@281 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@65) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@282 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@66) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@283 = dequantizelinear(@274,@281,@282) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@284 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@283,@280) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@285 = broadcast[axis=1,out_lens={1, 512, 28, 28}](@277) -> float_type, {1, 512, 28, 28}, {0, 1, 0, 0}, target_id=0
@286 = add(@284,@285) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@287 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@57) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@288 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@58) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@289 = quantizelinear(@286,@287,@288) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@290 = multibroadcast[out_lens={512},out_dyn_dims={}](@47) -> float_type, {512}, {0}, target_id=0
@291 = multibroadcast[out_lens={512},out_dyn_dims={}](@46) -> int32_type, {512}, {0}, target_id=0
@292 = dequantizelinear(@48,@290,@291) -> float_type, {512}, {1}, target_id=0
@293 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@52) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@294 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@51) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@295 = dequantizelinear(@53,@293,@294) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@296 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@57) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@297 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@58) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@298 = dequantizelinear(@289,@296,@297) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@299 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@298,@295) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@300 = broadcast[axis=1,out_lens={1, 512, 28, 28}](@292) -> float_type, {1, 512, 28, 28}, {0, 1, 0, 0}, target_id=0
@301 = add(@299,@300) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@302 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@49) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@303 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@304 = quantizelinear(@301,@302,@303) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@305 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@49) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@306 = multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@307 = dequantizelinear(@304,@305,@306) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@308 = pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@307) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@309 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@49) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@310 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@311 = quantizelinear(@308,@309,@310) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@312 = multibroadcast[out_lens={512},out_dyn_dims={}](@39) -> float_type, {512}, {0}, target_id=0
@313 = multibroadcast[out_lens={512},out_dyn_dims={}](@38) -> int32_type, {512}, {0}, target_id=0
@314 = dequantizelinear(@40,@312,@313) -> float_type, {512}, {1}, target_id=0
@315 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@44) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@316 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@43) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@317 = dequantizelinear(@45,@315,@316) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@318 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@49) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@319 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@320 = dequantizelinear(@311,@318,@319) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@321 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@320,@317) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@322 = broadcast[axis=1,out_lens={1, 512, 14, 14}](@314) -> float_type, {1, 512, 14, 14}, {0, 1, 0, 0}, target_id=0
@323 = add(@321,@322) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@324 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@41) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@325 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@42) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@326 = quantizelinear(@323,@324,@325) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@327 = multibroadcast[out_lens={512},out_dyn_dims={}](@31) -> float_type, {512}, {0}, target_id=0
@328 = multibroadcast[out_lens={512},out_dyn_dims={}](@30) -> int32_type, {512}, {0}, target_id=0
@329 = dequantizelinear(@32,@327,@328) -> float_type, {512}, {1}, target_id=0
@330 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@36) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@331 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@35) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@332 = dequantizelinear(@37,@330,@331) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@333 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@41) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@334 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@42) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@335 = dequantizelinear(@326,@333,@334) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@336 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@335,@332) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@337 = broadcast[axis=1,out_lens={1, 512, 14, 14}](@329) -> float_type, {1, 512, 14, 14}, {0, 1, 0, 0}, target_id=0
@338 = add(@336,@337) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@339 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@33) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@340 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@34) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@341 = quantizelinear(@338,@339,@340) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@342 = multibroadcast[out_lens={512},out_dyn_dims={}](@23) -> float_type, {512}, {0}, target_id=0
@343 = multibroadcast[out_lens={512},out_dyn_dims={}](@22) -> int32_type, {512}, {0}, target_id=0
@344 = dequantizelinear(@24,@342,@343) -> float_type, {512}, {1}, target_id=0
@345 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@28) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@346 = multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@27) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@347 = dequantizelinear(@29,@345,@346) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@348 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@33) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@349 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@34) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@350 = dequantizelinear(@341,@348,@349) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@351 = convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@350,@347) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@352 = broadcast[axis=1,out_lens={1, 512, 14, 14}](@344) -> float_type, {1, 512, 14, 14}, {0, 1, 0, 0}, target_id=0
@353 = add(@351,@352) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@354 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@25) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@355 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@356 = quantizelinear(@353,@354,@355) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@357 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@25) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@358 = multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@359 = dequantizelinear(@356,@357,@358) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@360 = pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@359) -> float_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
@361 = multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@25) -> float_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
@362 = multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
@363 = quantizelinear(@360,@361,@362) -> uint8_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
@364 = multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@25) -> float_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
@365 = multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
@366 = dequantizelinear(@363,@364,@365) -> float_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
@367 = flatten[axis=1](@366) -> float_type, {1, 25088}, {25088, 1}, target_id=0
@368 = multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@20) -> float_type, {1, 25088}, {0, 0}, target_id=0
@369 = multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@21) -> uint8_type, {1, 25088}, {0, 0}, target_id=0
@370 = quantizelinear(@367,@368,@369) -> uint8_type, {1, 25088}, {25088, 1}, target_id=0
@371 = multibroadcast[out_lens={25088, 4096},out_dyn_dims={}](@18) -> float_type, {25088, 4096}, {0, 0}, target_id=0
@372 = multibroadcast[out_lens={25088, 4096},out_dyn_dims={}](@17) -> int8_type, {25088, 4096}, {0, 0}, target_id=0
@373 = dequantizelinear(@19,@371,@372) -> float_type, {25088, 4096}, {4096, 1}, target_id=0
@374 = multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@20) -> float_type, {1, 25088}, {0, 0}, target_id=0
@375 = multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@21) -> uint8_type, {1, 25088}, {0, 0}, target_id=0
@376 = dequantizelinear(@370,@374,@375) -> float_type, {1, 25088}, {25088, 1}, target_id=0
@377 = dot(@376,@373) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@378 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@15) -> float_type, {1, 4096}, {0, 0}, target_id=0
@379 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@16) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@380 = quantizelinear(@377,@378,@379) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@381 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@15) -> float_type, {1, 4096}, {0, 0}, target_id=0
@382 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@16) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@383 = dequantizelinear(@380,@381,@382) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@384 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@130) -> float_type, {1, 4096}, {0, 1}, target_id=0
@385 = add(@383,@384) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@386 = relu(@385) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@387 = flatten[axis=1](@386) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@388 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@13) -> float_type, {1, 4096}, {0, 0}, target_id=0
@389 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@14) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@390 = quantizelinear(@387,@388,@389) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@391 = multibroadcast[out_lens={4096, 4096},out_dyn_dims={}](@11) -> float_type, {4096, 4096}, {0, 0}, target_id=0
@392 = multibroadcast[out_lens={4096, 4096},out_dyn_dims={}](@10) -> int8_type, {4096, 4096}, {0, 0}, target_id=0
@393 = dequantizelinear(@12,@391,@392) -> float_type, {4096, 4096}, {4096, 1}, target_id=0
@394 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@13) -> float_type, {1, 4096}, {0, 0}, target_id=0
@395 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@14) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@396 = dequantizelinear(@390,@394,@395) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@397 = dot(@396,@393) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@398 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@8) -> float_type, {1, 4096}, {0, 0}, target_id=0
@399 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@9) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@400 = quantizelinear(@397,@398,@399) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@401 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@8) -> float_type, {1, 4096}, {0, 0}, target_id=0
@402 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@9) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@403 = dequantizelinear(@400,@401,@402) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@404 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@129) -> float_type, {1, 4096}, {0, 1}, target_id=0
@405 = add(@403,@404) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@406 = relu(@405) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@407 = flatten[axis=1](@406) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@408 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@6) -> float_type, {1, 4096}, {0, 0}, target_id=0
@409 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@7) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@410 = quantizelinear(@407,@408,@409) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@411 = multibroadcast[out_lens={4096, 1000},out_dyn_dims={}](@4) -> float_type, {4096, 1000}, {0, 0}, target_id=0
@412 = multibroadcast[out_lens={4096, 1000},out_dyn_dims={}](@3) -> int8_type, {4096, 1000}, {0, 0}, target_id=0
@413 = dequantizelinear(@5,@411,@412) -> float_type, {4096, 1000}, {1000, 1}, target_id=0
@414 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@6) -> float_type, {1, 4096}, {0, 0}, target_id=0
@415 = multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@7) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@416 = dequantizelinear(@410,@414,@415) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@417 = dot(@416,@413) -> float_type, {1, 1000}, {1000, 1}, target_id=0
@418 = multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@1) -> float_type, {1, 1000}, {0, 0}, target_id=0
@419 = multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@2) -> uint8_type, {1, 1000}, {0, 0}, target_id=0
@420 = quantizelinear(@417,@418,@419) -> uint8_type, {1, 1000}, {1000, 1}, target_id=0
@421 = multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@1) -> float_type, {1, 1000}, {0, 0}, target_id=0
@422 = multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@2) -> uint8_type, {1, 1000}, {0, 0}, target_id=0
@423 = dequantizelinear(@420,@421,@422) -> float_type, {1, 1000}, {1000, 1}, target_id=0
@424 = multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@128) -> float_type, {1, 1000}, {0, 1}, target_id=0
@425 = add(@423,@424) -> float_type, {1, 1000}, {1000, 1}, target_id=0
@426 = @return(@425), target_id=0


rms_tol: 0.001
atol: 0.001
rtol: 0.001
Run instruction: data = @param:data -> float_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
Time: 0.00742ms, 0.00752ms
Run instruction: @1 = @literal{0.20209} -> float_type, {1}, {0}, target_id=0
Time: 0.007771ms, 0.007821ms
Run instruction: @2 = @literal{53} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00033ms, 0.00036ms
Run instruction: @3 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00014ms, 0.00017ms
Run instruction: @4 = @literal{0.00104333} -> float_type, {1}, {0}, target_id=0
Time: 0.00012ms, 0.00015ms
Run instruction: @5 = @literal{ ... } -> int8_type, {4096, 1000}, {1000, 1}, target_id=0
Time: 1.88691ms, 1.88703ms
Run instruction: @6 = @literal{0.0450882} -> float_type, {1}, {0}, target_id=0
Time: 0.00027ms, 0.00031ms
Run instruction: @7 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00026ms, 0.00029ms
Run instruction: @8 = @literal{0.109745} -> float_type, {1}, {0}, target_id=0
Time: 0.00019ms, 0.00022ms
Run instruction: @9 = @literal{151} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00016ms, 0.00019ms
Run instruction: @10 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00013ms, 0.00016ms
Run instruction: @11 = @literal{0.000491461} -> float_type, {1}, {0}, target_id=0
Time: 0.00025ms, 0.00028ms
Run instruction: @12 = @literal{ ... } -> int8_type, {4096, 4096}, {4096, 1}, target_id=0
Time: 7.78744ms, 7.78757ms
Run instruction: @13 = @literal{0.0809295} -> float_type, {1}, {0}, target_id=0
Time: 0.00031ms, 0.00034ms
Run instruction: @14 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00023ms, 0.00026ms
Run instruction: @15 = @literal{0.209525} -> float_type, {1}, {0}, target_id=0
Time: 0.00016ms, 0.00019ms
Run instruction: @16 = @literal{157} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00017ms, 0.0002ms
Run instruction: @17 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00021ms, 0.00024ms
Run instruction: @18 = @literal{0.000378865} -> float_type, {1}, {0}, target_id=0
Time: 0.00023ms, 0.00026ms
Run instruction: @19 = @literal{ ... } -> int8_type, {25088, 4096}, {4096, 1}, target_id=0
Time: 53.1291ms, 53.1292ms
Run instruction: @20 = @literal{0.233266} -> float_type, {1}, {0}, target_id=0
Time: 0.00033ms, 0.00036ms
Run instruction: @21 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00019ms, 0.00022ms
Run instruction: @22 = @literal{0} -> int32_type, {1}, {1}, target_id=0
Time: 0.00015ms, 0.00018ms
Run instruction: @23 = @literal{0.000350484} -> float_type, {1}, {1}, target_id=0
Time: 0.00014ms, 0.00017ms
Run instruction: @24 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
Time: 0.00054ms, 0.00057ms
Run instruction: @25 = @literal{0.233266} -> float_type, {1}, {0}, target_id=0
Time: 0.00017ms, 0.00021ms
Run instruction: @26 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00017ms, 0.0002ms
Run instruction: @27 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00036ms, 0.00039ms
Run instruction: @28 = @literal{0.00123645} -> float_type, {1}, {0}, target_id=0
Time: 0.00017ms, 0.0002ms
Run instruction: @29 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 1.16374ms, 1.1638ms
Run instruction: @30 = @literal{0} -> int32_type, {1}, {1}, target_id=0
Time: 0.00025ms, 0.00029ms
Run instruction: @31 = @literal{0.000806395} -> float_type, {1}, {1}, target_id=0
Time: 0.00013ms, 0.00016ms
Run instruction: @32 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
Time: 0.00049ms, 0.00052ms
Run instruction: @33 = @literal{0.28346} -> float_type, {1}, {0}, target_id=0
Time: 0.00019ms, 0.00022ms
Run instruction: @34 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00021ms, 0.00024ms
Run instruction: @35 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00015ms, 0.00019ms
Run instruction: @36 = @literal{0.00173175} -> float_type, {1}, {0}, target_id=0
Time: 0.00018ms, 0.00021ms
Run instruction: @37 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 1.18414ms, 1.18425ms
Run instruction: @38 = @literal{0} -> int32_type, {1}, {1}, target_id=0
Time: 0.00023ms, 0.00026ms
Run instruction: @39 = @literal{0.000786583} -> float_type, {1}, {1}, target_id=0
Time: 0.00013ms, 0.00017ms
Run instruction: @40 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
Time: 0.002891ms, 0.002921ms
Run instruction: @41 = @literal{0.465653} -> float_type, {1}, {0}, target_id=0
Time: 0.00017ms, 0.0002ms
Run instruction: @42 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00035ms, 0.00038ms
Run instruction: @43 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00032ms, 0.00035ms
Run instruction: @44 = @literal{0.0022082} -> float_type, {1}, {0}, target_id=0
Time: 0.0003ms, 0.00033ms
Run instruction: @45 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 1.18105ms, 1.18116ms
Run instruction: @46 = @literal{0} -> int32_type, {1}, {1}, target_id=0
Time: 0.00024ms, 0.00027ms
Run instruction: @47 = @literal{0.000870825} -> float_type, {1}, {1}, target_id=0
Time: 0.00016ms, 0.00019ms
Run instruction: @48 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
Time: 0.0004ms, 0.00044ms
Run instruction: @49 = @literal{0.35621} -> float_type, {1}, {0}, target_id=0
Time: 0.00016ms, 0.00019ms
Run instruction: @50 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.0002ms, 0.00023ms
Run instruction: @51 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00014ms, 0.00017ms
Run instruction: @52 = @literal{0.00212013} -> float_type, {1}, {0}, target_id=0
Time: 0.00019ms, 0.00022ms
Run instruction: @53 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 1.16942ms, 1.16952ms
Run instruction: @54 = @literal{0} -> int32_type, {1}, {1}, target_id=0
Time: 0.00023ms, 0.00026ms
Run instruction: @55 = @literal{0.000925222} -> float_type, {1}, {1}, target_id=0
Time: 0.00014ms, 0.00017ms
Run instruction: @56 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
Time: 0.00279ms, 0.00283ms
Run instruction: @57 = @literal{0.41074} -> float_type, {1}, {0}, target_id=0
Time: 0.00028ms, 0.00032ms
Run instruction: @58 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00017ms, 0.0002ms
Run instruction: @59 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00025ms, 0.00028ms
Run instruction: @60 = @literal{0.00197858} -> float_type, {1}, {0}, target_id=0
Time: 0.00018ms, 0.00021ms
Run instruction: @61 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 1.18233ms, 1.18243ms
Run instruction: @62 = @literal{0} -> int32_type, {1}, {1}, target_id=0
Time: 0.00026ms, 0.00029ms
Run instruction: @63 = @literal{0.00145504} -> float_type, {1}, {1}, target_id=0
Time: 0.00032ms, 0.00035ms
Run instruction: @64 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
Time: 0.00058ms, 0.00062ms
Run instruction: @65 = @literal{0.46762} -> float_type, {1}, {0}, target_id=0
Time: 0.00014ms, 0.00017ms
Run instruction: @66 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00018ms, 0.00021ms
Run instruction: @67 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00016ms, 0.00019ms
Run instruction: @68 = @literal{0.00364695} -> float_type, {1}, {0}, target_id=0
Time: 0.00025ms, 0.00028ms
Run instruction: @69 = @literal{ ... } -> int8_type, {512, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
Time: 0.585712ms, 0.585782ms
Run instruction: @70 = @literal{0} -> int32_type, {1}, {1}, target_id=0
Time: 0.00036ms, 0.00039ms
Run instruction: @71 = @literal{0.0016644} -> float_type, {1}, {1}, target_id=0
Time: 0.00016ms, 0.00019ms
Run instruction: @72 = @literal{ ... } -> int32_type, {256}, {1}, target_id=0
Time: 0.00036ms, 0.00039ms
Run instruction: @73 = @literal{0.398974} -> float_type, {1}, {0}, target_id=0
Time: 0.00022ms, 0.00025ms
Run instruction: @74 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00017ms, 0.0002ms
Run instruction: @75 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00021ms, 0.00024ms
Run instruction: @76 = @literal{0.00450157} -> float_type, {1}, {0}, target_id=0
Time: 0.00017ms, 0.0002ms
Run instruction: @77 = @literal{ ... } -> int8_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
Time: 0.286396ms, 0.286476ms
Run instruction: @78 = @literal{0} -> int32_type, {1}, {1}, target_id=0
Time: 0.00027ms, 0.00031ms
Run instruction: @79 = @literal{0.00167394} -> float_type, {1}, {1}, target_id=0
Time: 0.00033ms, 0.00036ms
Run instruction: @80 = @literal{ ... } -> int32_type, {256}, {1}, target_id=0
Time: 0.00038ms, 0.00042ms
Run instruction: @81 = @literal{0.369739} -> float_type, {1}, {0}, target_id=0
Time: 0.00014ms, 0.00017ms
Run instruction: @82 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00025ms, 0.00029ms
Run instruction: @83 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00016ms, 0.00019ms
Run instruction: @84 = @literal{0.00423602} -> float_type, {1}, {0}, target_id=0
Time: 0.00039ms, 0.00042ms
Run instruction: @85 = @literal{ ... } -> int8_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
Time: 0.284756ms, 0.284816ms
Run instruction: @86 = @literal{0} -> int32_type, {1}, {1}, target_id=0
Time: 0.0002ms, 0.00023ms
Run instruction: @87 = @literal{0.00188817} -> float_type, {1}, {1}, target_id=0
Time: 0.00023ms, 0.00026ms
Run instruction: @88 = @literal{ ... } -> int32_type, {256}, {1}, target_id=0
Time: 0.00033ms, 0.00037ms
Run instruction: @89 = @literal{0.395168} -> float_type, {1}, {0}, target_id=0
Time: 0.0002ms, 0.00023ms
Run instruction: @90 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00017ms, 0.0002ms
Run instruction: @91 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00024ms, 0.00028ms
Run instruction: @92 = @literal{0.00569332} -> float_type, {1}, {0}, target_id=0
Time: 0.00018ms, 0.00021ms
Run instruction: @93 = @literal{ ... } -> int8_type, {256, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
Time: 0.144293ms, 0.144373ms
Run instruction: @94 = @literal{0} -> int32_type, {1}, {1}, target_id=0
Time: 0.00028ms, 0.00031ms
Run instruction: @95 = @literal{0.000692262} -> float_type, {1}, {1}, target_id=0
Time: 0.00022ms, 0.00025ms
Run instruction: @96 = @literal{ ... } -> int32_type, {128}, {1}, target_id=0
Time: 0.00029ms, 0.00032ms
Run instruction: @97 = @literal{0.331647} -> float_type, {1}, {0}, target_id=0
Time: 0.0002ms, 0.00023ms
Run instruction: @98 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00023ms, 0.00027ms
Run instruction: @99 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00029ms, 0.00032ms
Run instruction: @100 = @literal{0.00350343} -> float_type, {1}, {0}, target_id=0
Time: 0.00025ms, 0.00028ms
Run instruction: @101 = @literal{ ... } -> int8_type, {128, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
Time: 0.075641ms, 0.075701ms
Run instruction: @102 = @literal{0} -> int32_type, {1}, {1}, target_id=0
Time: 0.00028ms, 0.00031ms
Run instruction: @103 = @literal{0.000891812} -> float_type, {1}, {1}, target_id=0
Time: 0.00031ms, 0.00034ms
Run instruction: @104 = @literal{ ... } -> int32_type, {128}, {1}, target_id=0
Time: 0.00036ms, 0.00039ms
Run instruction: @105 = @literal{0.197596} -> float_type, {1}, {0}, target_id=0
Time: 0.00026ms, 0.00029ms
Run instruction: @106 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.0002ms, 0.00023ms
Run instruction: @107 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00032ms, 0.00035ms
Run instruction: @108 = @literal{0.00529674} -> float_type, {1}, {0}, target_id=0
Time: 0.00023ms, 0.00026ms
Run instruction: @109 = @literal{ ... } -> int8_type, {128, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
Time: 0.03405ms, 0.0341ms
Run instruction: @110 = @literal{0} -> int32_type, {1}, {1}, target_id=0
Time: 0.00025ms, 0.00029ms
Run instruction: @111 = @literal{0.000335972} -> float_type, {1}, {1}, target_id=0
Time: 0.00015ms, 0.00018ms
Run instruction: @112 = @literal{ ... } -> int32_type, {64}, {1}, target_id=0
Time: 0.00031ms, 0.00034ms
Run instruction: @113 = @literal{0.16837} -> float_type, {1}, {0}, target_id=0
Time: 0.00014ms, 0.00017ms
Run instruction: @114 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.0003ms, 0.00033ms
Run instruction: @115 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00021ms, 0.00024ms
Run instruction: @116 = @literal{0.00454209} -> float_type, {1}, {0}, target_id=0
Time: 0.00028ms, 0.00031ms
Run instruction: @117 = @literal{ ... } -> int8_type, {64, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
Time: 0.01793ms, 0.01799ms
Run instruction: @118 = @literal{0} -> int32_type, {1}, {1}, target_id=0
Time: 0.00027ms, 0.0003ms
Run instruction: @119 = @literal{0.000246135} -> float_type, {1}, {1}, target_id=0
Time: 0.00022ms, 0.00025ms
Run instruction: @120 = @literal{ ... } -> int32_type, {64}, {1}, target_id=0
Time: 0.00028ms, 0.00031ms
Run instruction: @121 = @literal{0.0739686} -> float_type, {1}, {0}, target_id=0
Time: 0.00028ms, 0.00031ms
Run instruction: @122 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00016ms, 0.00019ms
Run instruction: @123 = @literal{0} -> int8_type, {1}, {0}, target_id=0
Time: 0.00022ms, 0.00025ms
Run instruction: @124 = @literal{0.0131916} -> float_type, {1}, {0}, target_id=0
Time: 0.00025ms, 0.00028ms
Run instruction: @125 = @literal{ ... } -> int8_type, {64, 3, 3, 3}, {27, 9, 3, 1}, target_id=0
Time: 0.00059ms, 0.00062ms
Run instruction: @126 = @literal{0.0186584} -> float_type, {1}, {0}, target_id=0
Time: 0.00028ms, 0.00031ms
Run instruction: @127 = @literal{114} -> uint8_type, {1}, {0}, target_id=0
Time: 0.00026ms, 0.00029ms
Run instruction: @128 = @literal{ ... } -> float_type, {1000}, {1}, target_id=0
Time: 0.00245ms, 0.00248ms
Run instruction: @129 = @literal{ ... } -> float_type, {4096}, {1}, target_id=0
Time: 0.00762ms, 0.00767ms
Run instruction: @130 = @literal{ ... } -> float_type, {4096}, {1}, target_id=0
Time: 0.016091ms, 0.016131ms
Run instruction: @131 = ref::multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@126) -> float_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
Time: 0.028211ms, 0.028271ms
Output has normal
Output: 0.0186584, 0.0186584, 0.0186584, 0.0186584, 0.0186584, ..., 0.0186584, 0.0186584, 0.0186584, 0.0186584, 0.0186584
Min value: 0.0186584, Max value: 0.0186584, Mean: 0.0186584, StdDev: 0
Run instruction: @132 = ref::contiguous(@131) -> float_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
Time: 3.62957ms, 3.62964ms
Output has normal
Output: 0.0186584, 0.0186584, 0.0186584, 0.0186584, 0.0186584, ..., 0.0186584, 0.0186584, 0.0186584, 0.0186584, 0.0186584
Min value: 0.0186584, Max value: 0.0186584, Mean: 0.0186584, StdDev: 0
Run instruction: @133 = ref::multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@127) -> uint8_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
Time: 0.00161ms, 0.00165ms
Output has normal
Output: r, r, r, r, r, ..., r, r, r, r, r
Min value: r, Max value: r, Mean: 114, StdDev: 0
Run instruction: @134 = ref::contiguous(@133) -> uint8_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
Time: 3.43793ms, 3.438ms
Output has normal
Output: r, r, r, r, r, ..., r, r, r, r, r
Min value: r, Max value: r, Mean: 114, StdDev: 0
Run instruction: @135 = ref::quantizelinear(data,@132,@134) -> uint8_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
Time: 3.81887ms, 3.81903ms
Output has normal
Output: , �, �, �, �, ..., �, M, �, �, �
Min value: <, Max value: �, Mean: 112.326, StdDev: 30.9577
Run instruction: @136 = ref::multibroadcast[out_lens={64},out_dyn_dims={}](@119) -> float_type, {64}, {0}, target_id=0
Time: 0.00238ms, 0.00242ms
Output has normal
Output: 0.000246135, 0.000246135, 0.000246135, 0.000246135, 0.000246135, ..., 0.000246135, 0.000246135, 0.000246135, 0.000246135, 0.000246135
Min value: 0.000246135, Max value: 0.000246135, Mean: 0.000246135, StdDev: 0
Run instruction: @137 = ref::contiguous(@136) -> float_type, {64}, {1}, target_id=0
Time: 0.00538ms, 0.00541ms
Output has normal
Output: 0.000246135, 0.000246135, 0.000246135, 0.000246135, 0.000246135, ..., 0.000246135, 0.000246135, 0.000246135, 0.000246135, 0.000246135
Min value: 0.000246135, Max value: 0.000246135, Mean: 0.000246135, StdDev: 0
Run instruction: @138 = ref::multibroadcast[out_lens={64},out_dyn_dims={}](@118) -> int32_type, {64}, {0}, target_id=0
Time: 0.0009ms, 0.00093ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @139 = ref::contiguous(@138) -> int32_type, {64}, {1}, target_id=0
Time: 0.00657ms, 0.0066ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @140 = ref::dequantizelinear(@120,@137,@139) -> float_type, {64}, {1}, target_id=0
Time: 0.360078ms, 0.360208ms
Output has normal
Output: -0.395539, 0.292162, -0.326621, 0.291424, 0.0659642, ..., -0.284532, -0.686963, 0.191247, 0.238751, 0.312838
Min value: -1.26661, Max value: 0.59417, Mean: -0.0145412, StdDev: 0.451844
Run instruction: @141 = ref::multibroadcast[out_lens={64, 3, 3, 3},out_dyn_dims={}](@124) -> float_type, {64, 3, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00188ms, 0.00192ms
Output has normal
Output: 0.0131916, 0.0131916, 0.0131916, 0.0131916, 0.0131916, ..., 0.0131916, 0.0131916, 0.0131916, 0.0131916, 0.0131916
Min value: 0.0131916, Max value: 0.0131916, Mean: 0.0131916, StdDev: 0
Run instruction: @142 = ref::contiguous(@141) -> float_type, {64, 3, 3, 3}, {27, 9, 3, 1}, target_id=0
Time: 0.039891ms, 0.039921ms
Output has normal
Output: 0.0131916, 0.0131916, 0.0131916, 0.0131916, 0.0131916, ..., 0.0131916, 0.0131916, 0.0131916, 0.0131916, 0.0131916
Min value: 0.0131916, Max value: 0.0131916, Mean: 0.0131916, StdDev: 0
Run instruction: @143 = ref::multibroadcast[out_lens={64, 3, 3, 3},out_dyn_dims={}](@123) -> int8_type, {64, 3, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00095ms, 0.00098ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @144 = ref::contiguous(@143) -> int8_type, {64, 3, 3, 3}, {27, 9, 3, 1}, target_id=0
Time: 0.040201ms, 0.040231ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @145 = ref::dequantizelinear(@125,@142,@144) -> float_type, {64, 3, 3, 3}, {27, 9, 3, 1}, target_id=0
Time: 2.649ms, 2.64915ms
Output has zero, normal
Output: 0.197874, 0.118725, 0.0131916, 0.145108, 0.0395748, ..., -0.395748, 0.0131916, -0.131916, -0.0395748, 0
Min value: -1.33235, Max value: 1.67534, Mean: -0.00117564, StdDev: 0.258978
Run instruction: @146 = ref::multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@126) -> float_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
Time: 0.00195ms, 0.00199ms
Output has normal
Output: 0.0186584, 0.0186584, 0.0186584, 0.0186584, 0.0186584, ..., 0.0186584, 0.0186584, 0.0186584, 0.0186584, 0.0186584
Min value: 0.0186584, Max value: 0.0186584, Mean: 0.0186584, StdDev: 0
Run instruction: @147 = ref::contiguous(@146) -> float_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
Time: 3.42212ms, 3.42218ms
Output has normal
Output: 0.0186584, 0.0186584, 0.0186584, 0.0186584, 0.0186584, ..., 0.0186584, 0.0186584, 0.0186584, 0.0186584, 0.0186584
Min value: 0.0186584, Max value: 0.0186584, Mean: 0.0186584, StdDev: 0
Run instruction: @148 = ref::multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@127) -> uint8_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
Time: 0.00137ms, 0.0014ms
Output has normal
Output: r, r, r, r, r, ..., r, r, r, r, r
Min value: r, Max value: r, Mean: 114, StdDev: 0
Run instruction: @149 = ref::contiguous(@148) -> uint8_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
Time: 3.35672ms, 3.35678ms
Output has normal
Output: r, r, r, r, r, ..., r, r, r, r, r
Min value: r, Max value: r, Mean: 114, StdDev: 0
Run instruction: @150 = ref::dequantizelinear(@135,@147,@149) -> float_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
Time: 3.47911ms, 3.47925ms
Output has zero, normal
Output: 0.24256, 0.746338, 0.932922, 0.429144, 0.690363, ..., 0.932922, -0.690363, 0.746338, 0.820972, 0.820972
Min value: -1.00756, Max value: 0.932922, Mean: -0.031237, StdDev: 0.577622
Run instruction: @151 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@150,@145) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 140.686ms, 140.687ms
Output has zero, normal
Output: 0.400708, 0.504085, 0.325144, 0.412768, 0.269026, ..., -0.472333, 1.03057, -0.482179, -0.0543959, 0.018214
Min value: -5.56265, Max value: 5.09549, Mean: 0.00113624, StdDev: 0.773886
Run instruction: @152 = ref::broadcast[axis=1,out_lens={1, 64, 224, 224}](@140) -> float_type, {1, 64, 224, 224}, {0, 1, 0, 0}, target_id=0
Time: 0.021381ms, 0.021431ms
Output has normal
Output: -0.395539, -0.395539, -0.395539, -0.395539, -0.395539, ..., 0.312838, 0.312838, 0.312838, 0.312838, 0.312838
Min value: -1.26661, Max value: 0.59417, Mean: -0.0145412, StdDev: 0.451844
Run instruction: @153 = ref::contiguous(@152) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 73.9945ms, 73.995ms
Output has normal
Output: -0.395539, -0.395539, -0.395539, -0.395539, -0.395539, ..., 0.312838, 0.312838, 0.312838, 0.312838, 0.312838
Min value: -1.26661, Max value: 0.59417, Mean: -0.0145412, StdDev: 0.451844
Run instruction: @154 = ref::add(@151,@153) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 23.7754ms, 23.7758ms
Output has zero, normal
Output: 0.00516883, 0.108546, -0.0703946, 0.0172295, -0.126513, ..., -0.159496, 1.34341, -0.169341, 0.258442, 0.331052
Min value: -5.0726, Max value: 5.46272, Mean: -0.013405, StdDev: 0.895092
Run instruction: @155 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@121) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
Time: 0.007391ms, 0.007431ms
Output has normal
Output: 0.0739686, 0.0739686, 0.0739686, 0.0739686, 0.0739686, ..., 0.0739686, 0.0739686, 0.0739686, 0.0739686, 0.0739686
Min value: 0.0739686, Max value: 0.0739686, Mean: 0.0739686, StdDev: 0
Run instruction: @156 = ref::contiguous(@155) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 74.3344ms, 74.3346ms
Output has normal
Output: 0.0739686, 0.0739686, 0.0739686, 0.0739686, 0.0739686, ..., 0.0739686, 0.0739686, 0.0739686, 0.0739686, 0.0739686
Min value: 0.0739686, Max value: 0.0739686, Mean: 0.0739686, StdDev: 0
Run instruction: @157 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@122) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
Time: 0.020721ms, 0.020761ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @158 = ref::contiguous(@157) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 76.1275ms, 76.1278ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @159 = ref::quantizelinear(@154,@156,@158) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 6.28388ms, 6.28402ms
Output has normal, zero
Output:  , ,  ,  ,  , ...,  , ,  , , 
Min value:  , Max value: J, Mean: 4.5678, StdDev: 7.69179
Run instruction: @160 = ref::multibroadcast[out_lens={64},out_dyn_dims={}](@111) -> float_type, {64}, {0}, target_id=0
Time: 0.01641ms, 0.01647ms
Output has normal
Output: 0.000335972, 0.000335972, 0.000335972, 0.000335972, 0.000335972, ..., 0.000335972, 0.000335972, 0.000335972, 0.000335972, 0.000335972
Min value: 0.000335972, Max value: 0.000335972, Mean: 0.000335972, StdDev: 0
Run instruction: @161 = ref::contiguous(@160) -> float_type, {64}, {1}, target_id=0
Time: 0.032831ms, 0.032881ms
Output has normal
Output: 0.000335972, 0.000335972, 0.000335972, 0.000335972, 0.000335972, ..., 0.000335972, 0.000335972, 0.000335972, 0.000335972, 0.000335972
Min value: 0.000335972, Max value: 0.000335972, Mean: 0.000335972, StdDev: 0
Run instruction: @162 = ref::multibroadcast[out_lens={64},out_dyn_dims={}](@110) -> int32_type, {64}, {0}, target_id=0
Time: 0.00206ms, 0.0021ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @163 = ref::contiguous(@162) -> int32_type, {64}, {1}, target_id=0
Time: 0.01822ms, 0.01826ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @164 = ref::dequantizelinear(@112,@161,@163) -> float_type, {64}, {1}, target_id=0
Time: 0.328277ms, 0.328407ms
Output has normal
Output: 0.634987, -0.467001, -0.119606, -0.215694, 0.0883606, ..., -0.00201583, -0.206287, 0.410558, 0.114566, -0.0423325
Min value: -0.611469, Max value: 0.634987, Mean: 0.094954, StdDev: 0.227692
Run instruction: @165 = ref::multibroadcast[out_lens={64, 64, 3, 3},out_dyn_dims={}](@116) -> float_type, {64, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00216ms, 0.00219ms
Output has normal
Output: 0.00454209, 0.00454209, 0.00454209, 0.00454209, 0.00454209, ..., 0.00454209, 0.00454209, 0.00454209, 0.00454209, 0.00454209
Min value: 0.00454209, Max value: 0.00454209, Mean: 0.00454209, StdDev: 0
Run instruction: @166 = ref::contiguous(@165) -> float_type, {64, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
Time: 0.97059ms, 0.97066ms
Output has normal
Output: 0.00454209, 0.00454209, 0.00454209, 0.00454209, 0.00454209, ..., 0.00454209, 0.00454209, 0.00454209, 0.00454209, 0.00454209
Min value: 0.00454209, Max value: 0.00454209, Mean: 0.00454209, StdDev: 0
Run instruction: @167 = ref::multibroadcast[out_lens={64, 64, 3, 3},out_dyn_dims={}](@115) -> int8_type, {64, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00881ms, 0.00886ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @168 = ref::contiguous(@167) -> int8_type, {64, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
Time: 0.847707ms, 0.847767ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @169 = ref::dequantizelinear(@117,@166,@168) -> float_type, {64, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
Time: 3.10579ms, 3.10593ms
Output has zero, normal
Output: 0.0181683, -0.0136263, -0.0227104, 0.00908417, -0.0454209, ..., -0.0317946, -0.122636, 0.049963, 0.0272525, -0.049963
Min value: -0.54505, Max value: 0.576845, Mean: -0.00287885, StdDev: 0.0570212
Run instruction: @170 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@121) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
Time: 0.00717ms, 0.00721ms
Output has normal
Output: 0.0739686, 0.0739686, 0.0739686, 0.0739686, 0.0739686, ..., 0.0739686, 0.0739686, 0.0739686, 0.0739686, 0.0739686
Min value: 0.0739686, Max value: 0.0739686, Mean: 0.0739686, StdDev: 0
Run instruction: @171 = ref::contiguous(@170) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 74.1459ms, 74.1464ms
Output has normal
Output: 0.0739686, 0.0739686, 0.0739686, 0.0739686, 0.0739686, ..., 0.0739686, 0.0739686, 0.0739686, 0.0739686, 0.0739686
Min value: 0.0739686, Max value: 0.0739686, Mean: 0.0739686, StdDev: 0
Run instruction: @172 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@122) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
Time: 0.00358ms, 0.00362ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @173 = ref::contiguous(@172) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 70.1769ms, 70.177ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @174 = ref::dequantizelinear(@159,@171,@173) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 15.8891ms, 15.8894ms
Output has normal, zero
Output: 0, 0.0739686, 0, 0, 0, ..., 0, 1.33143, 0, 0.221906, 0.295874
Min value: 0, Max value: 5.47368, Mean: 0.337874, StdDev: 0.568951
Run instruction: @175 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@174,@169) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 2092.74ms, 2092.75ms
Output has normal
Output: 1.24175, -2.14518, -1.25956, 1.53976, -0.466665, ..., -0.124645, 0.0604749, -0.265418, 1.29316, 1.74
Min value: -16.932, Max value: 15.2918, Mean: -0.412159, StdDev: 2.40115
Run instruction: @176 = ref::broadcast[axis=1,out_lens={1, 64, 224, 224}](@164) -> float_type, {1, 64, 224, 224}, {0, 1, 0, 0}, target_id=0
Time: 0.019081ms, 0.019191ms
Output has normal
Output: 0.634987, 0.634987, 0.634987, 0.634987, 0.634987, ..., -0.0423325, -0.0423325, -0.0423325, -0.0423325, -0.0423325
Min value: -0.611469, Max value: 0.634987, Mean: 0.094954, StdDev: 0.227692
Run instruction: @177 = ref::contiguous(@176) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 74.209ms, 74.2093ms
Output has normal
Output: 0.634987, 0.634987, 0.634987, 0.634987, 0.634987, ..., -0.0423325, -0.0423325, -0.0423325, -0.0423325, -0.0423325
Min value: -0.611469, Max value: 0.634987, Mean: 0.094954, StdDev: 0.227692
Run instruction: @178 = ref::add(@175,@177) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 23.8982ms, 23.8991ms
Output has zero, normal
Output: 1.87674, -1.51019, -0.624572, 2.17475, 0.168322, ..., -0.166978, 0.0181425, -0.30775, 1.25082, 1.69767
Min value: -16.7986, Max value: 15.3509, Mean: -0.317205, StdDev: 2.4119
Run instruction: @179 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@113) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
Time: 0.00762ms, 0.00773ms
Output has normal
Output: 0.16837, 0.16837, 0.16837, 0.16837, 0.16837, ..., 0.16837, 0.16837, 0.16837, 0.16837, 0.16837
Min value: 0.16837, Max value: 0.16837, Mean: 0.16837, StdDev: 0
Run instruction: @180 = ref::contiguous(@179) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 73.314ms, 73.3146ms
Output has normal
Output: 0.16837, 0.16837, 0.16837, 0.16837, 0.16837, ..., 0.16837, 0.16837, 0.16837, 0.16837, 0.16837
Min value: 0.16837, Max value: 0.16837, Mean: 0.16837, StdDev: 0
Run instruction: @181 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
Time: 0.0043ms, 0.00435ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @182 = ref::contiguous(@181) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 71.4462ms, 71.4463ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @183 = ref::quantizelinear(@178,@180,@182) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 6.31142ms, 6.31175ms
Output has zero, normal
Output: ,  ,  , 
, , ...,  ,  ,  , , 

Min value:  , Max value: [, Mean: 4.60459, StdDev: 7.98004
Run instruction: @184 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@113) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
Time: 0.00669ms, 0.00681ms
Output has normal
Output: 0.16837, 0.16837, 0.16837, 0.16837, 0.16837, ..., 0.16837, 0.16837, 0.16837, 0.16837, 0.16837
Min value: 0.16837, Max value: 0.16837, Mean: 0.16837, StdDev: 0
Run instruction: @185 = ref::contiguous(@184) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 73.3167ms, 73.3169ms
Output has normal
Output: 0.16837, 0.16837, 0.16837, 0.16837, 0.16837, ..., 0.16837, 0.16837, 0.16837, 0.16837, 0.16837
Min value: 0.16837, Max value: 0.16837, Mean: 0.16837, StdDev: 0
Run instruction: @186 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
Time: 0.00301ms, 0.00305ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @187 = ref::contiguous(@186) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 70.1714ms, 70.1714ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @188 = ref::dequantizelinear(@183,@185,@187) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 14.6217ms, 14.6224ms
Output has zero, normal
Output: 1.85207, 0, 0, 2.18881, 0.16837, ..., 0, 0, 0, 1.17859, 1.6837
Min value: 0, Max value: 15.3217, Mean: 0.775275, StdDev: 1.3436
Run instruction: @189 = ref::pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@188) -> float_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
Time: 14.9139ms, 14.914ms
Output has zero, normal
Output: 1.85207, 2.18881, 2.52555, 2.52555, 1.01022, ..., 0, 1.51533, 0, 1.17859, 2.52555
Min value: 0, Max value: 15.3217, Mean: 1.81184, StdDev: 1.7966
Run instruction: @190 = ref::multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@113) -> float_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
Time: 0.01102ms, 0.01108ms
Output has normal
Output: 0.16837, 0.16837, 0.16837, 0.16837, 0.16837, ..., 0.16837, 0.16837, 0.16837, 0.16837, 0.16837
Min value: 0.16837, Max value: 0.16837, Mean: 0.16837, StdDev: 0
Run instruction: @191 = ref::contiguous(@190) -> float_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
Time: 17.0674ms, 17.0675ms
Output has normal
Output: 0.16837, 0.16837, 0.16837, 0.16837, 0.16837, ..., 0.16837, 0.16837, 0.16837, 0.16837, 0.16837
Min value: 0.16837, Max value: 0.16837, Mean: 0.16837, StdDev: 0
Run instruction: @192 = ref::multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
Time: 0.004211ms, 0.004251ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @193 = ref::contiguous(@192) -> uint8_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
Time: 17.7022ms, 17.7023ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @194 = ref::quantizelinear(@189,@191,@193) -> uint8_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
Time: 3.06837ms, 3.06854ms
Output has zero, normal
Output: , 
, , , , ...,  , 	,  , , 
Min value:  , Max value: [, Mean: 10.761, StdDev: 10.6705
Run instruction: @195 = ref::multibroadcast[out_lens={128},out_dyn_dims={}](@103) -> float_type, {128}, {0}, target_id=0
Time: 0.00291ms, 0.00294ms
Output has normal
Output: 0.000891812, 0.000891812, 0.000891812, 0.000891812, 0.000891812, ..., 0.000891812, 0.000891812, 0.000891812, 0.000891812, 0.000891812
Min value: 0.000891812, Max value: 0.000891812, Mean: 0.000891812, StdDev: 0
Run instruction: @196 = ref::contiguous(@195) -> float_type, {128}, {1}, target_id=0
Time: 0.00622ms, 0.00625ms
Output has normal
Output: 0.000891812, 0.000891812, 0.000891812, 0.000891812, 0.000891812, ..., 0.000891812, 0.000891812, 0.000891812, 0.000891812, 0.000891812
Min value: 0.000891812, Max value: 0.000891812, Mean: 0.000891812, StdDev: 0
Run instruction: @197 = ref::multibroadcast[out_lens={128},out_dyn_dims={}](@102) -> int32_type, {128}, {0}, target_id=0
Time: 0.00123ms, 0.00126ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @198 = ref::contiguous(@197) -> int32_type, {128}, {1}, target_id=0
Time: 0.01088ms, 0.01093ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @199 = ref::dequantizelinear(@104,@196,@198) -> float_type, {128}, {1}, target_id=0
Time: 0.664774ms, 0.664944ms
Output has zero, normal
Output: 0.230088, 0.148041, 0.0722368, -0.227412, 0.11326, ..., 0.0606432, 0.131988, -0.0624269, 0.0115936, 0.0972075
Min value: -0.234547, Max value: 0.28538, Mean: 0.0759852, StdDev: 0.101926
Run instruction: @200 = ref::multibroadcast[out_lens={128, 64, 3, 3},out_dyn_dims={}](@108) -> float_type, {128, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00209ms, 0.00212ms
Output has normal
Output: 0.00529674, 0.00529674, 0.00529674, 0.00529674, 0.00529674, ..., 0.00529674, 0.00529674, 0.00529674, 0.00529674, 0.00529674
Min value: 0.00529674, Max value: 0.00529674, Mean: 0.00529674, StdDev: 0
Run instruction: @201 = ref::contiguous(@200) -> float_type, {128, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
Time: 1.56556ms, 1.56561ms
Output has normal
Output: 0.00529674, 0.00529674, 0.00529674, 0.00529674, 0.00529674, ..., 0.00529674, 0.00529674, 0.00529674, 0.00529674, 0.00529674
Min value: 0.00529674, Max value: 0.00529674, Mean: 0.00529674, StdDev: 0
Run instruction: @202 = ref::multibroadcast[out_lens={128, 64, 3, 3},out_dyn_dims={}](@107) -> int8_type, {128, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00116ms, 0.00119ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @203 = ref::contiguous(@202) -> int8_type, {128, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
Time: 1.55429ms, 1.55435ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @204 = ref::dequantizelinear(@109,@201,@203) -> float_type, {128, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
Time: 2.95213ms, 2.9523ms
Output has zero, normal
Output: 0.00529674, 0.132419, 0.0582641, 0.0635609, -0.0264837, ..., 0.0847479, -0.137715, -0.0476707, -0.158902, -0.291321
Min value: -0.450223, Max value: 0.672686, Mean: -0.00243996, StdDev: 0.0510446
Run instruction: @205 = ref::multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@113) -> float_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
Time: 0.0025ms, 0.00253ms
Output has normal
Output: 0.16837, 0.16837, 0.16837, 0.16837, 0.16837, ..., 0.16837, 0.16837, 0.16837, 0.16837, 0.16837
Min value: 0.16837, Max value: 0.16837, Mean: 0.16837, StdDev: 0
Run instruction: @206 = ref::contiguous(@205) -> float_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
Time: 17.0555ms, 17.0556ms
Output has normal
Output: 0.16837, 0.16837, 0.16837, 0.16837, 0.16837, ..., 0.16837, 0.16837, 0.16837, 0.16837, 0.16837
Min value: 0.16837, Max value: 0.16837, Mean: 0.16837, StdDev: 0
Run instruction: @207 = ref::multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
Time: 0.00169ms, 0.00173ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @208 = ref::contiguous(@207) -> uint8_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
Time: 17.8615ms, 17.8615ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @209 = ref::dequantizelinear(@194,@206,@208) -> float_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
Time: 6.10417ms, 6.10432ms
Output has zero, normal
Output: 1.85207, 2.18881, 2.52555, 2.52555, 1.01022, ..., 0, 1.51533, 0, 1.17859, 2.52555
Min value: 0, Max value: 15.3217, Mean: 1.81184, StdDev: 1.7966
Run instruction: @210 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@209,@204) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 1242.09ms, 1242.09ms
Output has normal
Output: 0.0775876, -0.115936, -2.86004, -2.83061, -2.80921, ..., -4.68469, 1.03004, -6.22752, -4.34045, 1.56246
Min value: -33.2824, Max value: 25.4389, Mean: -2.47594, StdDev: 5.4477
Run instruction: @211 = ref::broadcast[axis=1,out_lens={1, 128, 112, 112}](@199) -> float_type, {1, 128, 112, 112}, {0, 1, 0, 0}, target_id=0
Time: 0.019641ms, 0.019691ms
Output has zero, normal
Output: 0.230088, 0.230088, 0.230088, 0.230088, 0.230088, ..., 0.0972075, 0.0972075, 0.0972075, 0.0972075, 0.0972075
Min value: -0.234547, Max value: 0.28538, Mean: 0.0759852, StdDev: 0.101926
Run instruction: @212 = ref::contiguous(@211) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 36.8217ms, 36.822ms
Output has zero, normal
Output: 0.230088, 0.230088, 0.230088, 0.230088, 0.230088, ..., 0.0972075, 0.0972075, 0.0972075, 0.0972075, 0.0972075
Min value: -0.234547, Max value: 0.28538, Mean: 0.0759852, StdDev: 0.101926
Run instruction: @213 = ref::add(@210,@212) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 11.7665ms, 11.7668ms
Output has zero, normal
Output: 0.307675, 0.114152, -2.62995, -2.60052, -2.57912, ..., -4.58748, 1.12725, -6.13032, -4.24324, 1.65966
Min value: -33.0193, Max value: 25.5798, Mean: -2.39995, StdDev: 5.42013
Run instruction: @214 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@105) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
Time: 0.004ms, 0.00404ms
Output has normal
Output: 0.197596, 0.197596, 0.197596, 0.197596, 0.197596, ..., 0.197596, 0.197596, 0.197596, 0.197596, 0.197596
Min value: 0.197596, Max value: 0.197596, Mean: 0.197596, StdDev: 0
Run instruction: @215 = ref::contiguous(@214) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 36.6588ms, 36.6591ms
Output has normal
Output: 0.197596, 0.197596, 0.197596, 0.197596, 0.197596, ..., 0.197596, 0.197596, 0.197596, 0.197596, 0.197596
Min value: 0.197596, Max value: 0.197596, Mean: 0.197596, StdDev: 0
Run instruction: @216 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@106) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
Time: 0.00385ms, 0.00389ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @217 = ref::contiguous(@216) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 35.4901ms, 35.4902ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @218 = ref::quantizelinear(@213,@215,@217) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 4.47757ms, 4.47773ms
Output has zero, normal
Output: , ,  ,  ,  , ...,  , ,  ,  , 
Min value:  , Max value: �, Mean: 4.72508, StdDev: 9.42892
Run instruction: @219 = ref::multibroadcast[out_lens={128},out_dyn_dims={}](@95) -> float_type, {128}, {0}, target_id=0
Time: 0.00432ms, 0.00437ms
Output has normal
Output: 0.000692262, 0.000692262, 0.000692262, 0.000692262, 0.000692262, ..., 0.000692262, 0.000692262, 0.000692262, 0.000692262, 0.000692262
Min value: 0.000692262, Max value: 0.000692262, Mean: 0.000692262, StdDev: 0
Run instruction: @220 = ref::contiguous(@219) -> float_type, {128}, {1}, target_id=0
Time: 0.00721ms, 0.00724ms
Output has normal
Output: 0.000692262, 0.000692262, 0.000692262, 0.000692262, 0.000692262, ..., 0.000692262, 0.000692262, 0.000692262, 0.000692262, 0.000692262
Min value: 0.000692262, Max value: 0.000692262, Mean: 0.000692262, StdDev: 0
Run instruction: @221 = ref::multibroadcast[out_lens={128},out_dyn_dims={}](@94) -> int32_type, {128}, {0}, target_id=0
Time: 0.010301ms, 0.010331ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @222 = ref::contiguous(@221) -> int32_type, {128}, {1}, target_id=0
Time: 0.01083ms, 0.01087ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @223 = ref::dequantizelinear(@96,@220,@222) -> float_type, {128}, {1}, target_id=0
Time: 0.724495ms, 0.724855ms
Output has normal
Output: -0.228446, 0.0339208, 0.0692262, -0.170989, 0.134299, ..., 0.186218, 0.0796101, 0.0186911, 0.0574577, 0.112839
Min value: -0.308749, Max value: 0.434048, Mean: 0.0388748, StdDev: 0.126872
Run instruction: @224 = ref::multibroadcast[out_lens={128, 128, 3, 3},out_dyn_dims={}](@100) -> float_type, {128, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.002091ms, 0.002121ms
Output has normal
Output: 0.00350343, 0.00350343, 0.00350343, 0.00350343, 0.00350343, ..., 0.00350343, 0.00350343, 0.00350343, 0.00350343, 0.00350343
Min value: 0.00350343, Max value: 0.00350343, Mean: 0.00350343, StdDev: 0
Run instruction: @225 = ref::contiguous(@224) -> float_type, {128, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
Time: 3.36069ms, 3.36076ms
Output has normal
Output: 0.00350343, 0.00350343, 0.00350343, 0.00350343, 0.00350343, ..., 0.00350343, 0.00350343, 0.00350343, 0.00350343, 0.00350343
Min value: 0.00350343, Max value: 0.00350343, Mean: 0.00350343, StdDev: 0
Run instruction: @226 = ref::multibroadcast[out_lens={128, 128, 3, 3},out_dyn_dims={}](@99) -> int8_type, {128, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00158ms, 0.00162ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @227 = ref::contiguous(@226) -> int8_type, {128, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
Time: 3.30197ms, 3.30203ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @228 = ref::dequantizelinear(@101,@225,@227) -> float_type, {128, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
Time: 3.20754ms, 3.2077ms
Output has zero, normal
Output: 0.00350343, 0.12262, -0.0140137, -0.0595583, 0.0140137, ..., -0.00350343, -0.024524, 0, 0.0595583, 0.0280274
Min value: -0.329322, Max value: 0.444935, Mean: -0.00239929, StdDev: 0.039656
Run instruction: @229 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@105) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
Time: 0.00229ms, 0.00232ms
Output has normal
Output: 0.197596, 0.197596, 0.197596, 0.197596, 0.197596, ..., 0.197596, 0.197596, 0.197596, 0.197596, 0.197596
Min value: 0.197596, Max value: 0.197596, Mean: 0.197596, StdDev: 0
Run instruction: @230 = ref::contiguous(@229) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 36.6244ms, 36.6246ms
Output has normal
Output: 0.197596, 0.197596, 0.197596, 0.197596, 0.197596, ..., 0.197596, 0.197596, 0.197596, 0.197596, 0.197596
Min value: 0.197596, Max value: 0.197596, Mean: 0.197596, StdDev: 0
Run instruction: @231 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@106) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
Time: 0.00192ms, 0.00196ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @232 = ref::contiguous(@231) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 35.7357ms, 35.7358ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @233 = ref::dequantizelinear(@218,@230,@232) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 8.54637ms, 8.5469ms
Output has zero, normal
Output: 0.395191, 0.197596, 0, 0, 0, ..., 0, 1.18557, 0, 0, 1.58076
Min value: 0, Max value: 25.4898, Mean: 0.933654, StdDev: 1.86311
Run instruction: @234 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@233,@228) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 1951.47ms, 1951.47ms
Output has normal
Output: -4.9919, -9.93949, -10.9543, -7.31374, -3.77213, ..., 8.94956, 9.93188, 6.6644, 6.14798, 4.2491
Min value: -46.5733, Max value: 47.9405, Mean: -2.56896, StdDev: 5.11481
Run instruction: @235 = ref::broadcast[axis=1,out_lens={1, 128, 112, 112}](@223) -> float_type, {1, 128, 112, 112}, {0, 1, 0, 0}, target_id=0
Time: 0.00859ms, 0.00863ms
Output has normal
Output: -0.228446, -0.228446, -0.228446, -0.228446, -0.228446, ..., 0.112839, 0.112839, 0.112839, 0.112839, 0.112839
Min value: -0.308749, Max value: 0.434048, Mean: 0.0388748, StdDev: 0.126872
Run instruction: @236 = ref::contiguous(@235) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 36.738ms, 36.7382ms
Output has normal
Output: -0.228446, -0.228446, -0.228446, -0.228446, -0.228446, ..., 0.112839, 0.112839, 0.112839, 0.112839, 0.112839
Min value: -0.308749, Max value: 0.434048, Mean: 0.0388748, StdDev: 0.126872
Run instruction: @237 = ref::add(@234,@236) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 11.7951ms, 11.7952ms
Output has zero, normal
Output: -5.22035, -10.1679, -11.1828, -7.54219, -4.00058, ..., 9.0624, 10.0447, 6.77724, 6.26081, 4.36194
Min value: -46.6044, Max value: 47.8734, Mean: -2.53009, StdDev: 5.13024
Run instruction: @238 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@97) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
Time: 0.01328ms, 0.01333ms
Output has normal
Output: 0.331647, 0.331647, 0.331647, 0.331647, 0.331647, ..., 0.331647, 0.331647, 0.331647, 0.331647, 0.331647
Min value: 0.331647, Max value: 0.331647, Mean: 0.331647, StdDev: 0
Run instruction: @239 = ref::contiguous(@238) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 36.6341ms, 36.6343ms
Output has normal
Output: 0.331647, 0.331647, 0.331647, 0.331647, 0.331647, ..., 0.331647, 0.331647, 0.331647, 0.331647, 0.331647
Min value: 0.331647, Max value: 0.331647, Mean: 0.331647, StdDev: 0
Run instruction: @240 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
Time: 0.0034ms, 0.00343ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @241 = ref::contiguous(@240) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 35.7353ms, 35.7354ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @242 = ref::quantizelinear(@237,@239,@241) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 4.53502ms, 4.53518ms
Output has normal, zero
Output:  ,  ,  ,  ,  , ..., , , , , 
Min value:  , Max value: �, Mean: 2.91594, StdDev: 6.92344
Run instruction: @243 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@97) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
Time: 0.00493ms, 0.00506ms
Output has normal
Output: 0.331647, 0.331647, 0.331647, 0.331647, 0.331647, ..., 0.331647, 0.331647, 0.331647, 0.331647, 0.331647
Min value: 0.331647, Max value: 0.331647, Mean: 0.331647, StdDev: 0
Run instruction: @244 = ref::contiguous(@243) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 36.634ms, 36.6341ms
Output has normal
Output: 0.331647, 0.331647, 0.331647, 0.331647, 0.331647, ..., 0.331647, 0.331647, 0.331647, 0.331647, 0.331647
Min value: 0.331647, Max value: 0.331647, Mean: 0.331647, StdDev: 0
Run instruction: @245 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
Time: 0.00439ms, 0.00442ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @246 = ref::contiguous(@245) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 35.1428ms, 35.1428ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @247 = ref::dequantizelinear(@242,@244,@246) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 9.80535ms, 9.80553ms
Output has normal, zero
Output: 0, 0, 0, 0, 0, ..., 8.95448, 9.94942, 6.63295, 6.3013, 4.31141
Min value: 0, Max value: 47.7572, Mean: 0.967063, StdDev: 2.29614
Run instruction: @248 = ref::pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@247) -> float_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
Time: 10.8903ms, 10.8915ms
Output has zero, normal
Output: 2.32153, 0, 0.994942, 0, 0, ..., 1.65824, 10.2811, 9.28612, 9.94942, 6.3013
Min value: 0, Max value: 47.7572, Mean: 2.28778, StdDev: 3.31056
Run instruction: @249 = ref::multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@97) -> float_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.0227ms, 0.02273ms
Output has normal
Output: 0.331647, 0.331647, 0.331647, 0.331647, 0.331647, ..., 0.331647, 0.331647, 0.331647, 0.331647, 0.331647
Min value: 0.331647, Max value: 0.331647, Mean: 0.331647, StdDev: 0
Run instruction: @250 = ref::contiguous(@249) -> float_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
Time: 8.77929ms, 8.77937ms
Output has normal
Output: 0.331647, 0.331647, 0.331647, 0.331647, 0.331647, ..., 0.331647, 0.331647, 0.331647, 0.331647, 0.331647
Min value: 0.331647, Max value: 0.331647, Mean: 0.331647, StdDev: 0
Run instruction: @251 = ref::multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.00161ms, 0.00165ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @252 = ref::contiguous(@251) -> uint8_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
Time: 8.87538ms, 8.87545ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @253 = ref::quantizelinear(@248,@250,@252) -> uint8_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
Time: 3.18128ms, 3.18144ms
Output has zero, normal
Output: ,  , ,  ,  , ..., , , , , 
Min value:  , Max value: �, Mean: 6.89823, StdDev: 9.98218
Run instruction: @254 = ref::multibroadcast[out_lens={256},out_dyn_dims={}](@87) -> float_type, {256}, {0}, target_id=0
Time: 0.00228ms, 0.00231ms
Output has normal
Output: 0.00188817, 0.00188817, 0.00188817, 0.00188817, 0.00188817, ..., 0.00188817, 0.00188817, 0.00188817, 0.00188817, 0.00188817
Min value: 0.00188817, Max value: 0.00188817, Mean: 0.00188817, StdDev: 0
Run instruction: @255 = ref::contiguous(@254) -> float_type, {256}, {1}, target_id=0
Time: 0.015781ms, 0.015821ms
Output has normal
Output: 0.00188817, 0.00188817, 0.00188817, 0.00188817, 0.00188817, ..., 0.00188817, 0.00188817, 0.00188817, 0.00188817, 0.00188817
Min value: 0.00188817, Max value: 0.00188817, Mean: 0.00188817, StdDev: 0
Run instruction: @256 = ref::multibroadcast[out_lens={256},out_dyn_dims={}](@86) -> int32_type, {256}, {0}, target_id=0
Time: 0.001601ms, 0.001631ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @257 = ref::contiguous(@256) -> int32_type, {256}, {1}, target_id=0
Time: 0.00807ms, 0.0081ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @258 = ref::dequantizelinear(@88,@255,@257) -> float_type, {256}, {1}, target_id=0
Time: 1.35798ms, 1.35831ms
Output has zero, normal
Output: 0.313437, 0.00188817, 0.179376, 0.373858, -0.0736388, ..., -0.0472043, 0.0339871, 0.00944087, -0.124619, -0.0339871
Min value: -0.320989, Max value: 0.373858, Mean: 0.025837, StdDev: 0.108771
Run instruction: @259 = ref::multibroadcast[out_lens={256, 128, 3, 3},out_dyn_dims={}](@92) -> float_type, {256, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00197ms, 0.002ms
Output has normal
Output: 0.00569332, 0.00569332, 0.00569332, 0.00569332, 0.00569332, ..., 0.00569332, 0.00569332, 0.00569332, 0.00569332, 0.00569332
Min value: 0.00569332, Max value: 0.00569332, Mean: 0.00569332, StdDev: 0
Run instruction: @260 = ref::contiguous(@259) -> float_type, {256, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
Time: 6.46056ms, 6.46063ms
Output has normal
Output: 0.00569332, 0.00569332, 0.00569332, 0.00569332, 0.00569332, ..., 0.00569332, 0.00569332, 0.00569332, 0.00569332, 0.00569332
Min value: 0.00569332, Max value: 0.00569332, Mean: 0.00569332, StdDev: 0
Run instruction: @261 = ref::multibroadcast[out_lens={256, 128, 3, 3},out_dyn_dims={}](@91) -> int8_type, {256, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00188ms, 0.00191ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @262 = ref::contiguous(@261) -> int8_type, {256, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
Time: 6.11897ms, 6.11902ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @263 = ref::dequantizelinear(@93,@260,@262) -> float_type, {256, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
Time: 4.05503ms, 4.05523ms
Output has zero, normal
Output: -0.0227733, -0.0455465, 0.01708, -0.0227733, -0.0569332, ..., -0.0284666, 0, -0.0227733, 0, 0.01708
Min value: -0.318826, Max value: 0.723051, Mean: -0.00153439, StdDev: 0.0327139
Run instruction: @264 = ref::multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@97) -> float_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.0023ms, 0.00233ms
Output has normal
Output: 0.331647, 0.331647, 0.331647, 0.331647, 0.331647, ..., 0.331647, 0.331647, 0.331647, 0.331647, 0.331647
Min value: 0.331647, Max value: 0.331647, Mean: 0.331647, StdDev: 0
Run instruction: @265 = ref::contiguous(@264) -> float_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
Time: 8.50386ms, 8.50392ms
Output has normal
Output: 0.331647, 0.331647, 0.331647, 0.331647, 0.331647, ..., 0.331647, 0.331647, 0.331647, 0.331647, 0.331647
Min value: 0.331647, Max value: 0.331647, Mean: 0.331647, StdDev: 0
Run instruction: @266 = ref::multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.00167ms, 0.00171ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @267 = ref::contiguous(@266) -> uint8_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
Time: 8.78424ms, 8.78431ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @268 = ref::dequantizelinear(@253,@265,@267) -> float_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
Time: 4.3669ms, 4.36706ms
Output has zero, normal
Output: 2.32153, 0, 0.994942, 0, 0, ..., 1.65824, 10.2811, 9.28612, 9.94942, 6.3013
Min value: 0, Max value: 47.7572, Mean: 2.28778, StdDev: 3.31056
Run instruction: @269 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@268,@263) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 1171.5ms, 1171.51ms
Output has normal
Output: 1.15556, 7.55458, 8.73847, 4.93191, 5.89865, ..., 0.679743, -0.464491, -1.21976, -3.93495, -1.69936
Min value: -80.5098, Max value: 52.7707, Mean: -3.23407, StdDev: 7.56767
Run instruction: @270 = ref::broadcast[axis=1,out_lens={1, 256, 56, 56}](@258) -> float_type, {1, 256, 56, 56}, {0, 1, 0, 0}, target_id=0
Time: 0.01421ms, 0.01431ms
Output has zero, normal
Output: 0.313437, 0.313437, 0.313437, 0.313437, 0.313437, ..., -0.0339871, -0.0339871, -0.0339871, -0.0339871, -0.0339871
Min value: -0.320989, Max value: 0.373858, Mean: 0.025837, StdDev: 0.108771
Run instruction: @271 = ref::contiguous(@270) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 18.3947ms, 18.3948ms
Output has zero, normal
Output: 0.313437, 0.313437, 0.313437, 0.313437, 0.313437, ..., -0.0339871, -0.0339871, -0.0339871, -0.0339871, -0.0339871
Min value: -0.320989, Max value: 0.373858, Mean: 0.025837, StdDev: 0.108771
Run instruction: @272 = ref::add(@269,@271) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 5.89569ms, 5.8958ms
Output has zero, normal
Output: 1.469, 7.86802, 9.0519, 5.24535, 6.21209, ..., 0.645755, -0.498478, -1.25375, -3.96894, -1.73334
Min value: -80.3512, Max value: 53.1445, Mean: -3.20824, StdDev: 7.55916
Run instruction: @273 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@89) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.00426ms, 0.0043ms
Output has normal
Output: 0.395168, 0.395168, 0.395168, 0.395168, 0.395168, ..., 0.395168, 0.395168, 0.395168, 0.395168, 0.395168
Min value: 0.395168, Max value: 0.395168, Mean: 0.395168, StdDev: 0
Run instruction: @274 = ref::contiguous(@273) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 18.3216ms, 18.3217ms
Output has normal
Output: 0.395168, 0.395168, 0.395168, 0.395168, 0.395168, ..., 0.395168, 0.395168, 0.395168, 0.395168, 0.395168
Min value: 0.395168, Max value: 0.395168, Mean: 0.395168, StdDev: 0
Run instruction: @275 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@90) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.0017ms, 0.00174ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @276 = ref::contiguous(@275) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 17.7428ms, 17.7429ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @277 = ref::quantizelinear(@272,@274,@276) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 3.42564ms, 3.4258ms
Output has zero, normal
Output: , , , 
, , ..., ,  ,  ,  ,  
Min value:  , Max value: �, Mean: 3.20113, StdDev: 6.72925
Run instruction: @278 = ref::multibroadcast[out_lens={256},out_dyn_dims={}](@79) -> float_type, {256}, {0}, target_id=0
Time: 0.00384ms, 0.00388ms
Output has normal
Output: 0.00167394, 0.00167394, 0.00167394, 0.00167394, 0.00167394, ..., 0.00167394, 0.00167394, 0.00167394, 0.00167394, 0.00167394
Min value: 0.00167394, Max value: 0.00167394, Mean: 0.00167394, StdDev: 0
Run instruction: @279 = ref::contiguous(@278) -> float_type, {256}, {1}, target_id=0
Time: 0.01316ms, 0.01319ms
Output has normal
Output: 0.00167394, 0.00167394, 0.00167394, 0.00167394, 0.00167394, ..., 0.00167394, 0.00167394, 0.00167394, 0.00167394, 0.00167394
Min value: 0.00167394, Max value: 0.00167394, Mean: 0.00167394, StdDev: 0
Run instruction: @280 = ref::multibroadcast[out_lens={256},out_dyn_dims={}](@78) -> int32_type, {256}, {0}, target_id=0
Time: 0.00674ms, 0.00677ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @281 = ref::contiguous(@280) -> int32_type, {256}, {1}, target_id=0
Time: 0.00634ms, 0.00637ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @282 = ref::dequantizelinear(@80,@279,@281) -> float_type, {256}, {1}, target_id=0
Time: 1.37377ms, 1.37391ms
Output has zero, normal
Output: -0.0870448, 0.167394, 0.0736533, 0.0117176, 0.100436, ..., 0.10211, 0.115502, 0.107132, -0.0451963, 0.10211
Min value: -0.311352, Max value: 0.281222, Mean: 0.0585421, StdDev: 0.0913356
Run instruction: @283 = ref::multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@84) -> float_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00226ms, 0.0023ms
Output has normal
Output: 0.00423602, 0.00423602, 0.00423602, 0.00423602, 0.00423602, ..., 0.00423602, 0.00423602, 0.00423602, 0.00423602, 0.00423602
Min value: 0.00423602, Max value: 0.00423602, Mean: 0.00423602, StdDev: 0
Run instruction: @284 = ref::contiguous(@283) -> float_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
Time: 13.4578ms, 13.4579ms
Output has normal
Output: 0.00423602, 0.00423602, 0.00423602, 0.00423602, 0.00423602, ..., 0.00423602, 0.00423602, 0.00423602, 0.00423602, 0.00423602
Min value: 0.00423602, Max value: 0.00423602, Mean: 0.00423602, StdDev: 0
Run instruction: @285 = ref::multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@83) -> int8_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00138ms, 0.00141ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @286 = ref::contiguous(@285) -> int8_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
Time: 12.4087ms, 12.4087ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @287 = ref::dequantizelinear(@85,@284,@286) -> float_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
Time: 5.77265ms, 5.77282ms
Output has zero, normal
Output: 0.00423602, -0.0381242, -0.0211801, 0.0127081, -0.0338882, ..., -0.0423602, 0.0169441, -0.0169441, -0.0296521, 0.0296521
Min value: -0.241453, Max value: 0.537975, Mean: -0.00144947, StdDev: 0.0249226
Run instruction: @288 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@89) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.0027ms, 0.00274ms
Output has normal
Output: 0.395168, 0.395168, 0.395168, 0.395168, 0.395168, ..., 0.395168, 0.395168, 0.395168, 0.395168, 0.395168
Min value: 0.395168, Max value: 0.395168, Mean: 0.395168, StdDev: 0
Run instruction: @289 = ref::contiguous(@288) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 18.3327ms, 18.3328ms
Output has normal
Output: 0.395168, 0.395168, 0.395168, 0.395168, 0.395168, ..., 0.395168, 0.395168, 0.395168, 0.395168, 0.395168
Min value: 0.395168, Max value: 0.395168, Mean: 0.395168, StdDev: 0
Run instruction: @290 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@90) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.00169ms, 0.00172ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @291 = ref::contiguous(@290) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 17.5495ms, 17.5495ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @292 = ref::dequantizelinear(@277,@289,@291) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 5.80853ms, 5.80869ms
Output has zero, normal
Output: 1.58067, 7.90335, 9.08885, 5.13718, 6.32268, ..., 0.790335, 0, 0, 0, 0
Min value: 0, Max value: 52.9525, Mean: 1.26498, StdDev: 2.65918
Run instruction: @293 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@292,@287) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 2015.29ms, 2015.29ms
Output has normal
Output: -3.74293, 1.71913, 10.3048, 9.75069, 2.70508, ..., 2.69839, 4.13295, 8.63585, 8.26423, 9.80091
Min value: -43.345, Max value: 47.7792, Mean: -2.86115, StdDev: 6.539
Run instruction: @294 = ref::broadcast[axis=1,out_lens={1, 256, 56, 56}](@282) -> float_type, {1, 256, 56, 56}, {0, 1, 0, 0}, target_id=0
Time: 0.005391ms, 0.005441ms
Output has zero, normal
Output: -0.0870448, -0.0870448, -0.0870448, -0.0870448, -0.0870448, ..., 0.10211, 0.10211, 0.10211, 0.10211, 0.10211
Min value: -0.311352, Max value: 0.281222, Mean: 0.0585421, StdDev: 0.0913356
Run instruction: @295 = ref::contiguous(@294) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 18.3687ms, 18.3688ms
Output has zero, normal
Output: -0.0870448, -0.0870448, -0.0870448, -0.0870448, -0.0870448, ..., 0.10211, 0.10211, 0.10211, 0.10211, 0.10211
Min value: -0.311352, Max value: 0.281222, Mean: 0.0585421, StdDev: 0.0913356
Run instruction: @296 = ref::add(@293,@295) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 5.90189ms, 5.902ms
Output has zero, normal
Output: -3.82997, 1.63209, 10.2177, 9.66364, 2.61804, ..., 2.8005, 4.23506, 8.73796, 8.36634, 9.90302
Min value: -43.3282, Max value: 47.9717, Mean: -2.80261, StdDev: 6.56663
Run instruction: @297 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@81) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.00322ms, 0.00326ms
Output has normal
Output: 0.369739, 0.369739, 0.369739, 0.369739, 0.369739, ..., 0.369739, 0.369739, 0.369739, 0.369739, 0.369739
Min value: 0.369739, Max value: 0.369739, Mean: 0.369739, StdDev: 0
Run instruction: @298 = ref::contiguous(@297) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 18.3211ms, 18.3212ms
Output has normal
Output: 0.369739, 0.369739, 0.369739, 0.369739, 0.369739, ..., 0.369739, 0.369739, 0.369739, 0.369739, 0.369739
Min value: 0.369739, Max value: 0.369739, Mean: 0.369739, StdDev: 0
Run instruction: @299 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@82) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.00136ms, 0.00139ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @300 = ref::contiguous(@299) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 17.764ms, 17.764ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @301 = ref::quantizelinear(@296,@298,@300) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 3.73959ms, 3.73976ms
Output has normal, zero
Output:  , , , , , ..., , , , , 
Min value:  , Max value: �, Mean: 3.76501, StdDev: 7.41938
Run instruction: @302 = ref::multibroadcast[out_lens={256},out_dyn_dims={}](@71) -> float_type, {256}, {0}, target_id=0
Time: 0.00271ms, 0.00274ms
Output has normal
Output: 0.0016644, 0.0016644, 0.0016644, 0.0016644, 0.0016644, ..., 0.0016644, 0.0016644, 0.0016644, 0.0016644, 0.0016644
Min value: 0.0016644, Max value: 0.0016644, Mean: 0.0016644, StdDev: 0
Run instruction: @303 = ref::contiguous(@302) -> float_type, {256}, {1}, target_id=0
Time: 0.007301ms, 0.007331ms
Output has normal
Output: 0.0016644, 0.0016644, 0.0016644, 0.0016644, 0.0016644, ..., 0.0016644, 0.0016644, 0.0016644, 0.0016644, 0.0016644
Min value: 0.0016644, Max value: 0.0016644, Mean: 0.0016644, StdDev: 0
Run instruction: @304 = ref::multibroadcast[out_lens={256},out_dyn_dims={}](@70) -> int32_type, {256}, {0}, target_id=0
Time: 0.01195ms, 0.01199ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @305 = ref::contiguous(@304) -> int32_type, {256}, {1}, target_id=0
Time: 0.00757ms, 0.0076ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @306 = ref::dequantizelinear(@72,@303,@305) -> float_type, {256}, {1}, target_id=0
Time: 1.30008ms, 1.30023ms
Output has zero, normal
Output: -0.0266305, 0.0549254, -0.00665762, 0.053261, 0.119837, ..., 0.0482677, 0.0815558, -0.0449389, -0.0282949, 0.0549254
Min value: -0.239674, Max value: 0.594193, Mean: 0.0389835, StdDev: 0.0943812
Run instruction: @307 = ref::multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@76) -> float_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00218ms, 0.00221ms
Output has normal
Output: 0.00450157, 0.00450157, 0.00450157, 0.00450157, 0.00450157, ..., 0.00450157, 0.00450157, 0.00450157, 0.00450157, 0.00450157
Min value: 0.00450157, Max value: 0.00450157, Mean: 0.00450157, StdDev: 0
Run instruction: @308 = ref::contiguous(@307) -> float_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
Time: 13.4604ms, 13.4605ms
Output has normal
Output: 0.00450157, 0.00450157, 0.00450157, 0.00450157, 0.00450157, ..., 0.00450157, 0.00450157, 0.00450157, 0.00450157, 0.00450157
Min value: 0.00450157, Max value: 0.00450157, Mean: 0.00450157, StdDev: 0
Run instruction: @309 = ref::multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@75) -> int8_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00165ms, 0.00168ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @310 = ref::contiguous(@309) -> int8_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
Time: 12.4394ms, 12.4395ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @311 = ref::dequantizelinear(@77,@308,@310) -> float_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
Time: 5.85875ms, 5.85892ms
Output has zero, normal
Output: -0.0135047, 0.063022, 0.112539, -0.0225079, 0.0360126, ..., 0.00900314, -0.0405141, 0.031511, 0.0180063, -0.031511
Min value: -0.396138, Max value: 0.571699, Mean: -0.00237887, StdDev: 0.0253079
Run instruction: @312 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@81) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.00219ms, 0.00224ms
Output has normal
Output: 0.369739, 0.369739, 0.369739, 0.369739, 0.369739, ..., 0.369739, 0.369739, 0.369739, 0.369739, 0.369739
Min value: 0.369739, Max value: 0.369739, Mean: 0.369739, StdDev: 0
Run instruction: @313 = ref::contiguous(@312) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 18.3167ms, 18.3168ms
Output has normal
Output: 0.369739, 0.369739, 0.369739, 0.369739, 0.369739, ..., 0.369739, 0.369739, 0.369739, 0.369739, 0.369739
Min value: 0.369739, Max value: 0.369739, Mean: 0.369739, StdDev: 0
Run instruction: @314 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@82) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.00175ms, 0.00179ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @315 = ref::contiguous(@314) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 17.538ms, 17.538ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @316 = ref::dequantizelinear(@301,@313,@315) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 6.00208ms, 6.00223ms
Output has normal, zero
Output: 0, 1.47895, 10.3527, 9.61321, 2.58817, ..., 2.95791, 4.06713, 8.87373, 8.50399, 9.98295
Min value: 0, Max value: 48.066, Mean: 1.39207, StdDev: 2.74323
Run instruction: @317 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@316,@311) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 2093.05ms, 2093.05ms
Output has zero, normal
Output: -9.36394, -12.4997, -16.8305, -19.5784, -16.8704, ..., -13.1438, -26.1961, -15.1644, -13.4717, -12.518
Min value: -77.7477, Max value: 68.7699, Mean: -8.67109, StdDev: 6.99337
Run instruction: @318 = ref::broadcast[axis=1,out_lens={1, 256, 56, 56}](@306) -> float_type, {1, 256, 56, 56}, {0, 1, 0, 0}, target_id=0
Time: 0.00842ms, 0.00848ms
Output has zero, normal
Output: -0.0266305, -0.0266305, -0.0266305, -0.0266305, -0.0266305, ..., 0.0549254, 0.0549254, 0.0549254, 0.0549254, 0.0549254
Min value: -0.239674, Max value: 0.594193, Mean: 0.0389835, StdDev: 0.0943812
Run instruction: @319 = ref::contiguous(@318) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 18.4265ms, 18.4266ms
Output has zero, normal
Output: -0.0266305, -0.0266305, -0.0266305, -0.0266305, -0.0266305, ..., 0.0549254, 0.0549254, 0.0549254, 0.0549254, 0.0549254
Min value: -0.239674, Max value: 0.594193, Mean: 0.0389835, StdDev: 0.0943812
Run instruction: @320 = ref::add(@317,@319) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 5.89609ms, 5.89618ms
Output has zero, normal
Output: -9.39057, -12.5263, -16.8571, -19.605, -16.897, ..., -13.0889, -26.1411, -15.1095, -13.4168, -12.4631
Min value: -77.4198, Max value: 69.1261, Mean: -8.63211, StdDev: 7.01238
Run instruction: @321 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@73) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.01132ms, 0.01136ms
Output has normal
Output: 0.398974, 0.398974, 0.398974, 0.398974, 0.398974, ..., 0.398974, 0.398974, 0.398974, 0.398974, 0.398974
Min value: 0.398974, Max value: 0.398974, Mean: 0.398974, StdDev: 0
Run instruction: @322 = ref::contiguous(@321) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 18.3111ms, 18.3112ms
Output has normal
Output: 0.398974, 0.398974, 0.398974, 0.398974, 0.398974, ..., 0.398974, 0.398974, 0.398974, 0.398974, 0.398974
Min value: 0.398974, Max value: 0.398974, Mean: 0.398974, StdDev: 0
Run instruction: @323 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.00279ms, 0.00283ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @324 = ref::contiguous(@323) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 17.5468ms, 17.5469ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @325 = ref::quantizelinear(@320,@322,@324) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 3.46656ms, 3.4667ms
Output has normal, zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value: �, Mean: 0.852178, StdDev: 3.73396
Run instruction: @326 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@73) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.00483ms, 0.00487ms
Output has normal
Output: 0.398974, 0.398974, 0.398974, 0.398974, 0.398974, ..., 0.398974, 0.398974, 0.398974, 0.398974, 0.398974
Min value: 0.398974, Max value: 0.398974, Mean: 0.398974, StdDev: 0
Run instruction: @327 = ref::contiguous(@326) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 18.3196ms, 18.3197ms
Output has normal
Output: 0.398974, 0.398974, 0.398974, 0.398974, 0.398974, ..., 0.398974, 0.398974, 0.398974, 0.398974, 0.398974
Min value: 0.398974, Max value: 0.398974, Mean: 0.398974, StdDev: 0
Run instruction: @328 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
Time: 0.00303ms, 0.00307ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @329 = ref::contiguous(@328) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 17.5339ms, 17.5339ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @330 = ref::dequantizelinear(@325,@327,@329) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
Time: 5.80474ms, 5.80488ms
Output has normal, zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 69.0225, Mean: 0.339997, StdDev: 1.48975
Run instruction: @331 = ref::pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@330) -> float_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
Time: 4.70026ms, 4.70144ms
Output has normal, zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 69.0225, Mean: 0.775103, StdDev: 2.27568
Run instruction: @332 = ref::multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@73) -> float_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.01078ms, 0.01083ms
Output has normal
Output: 0.398974, 0.398974, 0.398974, 0.398974, 0.398974, ..., 0.398974, 0.398974, 0.398974, 0.398974, 0.398974
Min value: 0.398974, Max value: 0.398974, Mean: 0.398974, StdDev: 0
Run instruction: @333 = ref::contiguous(@332) -> float_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
Time: 4.32285ms, 4.32297ms
Output has normal
Output: 0.398974, 0.398974, 0.398974, 0.398974, 0.398974, ..., 0.398974, 0.398974, 0.398974, 0.398974, 0.398974
Min value: 0.398974, Max value: 0.398974, Mean: 0.398974, StdDev: 0
Run instruction: @334 = ref::multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.001901ms, 0.001931ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @335 = ref::contiguous(@334) -> uint8_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
Time: 5.30597ms, 5.3068ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @336 = ref::quantizelinear(@331,@333,@335) -> uint8_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
Time: 3.09553ms, 3.09568ms
Output has normal, zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value: �, Mean: 1.94274, StdDev: 5.70382
Run instruction: @337 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@63) -> float_type, {512}, {0}, target_id=0
Time: 0.00413ms, 0.00417ms
Output has normal
Output: 0.00145504, 0.00145504, 0.00145504, 0.00145504, 0.00145504, ..., 0.00145504, 0.00145504, 0.00145504, 0.00145504, 0.00145504
Min value: 0.00145504, Max value: 0.00145504, Mean: 0.00145504, StdDev: 0
Run instruction: @338 = ref::contiguous(@337) -> float_type, {512}, {1}, target_id=0
Time: 0.0134ms, 0.01343ms
Output has normal
Output: 0.00145504, 0.00145504, 0.00145504, 0.00145504, 0.00145504, ..., 0.00145504, 0.00145504, 0.00145504, 0.00145504, 0.00145504
Min value: 0.00145504, Max value: 0.00145504, Mean: 0.00145504, StdDev: 0
Run instruction: @339 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@62) -> int32_type, {512}, {0}, target_id=0
Time: 0.00142ms, 0.00145ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @340 = ref::contiguous(@339) -> int32_type, {512}, {1}, target_id=0
Time: 0.022261ms, 0.022291ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @341 = ref::dequantizelinear(@64,@338,@340) -> float_type, {512}, {1}, target_id=0
Time: 2.72335ms, 2.7235ms
Output has zero, normal
Output: -0.00436511, 0.0130953, -0.0261907, 0.0174605, 0.0640216, ..., -0.040741, -0.0232806, 0.0334659, -0.0625666, 0.0480162
Min value: -0.18188, Max value: 0.293918, Mean: 0.0121518, StdDev: 0.0592181
Run instruction: @342 = ref::multibroadcast[out_lens={512, 256, 3, 3},out_dyn_dims={}](@68) -> float_type, {512, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00324ms, 0.00328ms
Output has normal
Output: 0.00364695, 0.00364695, 0.00364695, 0.00364695, 0.00364695, ..., 0.00364695, 0.00364695, 0.00364695, 0.00364695, 0.00364695
Min value: 0.00364695, Max value: 0.00364695, Mean: 0.00364695, StdDev: 0
Run instruction: @343 = ref::contiguous(@342) -> float_type, {512, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
Time: 27.301ms, 27.3011ms
Output has normal
Output: 0.00364695, 0.00364695, 0.00364695, 0.00364695, 0.00364695, ..., 0.00364695, 0.00364695, 0.00364695, 0.00364695, 0.00364695
Min value: 0.00364695, Max value: 0.00364695, Mean: 0.00364695, StdDev: 0
Run instruction: @344 = ref::multibroadcast[out_lens={512, 256, 3, 3},out_dyn_dims={}](@67) -> int8_type, {512, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00308ms, 0.00311ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @345 = ref::contiguous(@344) -> int8_type, {512, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
Time: 24.5194ms, 24.5195ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @346 = ref::dequantizelinear(@69,@343,@345) -> float_type, {512, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
Time: 9.0079ms, 9.00806ms
Output has zero, normal
Output: 0.0109408, 0.0656451, 0.0328225, -0.0437634, 0.0109408, ..., -0.0109408, -0.00364695, 0.0072939, 0.0109408, -0.0072939
Min value: -0.43034, Max value: 0.463162, Mean: -0.0017127, StdDev: 0.0221854
Run instruction: @347 = ref::multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@73) -> float_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.00339ms, 0.00346ms
Output has normal
Output: 0.398974, 0.398974, 0.398974, 0.398974, 0.398974, ..., 0.398974, 0.398974, 0.398974, 0.398974, 0.398974
Min value: 0.398974, Max value: 0.398974, Mean: 0.398974, StdDev: 0
Run instruction: @348 = ref::contiguous(@347) -> float_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
Time: 4.27958ms, 4.27967ms
Output has normal
Output: 0.398974, 0.398974, 0.398974, 0.398974, 0.398974, ..., 0.398974, 0.398974, 0.398974, 0.398974, 0.398974
Min value: 0.398974, Max value: 0.398974, Mean: 0.398974, StdDev: 0
Run instruction: @349 = ref::multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.0019ms, 0.00194ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @350 = ref::contiguous(@349) -> uint8_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
Time: 4.39064ms, 4.39069ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @351 = ref::dequantizelinear(@336,@348,@350) -> float_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
Time: 2.99349ms, 2.99365ms
Output has normal, zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 69.0225, Mean: 0.775103, StdDev: 2.27568
Run instruction: @352 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@351,@346) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 1173.15ms, 1173.15ms
Output has normal
Output: -6.97254, -6.48947, -4.26762, -0.910854, 1.99922, ..., 1.15239, 2.75148, 7.19079, 0.520903, 7.5953
Min value: -41.9967, Max value: 50.5407, Mean: -2.83002, StdDev: 4.22064
Run instruction: @353 = ref::broadcast[axis=1,out_lens={1, 512, 28, 28}](@341) -> float_type, {1, 512, 28, 28}, {0, 1, 0, 0}, target_id=0
Time: 0.00542ms, 0.00547ms
Output has zero, normal
Output: -0.00436511, -0.00436511, -0.00436511, -0.00436511, -0.00436511, ..., 0.0480162, 0.0480162, 0.0480162, 0.0480162, 0.0480162
Min value: -0.18188, Max value: 0.293918, Mean: 0.0121518, StdDev: 0.0592181
Run instruction: @354 = ref::contiguous(@353) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 9.20891ms, 9.20898ms
Output has zero, normal
Output: -0.00436511, -0.00436511, -0.00436511, -0.00436511, -0.00436511, ..., 0.0480162, 0.0480162, 0.0480162, 0.0480162, 0.0480162
Min value: -0.18188, Max value: 0.293918, Mean: 0.0121518, StdDev: 0.0592181
Run instruction: @355 = ref::add(@352,@354) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 2.94246ms, 2.94272ms
Output has zero, normal
Output: -6.9769, -6.49383, -4.27199, -0.915219, 1.99486, ..., 1.20041, 2.79949, 7.23881, 0.56892, 7.64331
Min value: -41.8294, Max value: 50.6921, Mean: -2.81787, StdDev: 4.24245
Run instruction: @356 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@65) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.00906ms, 0.0091ms
Output has normal
Output: 0.46762, 0.46762, 0.46762, 0.46762, 0.46762, ..., 0.46762, 0.46762, 0.46762, 0.46762, 0.46762
Min value: 0.46762, Max value: 0.46762, Mean: 0.46762, StdDev: 0
Run instruction: @357 = ref::contiguous(@356) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 9.1676ms, 9.16769ms
Output has normal
Output: 0.46762, 0.46762, 0.46762, 0.46762, 0.46762, ..., 0.46762, 0.46762, 0.46762, 0.46762, 0.46762
Min value: 0.46762, Max value: 0.46762, Mean: 0.46762, StdDev: 0
Run instruction: @358 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@66) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.00192ms, 0.00195ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @359 = ref::contiguous(@358) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 8.77481ms, 8.77487ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @360 = ref::quantizelinear(@355,@357,@359) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 2.95172ms, 2.95188ms
Output has normal, zero
Output:  ,  ,  ,  , , ..., , , , , 
Min value:  , Max value: l, Mean: 1.22461, StdDev: 3.36165
Run instruction: @361 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@55) -> float_type, {512}, {0}, target_id=0
Time: 0.0026ms, 0.00265ms
Output has normal
Output: 0.000925222, 0.000925222, 0.000925222, 0.000925222, 0.000925222, ..., 0.000925222, 0.000925222, 0.000925222, 0.000925222, 0.000925222
Min value: 0.000925222, Max value: 0.000925222, Mean: 0.000925222, StdDev: 0
Run instruction: @362 = ref::contiguous(@361) -> float_type, {512}, {1}, target_id=0
Time: 0.01187ms, 0.0119ms
Output has normal
Output: 0.000925222, 0.000925222, 0.000925222, 0.000925222, 0.000925222, ..., 0.000925222, 0.000925222, 0.000925222, 0.000925222, 0.000925222
Min value: 0.000925222, Max value: 0.000925222, Mean: 0.000925222, StdDev: 0
Run instruction: @363 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@54) -> int32_type, {512}, {0}, target_id=0
Time: 0.00196ms, 0.002ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @364 = ref::contiguous(@363) -> int32_type, {512}, {1}, target_id=0
Time: 0.01013ms, 0.01017ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @365 = ref::dequantizelinear(@56,@362,@364) -> float_type, {512}, {1}, target_id=0
Time: 2.70119ms, 2.70134ms
Output has normal
Output: 0.127681, 0.0129531, 0.0490368, -0.0388593, 0.0888213, ..., 0.0712421, -0.091597, 0.0897465, -0.170241, -0.00555133
Min value: -0.973333, Max value: 0.216502, Mean: 0.0313473, StdDev: 0.0875453
Run instruction: @366 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@60) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00365ms, 0.00369ms
Output has normal
Output: 0.00197858, 0.00197858, 0.00197858, 0.00197858, 0.00197858, ..., 0.00197858, 0.00197858, 0.00197858, 0.00197858, 0.00197858
Min value: 0.00197858, Max value: 0.00197858, Mean: 0.00197858, StdDev: 0
Run instruction: @367 = ref::contiguous(@366) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 53.8386ms, 53.8391ms
Output has normal
Output: 0.00197858, 0.00197858, 0.00197858, 0.00197858, 0.00197858, ..., 0.00197858, 0.00197858, 0.00197858, 0.00197858, 0.00197858
Min value: 0.00197858, Max value: 0.00197858, Mean: 0.00197858, StdDev: 0
Run instruction: @368 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@59) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00315ms, 0.00319ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @369 = ref::contiguous(@368) -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 49.9665ms, 49.9665ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @370 = ref::dequantizelinear(@61,@367,@369) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 13.2367ms, 13.2369ms
Output has zero, normal
Output: 0.00395715, -0.0217643, -0.0178072, -0.01385, -0.0118715, ..., -0.00593573, -0.00197858, -0.0079143, 0.00197858, 0.00395715
Min value: -0.237429, Max value: 0.251279, Mean: -0.00159594, StdDev: 0.0170596
Run instruction: @371 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@65) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.008171ms, 0.008221ms
Output has normal
Output: 0.46762, 0.46762, 0.46762, 0.46762, 0.46762, ..., 0.46762, 0.46762, 0.46762, 0.46762, 0.46762
Min value: 0.46762, Max value: 0.46762, Mean: 0.46762, StdDev: 0
Run instruction: @372 = ref::contiguous(@371) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 8.53021ms, 8.53028ms
Output has normal
Output: 0.46762, 0.46762, 0.46762, 0.46762, 0.46762, ..., 0.46762, 0.46762, 0.46762, 0.46762, 0.46762
Min value: 0.46762, Max value: 0.46762, Mean: 0.46762, StdDev: 0
Run instruction: @373 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@66) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.00166ms, 0.00169ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @374 = ref::contiguous(@373) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 8.77843ms, 8.77849ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @375 = ref::dequantizelinear(@360,@372,@374) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 3.08476ms, 3.08491ms
Output has normal, zero
Output: 0, 0, 0, 0, 1.87048, ..., 1.40286, 2.80572, 7.0143, 0.46762, 7.48192
Min value: 0, Max value: 50.503, Mean: 0.572653, StdDev: 1.57198
Run instruction: @376 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@375,@370) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 1996.79ms, 1996.79ms
Output has normal
Output: -6.2508, -7.13624, -5.18032, -7.80425, -10.8334, ..., -9.16062, -9.27443, -8.7526, -9.65747, -3.36041
Min value: -41.5665, Max value: 28.7929, Mean: -3.86831, StdDev: 4.06432
Run instruction: @377 = ref::broadcast[axis=1,out_lens={1, 512, 28, 28}](@365) -> float_type, {1, 512, 28, 28}, {0, 1, 0, 0}, target_id=0
Time: 0.016891ms, 0.016981ms
Output has normal
Output: 0.127681, 0.127681, 0.127681, 0.127681, 0.127681, ..., -0.00555133, -0.00555133, -0.00555133, -0.00555133, -0.00555133
Min value: -0.973333, Max value: 0.216502, Mean: 0.0313473, StdDev: 0.0875453
Run instruction: @378 = ref::contiguous(@377) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 8.54778ms, 8.54788ms
Output has normal
Output: 0.127681, 0.127681, 0.127681, 0.127681, 0.127681, ..., -0.00555133, -0.00555133, -0.00555133, -0.00555133, -0.00555133
Min value: -0.973333, Max value: 0.216502, Mean: 0.0313473, StdDev: 0.0875453
Run instruction: @379 = ref::add(@376,@378) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 2.3276ms, 2.32767ms
Output has zero, normal
Output: -6.12312, -7.00856, -5.05264, -7.67657, -10.7057, ..., -9.16617, -9.27998, -8.75815, -9.66302, -3.36596
Min value: -42.1947, Max value: 28.9715, Mean: -3.83696, StdDev: 4.0826
Run instruction: @380 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@57) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.00396ms, 0.004ms
Output has normal
Output: 0.41074, 0.41074, 0.41074, 0.41074, 0.41074, ..., 0.41074, 0.41074, 0.41074, 0.41074, 0.41074
Min value: 0.41074, Max value: 0.41074, Mean: 0.41074, StdDev: 0
Run instruction: @381 = ref::contiguous(@380) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 9.21099ms, 9.21106ms
Output has normal
Output: 0.41074, 0.41074, 0.41074, 0.41074, 0.41074, ..., 0.41074, 0.41074, 0.41074, 0.41074, 0.41074
Min value: 0.41074, Max value: 0.41074, Mean: 0.41074, StdDev: 0
Run instruction: @382 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@58) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.00315ms, 0.00319ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @383 = ref::contiguous(@382) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 8.87779ms, 8.87786ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @384 = ref::quantizelinear(@379,@381,@383) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 3.0182ms, 3.0187ms
Output has normal, zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value: G, Mean: 0.79546, StdDev: 2.76537
Run instruction: @385 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@47) -> float_type, {512}, {0}, target_id=0
Time: 0.00451ms, 0.00455ms
Output has normal
Output: 0.000870825, 0.000870825, 0.000870825, 0.000870825, 0.000870825, ..., 0.000870825, 0.000870825, 0.000870825, 0.000870825, 0.000870825
Min value: 0.000870825, Max value: 0.000870825, Mean: 0.000870825, StdDev: 0
Run instruction: @386 = ref::contiguous(@385) -> float_type, {512}, {1}, target_id=0
Time: 0.013311ms, 0.013341ms
Output has normal
Output: 0.000870825, 0.000870825, 0.000870825, 0.000870825, 0.000870825, ..., 0.000870825, 0.000870825, 0.000870825, 0.000870825, 0.000870825
Min value: 0.000870825, Max value: 0.000870825, Mean: 0.000870825, StdDev: 0
Run instruction: @387 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@46) -> int32_type, {512}, {0}, target_id=0
Time: 0.00094ms, 0.00097ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @388 = ref::contiguous(@387) -> int32_type, {512}, {1}, target_id=0
Time: 0.01282ms, 0.01286ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @389 = ref::dequantizelinear(@48,@386,@388) -> float_type, {512}, {1}, target_id=0
Time: 2.65218ms, 2.65233ms
Output has zero, normal
Output: 0.0862117, -0.0775034, -0.0539911, 0.0156748, 0.00609577, ..., 0.0914366, 0.00783742, -0.014804, 0.0470245, 0.0182873
Min value: -0.513787, Max value: 0.477212, Mean: 0.0389949, StdDev: 0.0809356
Run instruction: @390 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@52) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00388ms, 0.00392ms
Output has normal
Output: 0.00212013, 0.00212013, 0.00212013, 0.00212013, 0.00212013, ..., 0.00212013, 0.00212013, 0.00212013, 0.00212013, 0.00212013
Min value: 0.00212013, Max value: 0.00212013, Mean: 0.00212013, StdDev: 0
Run instruction: @391 = ref::contiguous(@390) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 53.8088ms, 53.809ms
Output has normal
Output: 0.00212013, 0.00212013, 0.00212013, 0.00212013, 0.00212013, ..., 0.00212013, 0.00212013, 0.00212013, 0.00212013, 0.00212013
Min value: 0.00212013, Max value: 0.00212013, Mean: 0.00212013, StdDev: 0
Run instruction: @392 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@51) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.01482ms, 0.01486ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @393 = ref::contiguous(@392) -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 49.9678ms, 49.9678ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @394 = ref::dequantizelinear(@53,@391,@393) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 13.1236ms, 13.1237ms
Output has zero, normal
Output: 0.0190812, 0.0169611, 0.0063604, -0.0106007, -0.00424027, ..., 0.00212013, -0.00424027, -0.00424027, 0, 0.0063604
Min value: -0.199293, Max value: 0.269257, Mean: -0.00225764, StdDev: 0.0170223
Run instruction: @395 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@57) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.00466ms, 0.00469ms
Output has normal
Output: 0.41074, 0.41074, 0.41074, 0.41074, 0.41074, ..., 0.41074, 0.41074, 0.41074, 0.41074, 0.41074
Min value: 0.41074, Max value: 0.41074, Mean: 0.41074, StdDev: 0
Run instruction: @396 = ref::contiguous(@395) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 8.52436ms, 8.52442ms
Output has normal
Output: 0.41074, 0.41074, 0.41074, 0.41074, 0.41074, ..., 0.41074, 0.41074, 0.41074, 0.41074, 0.41074
Min value: 0.41074, Max value: 0.41074, Mean: 0.41074, StdDev: 0
Run instruction: @397 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@58) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.00139ms, 0.00143ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @398 = ref::contiguous(@397) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 8.77704ms, 8.77716ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @399 = ref::dequantizelinear(@384,@396,@398) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 2.98127ms, 2.98142ms
Output has normal, zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 29.1626, Mean: 0.326728, StdDev: 1.13585
Run instruction: @400 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@399,@394) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 2108.26ms, 2108.27ms
Output has normal
Output: -5.09433, -10.422, -7.56921, -7.37937, -5.87807, ..., -6.52074, -6.25949, -6.27952, -7.7425, -10.3811
Min value: -28.5918, Max value: 23.4835, Mean: -4.5276, StdDev: 2.92597
Run instruction: @401 = ref::broadcast[axis=1,out_lens={1, 512, 28, 28}](@389) -> float_type, {1, 512, 28, 28}, {0, 1, 0, 0}, target_id=0
Time: 0.00845ms, 0.00854ms
Output has zero, normal
Output: 0.0862117, 0.0862117, 0.0862117, 0.0862117, 0.0862117, ..., 0.0182873, 0.0182873, 0.0182873, 0.0182873, 0.0182873
Min value: -0.513787, Max value: 0.477212, Mean: 0.0389949, StdDev: 0.0809356
Run instruction: @402 = ref::contiguous(@401) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 8.95431ms, 8.95438ms
Output has zero, normal
Output: 0.0862117, 0.0862117, 0.0862117, 0.0862117, 0.0862117, ..., 0.0182873, 0.0182873, 0.0182873, 0.0182873, 0.0182873
Min value: -0.513787, Max value: 0.477212, Mean: 0.0389949, StdDev: 0.0809356
Run instruction: @403 = ref::add(@400,@402) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 2.73037ms, 2.73045ms
Output has normal
Output: -5.00811, -10.3358, -7.483, -7.29316, -5.79186, ..., -6.50245, -6.2412, -6.26123, -7.72422, -10.3628
Min value: -28.4542, Max value: 23.5898, Mean: -4.48861, StdDev: 2.93063
Run instruction: @404 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@49) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.00389ms, 0.00393ms
Output has normal
Output: 0.35621, 0.35621, 0.35621, 0.35621, 0.35621, ..., 0.35621, 0.35621, 0.35621, 0.35621, 0.35621
Min value: 0.35621, Max value: 0.35621, Mean: 0.35621, StdDev: 0
Run instruction: @405 = ref::contiguous(@404) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 9.20721ms, 9.20733ms
Output has normal
Output: 0.35621, 0.35621, 0.35621, 0.35621, 0.35621, ..., 0.35621, 0.35621, 0.35621, 0.35621, 0.35621
Min value: 0.35621, Max value: 0.35621, Mean: 0.35621, StdDev: 0
Run instruction: @406 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.00168ms, 0.00172ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @407 = ref::contiguous(@406) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 9.0339ms, 9.03397ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @408 = ref::quantizelinear(@403,@405,@407) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 3.31914ms, 3.3193ms
Output has normal, zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value: B, Mean: 0.159431, StdDev: 1.27967
Run instruction: @409 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@49) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.00277ms, 0.00281ms
Output has normal
Output: 0.35621, 0.35621, 0.35621, 0.35621, 0.35621, ..., 0.35621, 0.35621, 0.35621, 0.35621, 0.35621
Min value: 0.35621, Max value: 0.35621, Mean: 0.35621, StdDev: 0
Run instruction: @410 = ref::contiguous(@409) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 9.17494ms, 9.175ms
Output has normal
Output: 0.35621, 0.35621, 0.35621, 0.35621, 0.35621, ..., 0.35621, 0.35621, 0.35621, 0.35621, 0.35621
Min value: 0.35621, Max value: 0.35621, Mean: 0.35621, StdDev: 0
Run instruction: @411 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
Time: 0.002ms, 0.00204ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @412 = ref::contiguous(@411) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 8.88435ms, 8.88441ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @413 = ref::dequantizelinear(@408,@410,@412) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
Time: 5.02305ms, 5.02321ms
Output has normal, zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 23.5098, Mean: 0.056791, StdDev: 0.45583
Run instruction: @414 = ref::pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@413) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 3.24505ms, 3.2452ms
Output has normal, zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 23.5098, Mean: 0.127658, StdDev: 0.714889
Run instruction: @415 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@49) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.003751ms, 0.003801ms
Output has normal
Output: 0.35621, 0.35621, 0.35621, 0.35621, 0.35621, ..., 0.35621, 0.35621, 0.35621, 0.35621, 0.35621
Min value: 0.35621, Max value: 0.35621, Mean: 0.35621, StdDev: 0
Run instruction: @416 = ref::contiguous(@415) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.24167ms, 2.24174ms
Output has normal
Output: 0.35621, 0.35621, 0.35621, 0.35621, 0.35621, ..., 0.35621, 0.35621, 0.35621, 0.35621, 0.35621
Min value: 0.35621, Max value: 0.35621, Mean: 0.35621, StdDev: 0
Run instruction: @417 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.00133ms, 0.00137ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @418 = ref::contiguous(@417) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.25897ms, 2.25906ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @419 = ref::quantizelinear(@414,@416,@418) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.83681ms, 2.83696ms
Output has normal, zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value: B, Mean: 0.358379, StdDev: 2.00693
Run instruction: @420 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@39) -> float_type, {512}, {0}, target_id=0
Time: 0.00264ms, 0.00268ms
Output has normal
Output: 0.000786583, 0.000786583, 0.000786583, 0.000786583, 0.000786583, ..., 0.000786583, 0.000786583, 0.000786583, 0.000786583, 0.000786583
Min value: 0.000786583, Max value: 0.000786583, Mean: 0.000786583, StdDev: 0
Run instruction: @421 = ref::contiguous(@420) -> float_type, {512}, {1}, target_id=0
Time: 0.0114ms, 0.01143ms
Output has normal
Output: 0.000786583, 0.000786583, 0.000786583, 0.000786583, 0.000786583, ..., 0.000786583, 0.000786583, 0.000786583, 0.000786583, 0.000786583
Min value: 0.000786583, Max value: 0.000786583, Mean: 0.000786583, StdDev: 0
Run instruction: @422 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@38) -> int32_type, {512}, {0}, target_id=0
Time: 0.00124ms, 0.00127ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @423 = ref::contiguous(@422) -> int32_type, {512}, {1}, target_id=0
Time: 0.011831ms, 0.011861ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @424 = ref::dequantizelinear(@40,@421,@423) -> float_type, {512}, {1}, target_id=0
Time: 2.71908ms, 2.71922ms
Output has zero, normal
Output: -0.0259573, 0.0393292, 0.0275304, -0.143945, -0.12192, ..., 0.171475, -0.0739388, 0.0928168, 0.0574206, 0.0393292
Min value: -0.53173, Max value: 0.494761, Mean: 0.0144535, StdDev: 0.107402
Run instruction: @425 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@44) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.002951ms, 0.002991ms
Output has normal
Output: 0.0022082, 0.0022082, 0.0022082, 0.0022082, 0.0022082, ..., 0.0022082, 0.0022082, 0.0022082, 0.0022082, 0.0022082
Min value: 0.0022082, Max value: 0.0022082, Mean: 0.0022082, StdDev: 0
Run instruction: @426 = ref::contiguous(@425) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 53.842ms, 53.8421ms
Output has normal
Output: 0.0022082, 0.0022082, 0.0022082, 0.0022082, 0.0022082, ..., 0.0022082, 0.0022082, 0.0022082, 0.0022082, 0.0022082
Min value: 0.0022082, Max value: 0.0022082, Mean: 0.0022082, StdDev: 0
Run instruction: @427 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@43) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00218ms, 0.00222ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @428 = ref::contiguous(@427) -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 49.9195ms, 49.9196ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @429 = ref::dequantizelinear(@45,@426,@428) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 12.9229ms, 12.9232ms
Output has zero, normal
Output: -0.00662461, 0.00441641, 0.0198738, -0.011041, -0.011041, ..., 0.011041, 0.0176656, 0.0176656, 0.00662461, 0.0154574
Min value: -0.227445, Max value: 0.280442, Mean: -0.00164969, StdDev: 0.0181649
Run instruction: @430 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@49) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.014651ms, 0.014701ms
Output has normal
Output: 0.35621, 0.35621, 0.35621, 0.35621, 0.35621, ..., 0.35621, 0.35621, 0.35621, 0.35621, 0.35621
Min value: 0.35621, Max value: 0.35621, Mean: 0.35621, StdDev: 0
Run instruction: @431 = ref::contiguous(@430) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.13628ms, 2.13634ms
Output has normal
Output: 0.35621, 0.35621, 0.35621, 0.35621, 0.35621, ..., 0.35621, 0.35621, 0.35621, 0.35621, 0.35621
Min value: 0.35621, Max value: 0.35621, Mean: 0.35621, StdDev: 0
Run instruction: @432 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.00165ms, 0.00168ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @433 = ref::contiguous(@432) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.22399ms, 2.22404ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @434 = ref::dequantizelinear(@419,@431,@433) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.69524ms, 2.69538ms
Output has normal, zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 23.5098, Mean: 0.127658, StdDev: 0.714889
Run instruction: @435 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@434,@429) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 606.395ms, 606.396ms
Output has normal
Output: -3.42872, -4.94997, -2.35975, -2.02388, -1.34663, ..., 1.01627, 0.666236, 0.254066, -0.346097, 1.06346
Min value: -10.8061, Max value: 18.2527, Mean: -0.983641, StdDev: 1.42602
Run instruction: @436 = ref::broadcast[axis=1,out_lens={1, 512, 14, 14}](@424) -> float_type, {1, 512, 14, 14}, {0, 1, 0, 0}, target_id=0
Time: 0.00821ms, 0.00825ms
Output has zero, normal
Output: -0.0259573, -0.0259573, -0.0259573, -0.0259573, -0.0259573, ..., 0.0393292, 0.0393292, 0.0393292, 0.0393292, 0.0393292
Min value: -0.53173, Max value: 0.494761, Mean: 0.0144535, StdDev: 0.107402
Run instruction: @437 = ref::contiguous(@436) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.20853ms, 2.20859ms
Output has zero, normal
Output: -0.0259573, -0.0259573, -0.0259573, -0.0259573, -0.0259573, ..., 0.0393292, 0.0393292, 0.0393292, 0.0393292, 0.0393292
Min value: -0.53173, Max value: 0.494761, Mean: 0.0144535, StdDev: 0.107402
Run instruction: @438 = ref::add(@435,@437) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 0.583252ms, 0.583312ms
Output has zero, normal
Output: -3.45467, -4.97593, -2.38571, -2.04984, -1.37259, ..., 1.05559, 0.705565, 0.293396, -0.306767, 1.10279
Min value: -10.9437, Max value: 18.2181, Mean: -0.969187, StdDev: 1.45488
Run instruction: @439 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@41) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.0066ms, 0.00665ms
Output has normal
Output: 0.465653, 0.465653, 0.465653, 0.465653, 0.465653, ..., 0.465653, 0.465653, 0.465653, 0.465653, 0.465653
Min value: 0.465653, Max value: 0.465653, Mean: 0.465653, StdDev: 0
Run instruction: @440 = ref::contiguous(@439) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.16271ms, 2.16278ms
Output has normal
Output: 0.465653, 0.465653, 0.465653, 0.465653, 0.465653, ..., 0.465653, 0.465653, 0.465653, 0.465653, 0.465653
Min value: 0.465653, Max value: 0.465653, Mean: 0.465653, StdDev: 0
Run instruction: @441 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@42) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.00157ms, 0.0016ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @442 = ref::contiguous(@441) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.2529ms, 2.25295ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @443 = ref::quantizelinear(@438,@440,@442) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.79566ms, 2.79582ms
Output has normal, zero
Output:  ,  ,  ,  ,  , ..., , , ,  , 
Min value:  , Max value: ', Mean: 0.350357, StdDev: 1.22946
Run instruction: @444 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@31) -> float_type, {512}, {0}, target_id=0
Time: 0.0026ms, 0.00263ms
Output has normal
Output: 0.000806395, 0.000806395, 0.000806395, 0.000806395, 0.000806395, ..., 0.000806395, 0.000806395, 0.000806395, 0.000806395, 0.000806395
Min value: 0.000806395, Max value: 0.000806395, Mean: 0.000806395, StdDev: 0
Run instruction: @445 = ref::contiguous(@444) -> float_type, {512}, {1}, target_id=0
Time: 0.01156ms, 0.01159ms
Output has normal
Output: 0.000806395, 0.000806395, 0.000806395, 0.000806395, 0.000806395, ..., 0.000806395, 0.000806395, 0.000806395, 0.000806395, 0.000806395
Min value: 0.000806395, Max value: 0.000806395, Mean: 0.000806395, StdDev: 0
Run instruction: @446 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@30) -> int32_type, {512}, {0}, target_id=0
Time: 0.00115ms, 0.00119ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @447 = ref::contiguous(@446) -> int32_type, {512}, {1}, target_id=0
Time: 0.0122ms, 0.01225ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @448 = ref::dequantizelinear(@32,@445,@447) -> float_type, {512}, {1}, target_id=0
Time: 2.68117ms, 2.68131ms
Output has zero, normal
Output: 0.115314, 0.145151, 0.144345, 0.0935418, -0.232242, ..., 0.111283, 0.0129023, -0.00322558, -0.00483837, 0.14757
Min value: -1.31039, Max value: 0.581411, Mean: 0.0547293, StdDev: 0.171698
Run instruction: @449 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@36) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.0085ms, 0.00854ms
Output has normal
Output: 0.00173175, 0.00173175, 0.00173175, 0.00173175, 0.00173175, ..., 0.00173175, 0.00173175, 0.00173175, 0.00173175, 0.00173175
Min value: 0.00173175, Max value: 0.00173175, Mean: 0.00173175, StdDev: 0
Run instruction: @450 = ref::contiguous(@449) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 53.864ms, 53.8641ms
Output has normal
Output: 0.00173175, 0.00173175, 0.00173175, 0.00173175, 0.00173175, ..., 0.00173175, 0.00173175, 0.00173175, 0.00173175, 0.00173175
Min value: 0.00173175, Max value: 0.00173175, Mean: 0.00173175, StdDev: 0
Run instruction: @451 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@35) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00209ms, 0.00213ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @452 = ref::contiguous(@451) -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 49.0035ms, 49.0035ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @453 = ref::dequantizelinear(@37,@450,@452) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 13.1249ms, 13.125ms
Output has zero, normal
Output: -0.00173175, -0.0103905, -0.00865876, 0.0034635, -0.00865876, ..., -0.0259763, -0.013854, -0.0190493, -0.0242445, -0.00692701
Min value: -0.219933, Max value: 0.159321, Mean: -0.00193289, StdDev: 0.0175962
Run instruction: @454 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@41) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.0074ms, 0.00744ms
Output has normal
Output: 0.465653, 0.465653, 0.465653, 0.465653, 0.465653, ..., 0.465653, 0.465653, 0.465653, 0.465653, 0.465653
Min value: 0.465653, Max value: 0.465653, Mean: 0.465653, StdDev: 0
Run instruction: @455 = ref::contiguous(@454) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.14073ms, 2.14079ms
Output has normal
Output: 0.465653, 0.465653, 0.465653, 0.465653, 0.465653, ..., 0.465653, 0.465653, 0.465653, 0.465653, 0.465653
Min value: 0.465653, Max value: 0.465653, Mean: 0.465653, StdDev: 0
Run instruction: @456 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@42) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.0014ms, 0.00143ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @457 = ref::contiguous(@456) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.19847ms, 2.19852ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @458 = ref::dequantizelinear(@443,@455,@457) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.7754ms, 2.77554ms
Output has normal, zero
Output: 0, 0, 0, 0, 0, ..., 0.931305, 0.931305, 0.465653, 0, 0.931305
Min value: 0, Max value: 18.1605, Mean: 0.163145, StdDev: 0.5725
Run instruction: @459 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@458,@453) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 599.786ms, 599.787ms
Output has normal
Output: 0.454807, -1.30475, -1.77407, -1.52731, -1.31846, ..., 0.7314, 0.729788, 0.621731, 1.07896, 1.34265
Min value: -15.6642, Max value: 9.63803, Mean: -1.17514, StdDev: 1.42018
Run instruction: @460 = ref::broadcast[axis=1,out_lens={1, 512, 14, 14}](@448) -> float_type, {1, 512, 14, 14}, {0, 1, 0, 0}, target_id=0
Time: 0.00722ms, 0.00729ms
Output has zero, normal
Output: 0.115314, 0.115314, 0.115314, 0.115314, 0.115314, ..., 0.14757, 0.14757, 0.14757, 0.14757, 0.14757
Min value: -1.31039, Max value: 0.581411, Mean: 0.0547293, StdDev: 0.171698
Run instruction: @461 = ref::contiguous(@460) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 3.7959ms, 3.79601ms
Output has zero, normal
Output: 0.115314, 0.115314, 0.115314, 0.115314, 0.115314, ..., 0.14757, 0.14757, 0.14757, 0.14757, 0.14757
Min value: -1.31039, Max value: 0.581411, Mean: 0.0547293, StdDev: 0.171698
Run instruction: @462 = ref::add(@459,@461) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 1.03197ms, 1.03204ms
Output has zero, normal
Output: 0.570121, -1.18943, -1.65875, -1.412, -1.20314, ..., 0.878971, 0.877358, 0.769301, 1.22653, 1.49022
Min value: -16.5424, Max value: 9.92753, Mean: -1.12041, StdDev: 1.43584
Run instruction: @463 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@33) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.00733ms, 0.00741ms
Output has normal
Output: 0.28346, 0.28346, 0.28346, 0.28346, 0.28346, ..., 0.28346, 0.28346, 0.28346, 0.28346, 0.28346
Min value: 0.28346, Max value: 0.28346, Mean: 0.28346, StdDev: 0
Run instruction: @464 = ref::contiguous(@463) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.13758ms, 2.13765ms
Output has normal
Output: 0.28346, 0.28346, 0.28346, 0.28346, 0.28346, ..., 0.28346, 0.28346, 0.28346, 0.28346, 0.28346
Min value: 0.28346, Max value: 0.28346, Mean: 0.28346, StdDev: 0
Run instruction: @465 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@34) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.00144ms, 0.00147ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @466 = ref::contiguous(@465) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.22721ms, 2.22724ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @467 = ref::quantizelinear(@462,@464,@466) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.80423ms, 2.80455ms
Output has zero, normal
Output: ,  ,  ,  ,  , ..., , , , , 
Min value:  , Max value: #, Mean: 0.418318, StdDev: 1.54635
Run instruction: @468 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@23) -> float_type, {512}, {0}, target_id=0
Time: 0.00274ms, 0.00278ms
Output has normal
Output: 0.000350484, 0.000350484, 0.000350484, 0.000350484, 0.000350484, ..., 0.000350484, 0.000350484, 0.000350484, 0.000350484, 0.000350484
Min value: 0.000350484, Max value: 0.000350484, Mean: 0.000350484, StdDev: 0
Run instruction: @469 = ref::contiguous(@468) -> float_type, {512}, {1}, target_id=0
Time: 0.01353ms, 0.01357ms
Output has normal
Output: 0.000350484, 0.000350484, 0.000350484, 0.000350484, 0.000350484, ..., 0.000350484, 0.000350484, 0.000350484, 0.000350484, 0.000350484
Min value: 0.000350484, Max value: 0.000350484, Mean: 0.000350484, StdDev: 0
Run instruction: @470 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@22) -> int32_type, {512}, {0}, target_id=0
Time: 0.01006ms, 0.01011ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @471 = ref::contiguous(@470) -> int32_type, {512}, {1}, target_id=0
Time: 0.01341ms, 0.01344ms
Output has zero
Output: 0, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 0, Mean: 0, StdDev: 0
Run instruction: @472 = ref::dequantizelinear(@24,@469,@471) -> float_type, {512}, {1}, target_id=0
Time: 2.79469ms, 2.79483ms
Output has normal
Output: 0.284593, 0.249194, 0.0704473, 0.181551, 0.107248, ..., 0.0543251, 0.156666, -0.0525726, 0.0473154, -0.0248844
Min value: -0.881118, Max value: 1.40264, Mean: 0.0675319, StdDev: 0.15401
Run instruction: @473 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@28) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00211ms, 0.00215ms
Output has normal
Output: 0.00123645, 0.00123645, 0.00123645, 0.00123645, 0.00123645, ..., 0.00123645, 0.00123645, 0.00123645, 0.00123645, 0.00123645
Min value: 0.00123645, Max value: 0.00123645, Mean: 0.00123645, StdDev: 0
Run instruction: @474 = ref::contiguous(@473) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 50.1373ms, 50.1374ms
Output has normal
Output: 0.00123645, 0.00123645, 0.00123645, 0.00123645, 0.00123645, ..., 0.00123645, 0.00123645, 0.00123645, 0.00123645, 0.00123645
Min value: 0.00123645, Max value: 0.00123645, Mean: 0.00123645, StdDev: 0
Run instruction: @475 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@27) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
Time: 0.00188ms, 0.00192ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @476 = ref::contiguous(@475) -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 49.0421ms, 49.0423ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @477 = ref::dequantizelinear(@29,@474,@476) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
Time: 14.1655ms, 14.1658ms
Output has zero, normal
Output: 0.0173103, 0.0234925, 0.0321477, 0.0098916, 0.011128, ..., 0.0074187, 0.0074187, 0.0259654, 0.0197832, 0.00865515
Min value: -0.150847, Max value: 0.157029, Mean: -0.00238451, StdDev: 0.0166087
Run instruction: @478 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@33) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.00502ms, 0.00514ms
Output has normal
Output: 0.28346, 0.28346, 0.28346, 0.28346, 0.28346, ..., 0.28346, 0.28346, 0.28346, 0.28346, 0.28346
Min value: 0.28346, Max value: 0.28346, Mean: 0.28346, StdDev: 0
Run instruction: @479 = ref::contiguous(@478) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.1413ms, 2.14137ms
Output has normal
Output: 0.28346, 0.28346, 0.28346, 0.28346, 0.28346, ..., 0.28346, 0.28346, 0.28346, 0.28346, 0.28346
Min value: 0.28346, Max value: 0.28346, Mean: 0.28346, StdDev: 0
Run instruction: @480 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@34) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.00152ms, 0.00156ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @481 = ref::contiguous(@480) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.19859ms, 2.19863ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @482 = ref::dequantizelinear(@467,@479,@481) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.84155ms, 2.84169ms
Output has zero, normal
Output: 0.56692, 0, 0, 0, 0, ..., 0.850381, 0.850381, 0.850381, 1.13384, 1.4173
Min value: 0, Max value: 9.92111, Mean: 0.118576, StdDev: 0.438329
Run instruction: @483 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@482,@477) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 587.318ms, 587.319ms
Output has normal
Output: 0.0252349, -1.0108, -1.42332, -1.5593, -1.08124, ..., -3.66677, -3.67658, -3.56618, -4.01234, -3.55251
Min value: -12.2547, Max value: 6.67848, Mean: -1.97261, StdDev: 1.347
Run instruction: @484 = ref::broadcast[axis=1,out_lens={1, 512, 14, 14}](@472) -> float_type, {1, 512, 14, 14}, {0, 1, 0, 0}, target_id=0
Time: 0.00851ms, 0.00855ms
Output has normal
Output: 0.284593, 0.284593, 0.284593, 0.284593, 0.284593, ..., -0.0248844, -0.0248844, -0.0248844, -0.0248844, -0.0248844
Min value: -0.881118, Max value: 1.40264, Mean: 0.0675319, StdDev: 0.15401
Run instruction: @485 = ref::contiguous(@484) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.15347ms, 2.15354ms
Output has normal
Output: 0.284593, 0.284593, 0.284593, 0.284593, 0.284593, ..., -0.0248844, -0.0248844, -0.0248844, -0.0248844, -0.0248844
Min value: -0.881118, Max value: 1.40264, Mean: 0.0675319, StdDev: 0.15401
Run instruction: @486 = ref::add(@483,@485) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 0.586732ms, 0.586802ms
Output has zero, normal
Output: 0.309828, -0.726204, -1.13872, -1.27471, -0.796651, ..., -3.69165, -3.70146, -3.59106, -4.03723, -3.57739
Min value: -11.9778, Max value: 6.65359, Mean: -1.90508, StdDev: 1.3644
Run instruction: @487 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@25) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.00579ms, 0.00583ms
Output has normal
Output: 0.233266, 0.233266, 0.233266, 0.233266, 0.233266, ..., 0.233266, 0.233266, 0.233266, 0.233266, 0.233266
Min value: 0.233266, Max value: 0.233266, Mean: 0.233266, StdDev: 0
Run instruction: @488 = ref::contiguous(@487) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.13563ms, 2.1357ms
Output has normal
Output: 0.233266, 0.233266, 0.233266, 0.233266, 0.233266, ..., 0.233266, 0.233266, 0.233266, 0.233266, 0.233266
Min value: 0.233266, Max value: 0.233266, Mean: 0.233266, StdDev: 0
Run instruction: @489 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.0029ms, 0.00294ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @490 = ref::contiguous(@489) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.22118ms, 2.22123ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @491 = ref::quantizelinear(@486,@488,@490) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.83646ms, 2.8366ms
Output has zero, normal
Output: ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value: , Mean: 0.0699239, StdDev: 0.629989
Run instruction: @492 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@25) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.00236ms, 0.00239ms
Output has normal
Output: 0.233266, 0.233266, 0.233266, 0.233266, 0.233266, ..., 0.233266, 0.233266, 0.233266, 0.233266, 0.233266
Min value: 0.233266, Max value: 0.233266, Mean: 0.233266, StdDev: 0
Run instruction: @493 = ref::contiguous(@492) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.16772ms, 2.1678ms
Output has normal
Output: 0.233266, 0.233266, 0.233266, 0.233266, 0.233266, ..., 0.233266, 0.233266, 0.233266, 0.233266, 0.233266
Min value: 0.233266, Max value: 0.233266, Mean: 0.233266, StdDev: 0
Run instruction: @494 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
Time: 0.01013ms, 0.01017ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @495 = ref::contiguous(@494) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.19554ms, 2.19559ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @496 = ref::dequantizelinear(@491,@493,@495) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
Time: 2.81946ms, 2.8196ms
Output has zero, normal
Output: 0.233266, 0, 0, 0, 0, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 6.76471, Mean: 0.0163109, StdDev: 0.146955
Run instruction: @497 = ref::pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@496) -> float_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
Time: 2.95967ms, 2.95985ms
Output has zero, normal
Output: 0.233266, 0, 0, 0.233266, 0.466532, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 6.76471, Mean: 0.033863, StdDev: 0.223733
Run instruction: @498 = ref::multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@25) -> float_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
Time: 0.0044ms, 0.00444ms
Output has normal
Output: 0.233266, 0.233266, 0.233266, 0.233266, 0.233266, ..., 0.233266, 0.233266, 0.233266, 0.233266, 0.233266
Min value: 0.233266, Max value: 0.233266, Mean: 0.233266, StdDev: 0
Run instruction: @499 = ref::contiguous(@498) -> float_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
Time: 0.574791ms, 0.574831ms
Output has normal
Output: 0.233266, 0.233266, 0.233266, 0.233266, 0.233266, ..., 0.233266, 0.233266, 0.233266, 0.233266, 0.233266
Min value: 0.233266, Max value: 0.233266, Mean: 0.233266, StdDev: 0
Run instruction: @500 = ref::multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
Time: 0.0014ms, 0.00144ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @501 = ref::contiguous(@500) -> uint8_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
Time: 0.595841ms, 0.595881ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @502 = ref::quantizelinear(@497,@499,@501) -> uint8_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
Time: 2.69269ms, 2.69287ms
Output has zero, normal
Output: ,  ,  , , , ...,  ,  ,  ,  ,  
Min value:  , Max value: , Mean: 0.145169, StdDev: 0.959132
Run instruction: @503 = ref::multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@25) -> float_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
Time: 0.0021ms, 0.00213ms
Output has normal
Output: 0.233266, 0.233266, 0.233266, 0.233266, 0.233266, ..., 0.233266, 0.233266, 0.233266, 0.233266, 0.233266
Min value: 0.233266, Max value: 0.233266, Mean: 0.233266, StdDev: 0
Run instruction: @504 = ref::contiguous(@503) -> float_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
Time: 0.568062ms, 0.568112ms
Output has normal
Output: 0.233266, 0.233266, 0.233266, 0.233266, 0.233266, ..., 0.233266, 0.233266, 0.233266, 0.233266, 0.233266
Min value: 0.233266, Max value: 0.233266, Mean: 0.233266, StdDev: 0
Run instruction: @505 = ref::multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
Time: 0.00127ms, 0.0013ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @506 = ref::contiguous(@505) -> uint8_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
Time: 0.581291ms, 0.581341ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @507 = ref::dequantizelinear(@502,@504,@506) -> float_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
Time: 2.5937ms, 2.59383ms
Output has zero, normal
Output: 0.233266, 0, 0, 0.233266, 0.466532, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 6.76471, Mean: 0.033863, StdDev: 0.223733
Run instruction: @508 = ref::flatten[axis=1](@507) -> float_type, {1, 25088}, {25088, 1}, target_id=0
Time: 0.030791ms, 0.030851ms
Output has zero, normal
Output: 0.233266, 0, 0, 0.233266, 0.466532, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 6.76471, Mean: 0.033863, StdDev: 0.223733
Run instruction: @509 = ref::multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@20) -> float_type, {1, 25088}, {0, 0}, target_id=0
Time: 0.0017ms, 0.00173ms
Output has normal
Output: 0.233266, 0.233266, 0.233266, 0.233266, 0.233266, ..., 0.233266, 0.233266, 0.233266, 0.233266, 0.233266
Min value: 0.233266, Max value: 0.233266, Mean: 0.233266, StdDev: 0
Run instruction: @510 = ref::contiguous(@509) -> float_type, {1, 25088}, {25088, 1}, target_id=0
Time: 0.48018ms, 0.48022ms
Output has normal
Output: 0.233266, 0.233266, 0.233266, 0.233266, 0.233266, ..., 0.233266, 0.233266, 0.233266, 0.233266, 0.233266
Min value: 0.233266, Max value: 0.233266, Mean: 0.233266, StdDev: 0
Run instruction: @511 = ref::multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@21) -> uint8_type, {1, 25088}, {0, 0}, target_id=0
Time: 0.00149ms, 0.00154ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @512 = ref::contiguous(@511) -> uint8_type, {1, 25088}, {25088, 1}, target_id=0
Time: 0.520601ms, 0.520651ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @513 = ref::quantizelinear(@508,@510,@512) -> uint8_type, {1, 25088}, {25088, 1}, target_id=0
Time: 2.66151ms, 2.66168ms
Output has zero, normal
Output: ,  ,  , , , ...,  ,  ,  ,  ,  
Min value:  , Max value: , Mean: 0.145169, StdDev: 0.959132
Run instruction: @514 = ref::multibroadcast[out_lens={25088, 4096},out_dyn_dims={}](@18) -> float_type, {25088, 4096}, {0, 0}, target_id=0
Time: 0.00227ms, 0.0023ms
Output has normal
Output: 0.000378865, 0.000378865, 0.000378865, 0.000378865, 0.000378865, ..., 0.000378865, 0.000378865, 0.000378865, 0.000378865, 0.000378865
Min value: 0.000378865, Max value: 0.000378865, Mean: 0.000378865, StdDev: 0
Run instruction: @515 = ref::contiguous(@514) -> float_type, {25088, 4096}, {4096, 1}, target_id=0
Time: 2042.3ms, 2042.31ms
Output has normal
Output: 0.000378865, 0.000378865, 0.000378865, 0.000378865, 0.000378865, ..., 0.000378865, 0.000378865, 0.000378865, 0.000378865, 0.000378865
Min value: 0.000378865, Max value: 0.000378865, Mean: 0.000378865, StdDev: 0
Run instruction: @516 = ref::multibroadcast[out_lens={25088, 4096},out_dyn_dims={}](@17) -> int8_type, {25088, 4096}, {0, 0}, target_id=0
Time: 0.00967ms, 0.00988ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @517 = ref::contiguous(@516) -> int8_type, {25088, 4096}, {4096, 1}, target_id=0
Time: 1854.22ms, 1854.22ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @518 = ref::dequantizelinear(@19,@515,@517) -> float_type, {25088, 4096}, {4096, 1}, target_id=0
Time: 506.172ms, 506.173ms
Output has zero, normal
Output: 0.00340978, 0.00454638, 0, -0.00416751, -0.00151546, ..., 0.00568297, 0.00113659, 0.00378865, -0.00454638, 0.00871389
Min value: -0.0454638, Max value: 0.0481158, Mean: -0.000324936, StdDev: 0.00517127
Run instruction: @519 = ref::multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@20) -> float_type, {1, 25088}, {0, 0}, target_id=0
Time: 0.01133ms, 0.01144ms
Output has normal
Output: 0.233266, 0.233266, 0.233266, 0.233266, 0.233266, ..., 0.233266, 0.233266, 0.233266, 0.233266, 0.233266
Min value: 0.233266, Max value: 0.233266, Mean: 0.233266, StdDev: 0
Run instruction: @520 = ref::contiguous(@519) -> float_type, {1, 25088}, {25088, 1}, target_id=0
Time: 0.46818ms, 0.46824ms
Output has normal
Output: 0.233266, 0.233266, 0.233266, 0.233266, 0.233266, ..., 0.233266, 0.233266, 0.233266, 0.233266, 0.233266
Min value: 0.233266, Max value: 0.233266, Mean: 0.233266, StdDev: 0
Run instruction: @521 = ref::multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@21) -> uint8_type, {1, 25088}, {0, 0}, target_id=0
Time: 0.02147ms, 0.02151ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @522 = ref::contiguous(@521) -> uint8_type, {1, 25088}, {25088, 1}, target_id=0
Time: 0.45549ms, 0.45553ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @523 = ref::dequantizelinear(@513,@520,@522) -> float_type, {1, 25088}, {25088, 1}, target_id=0
Time: 3.00407ms, 3.00465ms
Output has zero, normal
Output: 0.233266, 0, 0, 0.233266, 0.466532, ..., 0, 0, 0, 0, 0
Min value: 0, Max value: 6.76471, Mean: 0.033863, StdDev: 0.223733
Run instruction: @524 = ref::dot(@523,@518) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 118.553ms, 118.554ms
Output has normal
Output: 0.463887, 0.429155, -0.18506, 0.115331, 0.244625, ..., 0.668301, 1.86456, 2.09231, 1.12459, -0.589911
Min value: -4.89339, Max value: 2.44298, Mean: 0.0458428, StdDev: 0.787188
Run instruction: @525 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@15) -> float_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.009151ms, 0.009181ms
Output has normal
Output: 0.209525, 0.209525, 0.209525, 0.209525, 0.209525, ..., 0.209525, 0.209525, 0.209525, 0.209525, 0.209525
Min value: 0.209525, Max value: 0.209525, Mean: 0.209525, StdDev: 0
Run instruction: @526 = ref::contiguous(@525) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.136273ms, 0.136333ms
Output has normal
Output: 0.209525, 0.209525, 0.209525, 0.209525, 0.209525, ..., 0.209525, 0.209525, 0.209525, 0.209525, 0.209525
Min value: 0.209525, Max value: 0.209525, Mean: 0.209525, StdDev: 0
Run instruction: @527 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@16) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.00153ms, 0.00156ms
Output has normal
Output: �, �, �, �, �, ..., �, �, �, �, �
Min value: �, Max value: �, Mean: 157, StdDev: 0
Run instruction: @528 = ref::contiguous(@527) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.078451ms, 0.078481ms
Output has normal
Output: �, �, �, �, �, ..., �, �, �, �, �
Min value: �, Max value: �, Mean: 157, StdDev: 0
Run instruction: @529 = ref::quantizelinear(@524,@526,@528) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
Time: 3.12136ms, 3.12149ms
Output has normal
Output: �, �, �, �, �, ..., �, �, �, �, �
Min value: �, Max value: �, Mean: 157.217, StdDev: 3.76577
Run instruction: @530 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@15) -> float_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.00301ms, 0.00305ms
Output has normal
Output: 0.209525, 0.209525, 0.209525, 0.209525, 0.209525, ..., 0.209525, 0.209525, 0.209525, 0.209525, 0.209525
Min value: 0.209525, Max value: 0.209525, Mean: 0.209525, StdDev: 0
Run instruction: @531 = ref::contiguous(@530) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.110843ms, 0.110893ms
Output has normal
Output: 0.209525, 0.209525, 0.209525, 0.209525, 0.209525, ..., 0.209525, 0.209525, 0.209525, 0.209525, 0.209525
Min value: 0.209525, Max value: 0.209525, Mean: 0.209525, StdDev: 0
Run instruction: @532 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@16) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.00298ms, 0.00301ms
Output has normal
Output: �, �, �, �, �, ..., �, �, �, �, �
Min value: �, Max value: �, Mean: 157, StdDev: 0
Run instruction: @533 = ref::contiguous(@532) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.075882ms, 0.075912ms
Output has normal
Output: �, �, �, �, �, ..., �, �, �, �, �
Min value: �, Max value: �, Mean: 157, StdDev: 0
Run instruction: @534 = ref::dequantizelinear(@529,@531,@533) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 3.17271ms, 3.17283ms
Output has zero, normal
Output: 0.41905, 0.41905, -0.209525, 0.209525, 0.209525, ..., 0.628574, 1.88572, 2.09525, 1.04762, -0.628574
Min value: -4.81907, Max value: 2.5143, Mean: 0.0454243, StdDev: 0.789022
Run instruction: @535 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@130) -> float_type, {1, 4096}, {0, 1}, target_id=0
Time: 0.00234ms, 0.00237ms
Output has normal
Output: 0.0040827, 0.00635765, 0.0269559, 0.0306789, 0.0418043, ..., 0.00812203, 0.0612473, 0.0840872, 0.0261444, 0.0083385
Min value: -0.10516, Max value: 0.103606, Mean: 0.010055, StdDev: 0.0228955
Run instruction: @536 = ref::contiguous(@535) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.076691ms, 0.076731ms
Output has normal
Output: 0.0040827, 0.00635765, 0.0269559, 0.0306789, 0.0418043, ..., 0.00812203, 0.0612473, 0.0840872, 0.0261444, 0.0083385
Min value: -0.10516, Max value: 0.103606, Mean: 0.010055, StdDev: 0.0228955
Run instruction: @537 = ref::add(@534,@536) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.052971ms, 0.053031ms
Output has normal
Output: 0.423132, 0.425407, -0.182569, 0.240204, 0.251329, ..., 0.636697, 1.94697, 2.17934, 1.07377, -0.620236
Min value: -4.92423, Max value: 2.54719, Mean: 0.0554793, StdDev: 0.801019
Run instruction: @538 = ref::relu(@537) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.082372ms, 0.082432ms
Output has zero, normal
Output: 0.423132, 0.425407, 0, 0.240204, 0.251329, ..., 0.636697, 1.94697, 2.17934, 1.07377, 0
Min value: 0, Max value: 2.54719, Mean: 0.335953, StdDev: 0.436595
Run instruction: @539 = ref::flatten[axis=1](@538) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.00237ms, 0.0024ms
Output has zero, normal
Output: 0.423132, 0.425407, 0, 0.240204, 0.251329, ..., 0.636697, 1.94697, 2.17934, 1.07377, 0
Min value: 0, Max value: 2.54719, Mean: 0.335953, StdDev: 0.436595
Run instruction: @540 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@13) -> float_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.00126ms, 0.0013ms
Output has normal
Output: 0.0809295, 0.0809295, 0.0809295, 0.0809295, 0.0809295, ..., 0.0809295, 0.0809295, 0.0809295, 0.0809295, 0.0809295
Min value: 0.0809295, Max value: 0.0809295, Mean: 0.0809295, StdDev: 0
Run instruction: @541 = ref::contiguous(@540) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.076941ms, 0.076971ms
Output has normal
Output: 0.0809295, 0.0809295, 0.0809295, 0.0809295, 0.0809295, ..., 0.0809295, 0.0809295, 0.0809295, 0.0809295, 0.0809295
Min value: 0.0809295, Max value: 0.0809295, Mean: 0.0809295, StdDev: 0
Run instruction: @542 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@14) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.00277ms, 0.0028ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @543 = ref::contiguous(@542) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.082491ms, 0.082531ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @544 = ref::quantizelinear(@539,@541,@543) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
Time: 3.04255ms, 3.04269ms
Output has zero, normal
Output: , ,  , , , ..., , , , 
,  
Min value:  , Max value: , Mean: 4.14624, StdDev: 5.40244
Run instruction: @545 = ref::multibroadcast[out_lens={4096, 4096},out_dyn_dims={}](@11) -> float_type, {4096, 4096}, {0, 0}, target_id=0
Time: 0.00214ms, 0.00218ms
Output has normal
Output: 0.000491461, 0.000491461, 0.000491461, 0.000491461, 0.000491461, ..., 0.000491461, 0.000491461, 0.000491461, 0.000491461, 0.000491461
Min value: 0.000491461, Max value: 0.000491461, Mean: 0.000491461, StdDev: 0
Run instruction: @546 = ref::contiguous(@545) -> float_type, {4096, 4096}, {4096, 1}, target_id=0
Time: 333.124ms, 333.125ms
Output has normal
Output: 0.000491461, 0.000491461, 0.000491461, 0.000491461, 0.000491461, ..., 0.000491461, 0.000491461, 0.000491461, 0.000491461, 0.000491461
Min value: 0.000491461, Max value: 0.000491461, Mean: 0.000491461, StdDev: 0
Run instruction: @547 = ref::multibroadcast[out_lens={4096, 4096},out_dyn_dims={}](@10) -> int8_type, {4096, 4096}, {0, 0}, target_id=0
Time: 0.03212ms, 0.03236ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @548 = ref::contiguous(@547) -> int8_type, {4096, 4096}, {4096, 1}, target_id=0
Time: 312.97ms, 312.97ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @549 = ref::dequantizelinear(@12,@546,@548) -> float_type, {4096, 4096}, {4096, 1}, target_id=0
Time: 86.0849ms, 86.086ms
Output has zero, normal
Output: 0.0250645, -0.0196584, 0.006389, 0.00688046, -0.0152353, ..., 0.0157268, -0.00294877, 0.00589753, -0.00147438, -0.00245731
Min value: -0.0624156, Max value: 0.0614326, Mean: -0.00101748, StdDev: 0.010321
Run instruction: @550 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@13) -> float_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.01239ms, 0.01263ms
Output has normal
Output: 0.0809295, 0.0809295, 0.0809295, 0.0809295, 0.0809295, ..., 0.0809295, 0.0809295, 0.0809295, 0.0809295, 0.0809295
Min value: 0.0809295, Max value: 0.0809295, Mean: 0.0809295, StdDev: 0
Run instruction: @551 = ref::contiguous(@550) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.092432ms, 0.092482ms
Output has normal
Output: 0.0809295, 0.0809295, 0.0809295, 0.0809295, 0.0809295, ..., 0.0809295, 0.0809295, 0.0809295, 0.0809295, 0.0809295
Min value: 0.0809295, Max value: 0.0809295, Mean: 0.0809295, StdDev: 0
Run instruction: @552 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@14) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.02605ms, 0.02609ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @553 = ref::contiguous(@552) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.085892ms, 0.085952ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @554 = ref::dequantizelinear(@544,@551,@553) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 3.05947ms, 3.0601ms
Output has zero, normal
Output: 0.404648, 0.404648, 0, 0.242789, 0.242789, ..., 0.647436, 1.94231, 2.1851, 1.05208, 0
Min value: 0, Max value: 2.50882, Mean: 0.335553, StdDev: 0.437217
Run instruction: @555 = ref::dot(@554,@549) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 11.9768ms, 11.9777ms
Output has normal
Output: -0.237847, -1.84769, -1.02346, -1.33206, -0.612714, ..., -0.637692, 0.552497, -2.13851, -1.22006, -0.248626
Min value: -3.72473, Max value: 2.83845, Mean: -0.564983, StdDev: 0.759422
Run instruction: @556 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@8) -> float_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.023021ms, 0.023081ms
Output has normal
Output: 0.109745, 0.109745, 0.109745, 0.109745, 0.109745, ..., 0.109745, 0.109745, 0.109745, 0.109745, 0.109745
Min value: 0.109745, Max value: 0.109745, Mean: 0.109745, StdDev: 0
Run instruction: @557 = ref::contiguous(@556) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.092842ms, 0.092892ms
Output has normal
Output: 0.109745, 0.109745, 0.109745, 0.109745, 0.109745, ..., 0.109745, 0.109745, 0.109745, 0.109745, 0.109745
Min value: 0.109745, Max value: 0.109745, Mean: 0.109745, StdDev: 0
Run instruction: @558 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@9) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.00136ms, 0.0014ms
Output has normal
Output: �, �, �, �, �, ..., �, �, �, �, �
Min value: �, Max value: �, Mean: 151, StdDev: 0
Run instruction: @559 = ref::contiguous(@558) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.096582ms, 0.096632ms
Output has normal
Output: �, �, �, �, �, ..., �, �, �, �, �
Min value: �, Max value: �, Mean: 151, StdDev: 0
Run instruction: @560 = ref::quantizelinear(@555,@557,@559) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
Time: 2.76342ms, 2.76357ms
Output has normal
Output: �, �, �, �, �, ..., �, �, �, �, �
Min value: u, Max value: �, Mean: 145.854, StdDev: 6.92365
Run instruction: @561 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@8) -> float_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.00252ms, 0.00256ms
Output has normal
Output: 0.109745, 0.109745, 0.109745, 0.109745, 0.109745, ..., 0.109745, 0.109745, 0.109745, 0.109745, 0.109745
Min value: 0.109745, Max value: 0.109745, Mean: 0.109745, StdDev: 0
Run instruction: @562 = ref::contiguous(@561) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.079511ms, 0.079561ms
Output has normal
Output: 0.109745, 0.109745, 0.109745, 0.109745, 0.109745, ..., 0.109745, 0.109745, 0.109745, 0.109745, 0.109745
Min value: 0.109745, Max value: 0.109745, Mean: 0.109745, StdDev: 0
Run instruction: @563 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@9) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.00101ms, 0.00104ms
Output has normal
Output: �, �, �, �, �, ..., �, �, �, �, �
Min value: �, Max value: �, Mean: 151, StdDev: 0
Run instruction: @564 = ref::contiguous(@563) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.076361ms, 0.076391ms
Output has normal
Output: �, �, �, �, �, ..., �, �, �, �, �
Min value: �, Max value: �, Mean: 151, StdDev: 0
Run instruction: @565 = ref::dequantizelinear(@560,@562,@564) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 2.68073ms, 2.68088ms
Output has zero, normal
Output: -0.21949, -1.86567, -0.987705, -1.31694, -0.65847, ..., -0.65847, 0.548725, -2.08516, -1.2072, -0.21949
Min value: -3.73133, Max value: 2.85337, Mean: -0.564774, StdDev: 0.759836
Run instruction: @566 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@129) -> float_type, {1, 4096}, {0, 1}, target_id=0
Time: 0.00771ms, 0.00775ms
Output has normal
Output: 0.0382593, 0.0681266, 0.0583816, 0.0543409, 0.0623104, ..., 0.0802515, 0.0229401, 0.0375624, 0.0607616, 0.0873349
Min value: -0.00379623, Max value: 0.169635, Mean: 0.0638479, StdDev: 0.0183661
Run instruction: @567 = ref::contiguous(@566) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.076022ms, 0.076062ms
Output has normal
Output: 0.0382593, 0.0681266, 0.0583816, 0.0543409, 0.0623104, ..., 0.0802515, 0.0229401, 0.0375624, 0.0607616, 0.0873349
Min value: -0.00379623, Max value: 0.169635, Mean: 0.0638479, StdDev: 0.0183661
Run instruction: @568 = ref::add(@565,@567) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.033191ms, 0.033241ms
Output has normal
Output: -0.181231, -1.79754, -0.929323, -1.2626, -0.59616, ..., -0.578219, 0.571665, -2.04759, -1.14643, -0.132155
Min value: -3.68345, Max value: 2.89496, Mean: -0.500926, StdDev: 0.759321
Run instruction: @569 = ref::relu(@568) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.02838ms, 0.02843ms
Output has normal, zero
Output: 0, 0, 0, 0, 0, ..., 0, 0.571665, 0, 0, 0
Min value: 0, Max value: 2.89496, Mean: 0.114123, StdDev: 0.277599
Run instruction: @570 = ref::flatten[axis=1](@569) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.00444ms, 0.00447ms
Output has normal, zero
Output: 0, 0, 0, 0, 0, ..., 0, 0.571665, 0, 0, 0
Min value: 0, Max value: 2.89496, Mean: 0.114123, StdDev: 0.277599
Run instruction: @571 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@6) -> float_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.00137ms, 0.00141ms
Output has normal
Output: 0.0450882, 0.0450882, 0.0450882, 0.0450882, 0.0450882, ..., 0.0450882, 0.0450882, 0.0450882, 0.0450882, 0.0450882
Min value: 0.0450882, Max value: 0.0450882, Mean: 0.0450882, StdDev: 0
Run instruction: @572 = ref::contiguous(@571) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.075012ms, 0.075052ms
Output has normal
Output: 0.0450882, 0.0450882, 0.0450882, 0.0450882, 0.0450882, ..., 0.0450882, 0.0450882, 0.0450882, 0.0450882, 0.0450882
Min value: 0.0450882, Max value: 0.0450882, Mean: 0.0450882, StdDev: 0
Run instruction: @573 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@7) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.00086ms, 0.00089ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @574 = ref::contiguous(@573) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.075641ms, 0.075671ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @575 = ref::quantizelinear(@570,@572,@574) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
Time: 2.67743ms, 2.67758ms
Output has normal, zero
Output:  ,  ,  ,  ,  , ...,  , 
,  ,  ,  
Min value:  , Max value: @, Mean: 2.53345, StdDev: 6.16508
Run instruction: @576 = ref::multibroadcast[out_lens={4096, 1000},out_dyn_dims={}](@4) -> float_type, {4096, 1000}, {0, 0}, target_id=0
Time: 0.00953ms, 0.00957ms
Output has normal
Output: 0.00104333, 0.00104333, 0.00104333, 0.00104333, 0.00104333, ..., 0.00104333, 0.00104333, 0.00104333, 0.00104333, 0.00104333
Min value: 0.00104333, Max value: 0.00104333, Mean: 0.00104333, StdDev: 0
Run instruction: @577 = ref::contiguous(@576) -> float_type, {4096, 1000}, {1000, 1}, target_id=0
Time: 81.0831ms, 81.0834ms
Output has normal
Output: 0.00104333, 0.00104333, 0.00104333, 0.00104333, 0.00104333, ..., 0.00104333, 0.00104333, 0.00104333, 0.00104333, 0.00104333
Min value: 0.00104333, Max value: 0.00104333, Mean: 0.00104333, StdDev: 0
Run instruction: @578 = ref::multibroadcast[out_lens={4096, 1000},out_dyn_dims={}](@3) -> int8_type, {4096, 1000}, {0, 0}, target_id=0
Time: 0.00309ms, 0.00312ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @579 = ref::contiguous(@578) -> int8_type, {4096, 1000}, {1000, 1}, target_id=0
Time: 71.6549ms, 71.6549ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @580 = ref::dequantizelinear(@5,@577,@579) -> float_type, {4096, 1000}, {1000, 1}, target_id=0
Time: 20.6967ms, 20.6978ms
Output has zero, normal
Output: -0.00939, -0.0260833, -0.00208667, -0.00208667, 0.00834667, ..., -0.0104333, 0.00104333, -0.0208667, -0.0292133, 0.00313
Min value: -0.08451, Max value: 0.132503, Mean: -6.16165e-07, StdDev: 0.0186562
Run instruction: @581 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@6) -> float_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.008201ms, 0.008621ms
Output has normal
Output: 0.0450882, 0.0450882, 0.0450882, 0.0450882, 0.0450882, ..., 0.0450882, 0.0450882, 0.0450882, 0.0450882, 0.0450882
Min value: 0.0450882, Max value: 0.0450882, Mean: 0.0450882, StdDev: 0
Run instruction: @582 = ref::contiguous(@581) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.090672ms, 0.090712ms
Output has normal
Output: 0.0450882, 0.0450882, 0.0450882, 0.0450882, 0.0450882, ..., 0.0450882, 0.0450882, 0.0450882, 0.0450882, 0.0450882
Min value: 0.0450882, Max value: 0.0450882, Mean: 0.0450882, StdDev: 0
Run instruction: @583 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@7) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
Time: 0.00123ms, 0.00126ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @584 = ref::contiguous(@583) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
Time: 0.075681ms, 0.075711ms
Output has zero
Output:  ,  ,  ,  ,  , ...,  ,  ,  ,  ,  
Min value:  , Max value:  , Mean: 0, StdDev: 0
Run instruction: @585 = ref::dequantizelinear(@575,@582,@584) -> float_type, {1, 4096}, {4096, 1}, target_id=0
Time: 2.7383ms, 2.73845ms
Output has normal, zero
Output: 0, 0, 0, 0, 0, ..., 0, 0.586146, 0, 0, 0
Min value: 0, Max value: 2.88564, Mean: 0.114228, StdDev: 0.277972
Run instruction: @586 = ref::dot(@585,@580) -> float_type, {1, 1000}, {1000, 1}, target_id=0
Time: 4.55939ms, 4.55956ms
Output has normal
Output: -0.581956, 0.797832, 0.597245, 1.14914, 1.76464, ..., -1.24196, -1.92435, -1.65084, 0.0550862, 1.53197
Min value: -3.6498, Max value: 3.65328, Mean: -4.17254e-05, StdDev: 1.03734
Run instruction: @587 = ref::multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@1) -> float_type, {1, 1000}, {0, 0}, target_id=0
Time: 0.01192ms, 0.01195ms
Output has normal
Output: 0.20209, 0.20209, 0.20209, 0.20209, 0.20209, ..., 0.20209, 0.20209, 0.20209, 0.20209, 0.20209
Min value: 0.20209, Max value: 0.20209, Mean: 0.20209, StdDev: 0
Run instruction: @588 = ref::contiguous(@587) -> float_type, {1, 1000}, {1000, 1}, target_id=0
Time: 0.033301ms, 0.033331ms
Output has normal
Output: 0.20209, 0.20209, 0.20209, 0.20209, 0.20209, ..., 0.20209, 0.20209, 0.20209, 0.20209, 0.20209
Min value: 0.20209, Max value: 0.20209, Mean: 0.20209, StdDev: 0
Run instruction: @589 = ref::multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@2) -> uint8_type, {1, 1000}, {0, 0}, target_id=0
Time: 0.00126ms, 0.00129ms
Output has normal
Output: 5, 5, 5, 5, 5, ..., 5, 5, 5, 5, 5
Min value: 5, Max value: 5, Mean: 53, StdDev: 0
Run instruction: @590 = ref::contiguous(@589) -> uint8_type, {1, 1000}, {1000, 1}, target_id=0
Time: 0.021141ms, 0.021181ms
Output has normal
Output: 5, 5, 5, 5, 5, ..., 5, 5, 5, 5, 5
Min value: 5, Max value: 5, Mean: 53, StdDev: 0
Run instruction: @591 = ref::quantizelinear(@586,@588,@590) -> uint8_type, {1, 1000}, {1000, 1}, target_id=0
Time: 2.71795ms, 2.71812ms
Output has normal
Output: 2, 9, 8, ;, >, ..., /, +, -, 5, =
Min value: #, Max value: G, Mean: 52.989, StdDev: 5.15237
Run instruction: @592 = ref::multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@1) -> float_type, {1, 1000}, {0, 0}, target_id=0
Time: 0.00214ms, 0.00217ms
Output has normal
Output: 0.20209, 0.20209, 0.20209, 0.20209, 0.20209, ..., 0.20209, 0.20209, 0.20209, 0.20209, 0.20209
Min value: 0.20209, Max value: 0.20209, Mean: 0.20209, StdDev: 0
Run instruction: @593 = ref::contiguous(@592) -> float_type, {1, 1000}, {1000, 1}, target_id=0
Time: 0.043231ms, 0.043281ms
Output has normal
Output: 0.20209, 0.20209, 0.20209, 0.20209, 0.20209, ..., 0.20209, 0.20209, 0.20209, 0.20209, 0.20209
Min value: 0.20209, Max value: 0.20209, Mean: 0.20209, StdDev: 0
Run instruction: @594 = ref::multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@2) -> uint8_type, {1, 1000}, {0, 0}, target_id=0
Time: 0.00139ms, 0.00142ms
Output has normal
Output: 5, 5, 5, 5, 5, ..., 5, 5, 5, 5, 5
Min value: 5, Max value: 5, Mean: 53, StdDev: 0
Run instruction: @595 = ref::contiguous(@594) -> uint8_type, {1, 1000}, {1000, 1}, target_id=0
Time: 0.028211ms, 0.028241ms
Output has normal
Output: 5, 5, 5, 5, 5, ..., 5, 5, 5, 5, 5
Min value: 5, Max value: 5, Mean: 53, StdDev: 0
Run instruction: @596 = ref::dequantizelinear(@591,@593,@595) -> float_type, {1, 1000}, {1000, 1}, target_id=0
Time: 2.65923ms, 2.65938ms
Output has zero, normal
Output: -0.606269, 0.808359, 0.606269, 1.21254, 1.81881, ..., -1.21254, -2.0209, -1.61672, 0, 1.61672
Min value: -3.63761, Max value: 3.63761, Mean: -0.00222299, StdDev: 1.04124
Run instruction: @597 = ref::multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@128) -> float_type, {1, 1000}, {0, 1}, target_id=0
Time: 0.00215ms, 0.00218ms
Output has normal
Output: -0.000825772, 0.00104445, -0.0179753, -0.00449572, -0.00496612, ..., -0.0359716, -0.0640775, 0.0301051, -0.0170096, 0.00410504
Min value: -0.0907865, Max value: 0.111815, Mean: 2.4743e-08, StdDev: 0.0299876
Run instruction: @598 = ref::contiguous(@597) -> float_type, {1, 1000}, {1000, 1}, target_id=0
Time: 0.022321ms, 0.022351ms
Output has normal
Output: -0.000825772, 0.00104445, -0.0179753, -0.00449572, -0.00496612, ..., -0.0359716, -0.0640775, 0.0301051, -0.0170096, 0.00410504
Min value: -0.0907865, Max value: 0.111815, Mean: 2.4743e-08, StdDev: 0.0299876
Run instruction: @599 = ref::add(@596,@598) -> float_type, {1, 1000}, {1000, 1}, target_id=0
Time: 0.0117ms, 0.01173ms
Output has normal
Output: -0.607095, 0.809403, 0.588294, 1.20804, 1.81384, ..., -1.24851, -2.08497, -1.58661, -0.0170096, 1.62082
Min value: -3.60515, Max value: 3.59591, Mean: -0.00222296, StdDev: 1.04343
module: "main"
data = @param:data -> float_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
@1 = @literal{0.20209} -> float_type, {1}, {0}, target_id=0
@2 = @literal{53} -> uint8_type, {1}, {0}, target_id=0
@3 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@4 = @literal{0.00104333} -> float_type, {1}, {0}, target_id=0
@5 = @literal{ ... } -> int8_type, {4096, 1000}, {1000, 1}, target_id=0
@6 = @literal{0.0450882} -> float_type, {1}, {0}, target_id=0
@7 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@8 = @literal{0.109745} -> float_type, {1}, {0}, target_id=0
@9 = @literal{151} -> uint8_type, {1}, {0}, target_id=0
@10 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@11 = @literal{0.000491461} -> float_type, {1}, {0}, target_id=0
@12 = @literal{ ... } -> int8_type, {4096, 4096}, {4096, 1}, target_id=0
@13 = @literal{0.0809295} -> float_type, {1}, {0}, target_id=0
@14 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@15 = @literal{0.209525} -> float_type, {1}, {0}, target_id=0
@16 = @literal{157} -> uint8_type, {1}, {0}, target_id=0
@17 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@18 = @literal{0.000378865} -> float_type, {1}, {0}, target_id=0
@19 = @literal{ ... } -> int8_type, {25088, 4096}, {4096, 1}, target_id=0
@20 = @literal{0.233266} -> float_type, {1}, {0}, target_id=0
@21 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@22 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@23 = @literal{0.000350484} -> float_type, {1}, {1}, target_id=0
@24 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@25 = @literal{0.233266} -> float_type, {1}, {0}, target_id=0
@26 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@27 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@28 = @literal{0.00123645} -> float_type, {1}, {0}, target_id=0
@29 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@30 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@31 = @literal{0.000806395} -> float_type, {1}, {1}, target_id=0
@32 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@33 = @literal{0.28346} -> float_type, {1}, {0}, target_id=0
@34 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@35 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@36 = @literal{0.00173175} -> float_type, {1}, {0}, target_id=0
@37 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@38 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@39 = @literal{0.000786583} -> float_type, {1}, {1}, target_id=0
@40 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@41 = @literal{0.465653} -> float_type, {1}, {0}, target_id=0
@42 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@43 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@44 = @literal{0.0022082} -> float_type, {1}, {0}, target_id=0
@45 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@46 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@47 = @literal{0.000870825} -> float_type, {1}, {1}, target_id=0
@48 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@49 = @literal{0.35621} -> float_type, {1}, {0}, target_id=0
@50 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@51 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@52 = @literal{0.00212013} -> float_type, {1}, {0}, target_id=0
@53 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@54 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@55 = @literal{0.000925222} -> float_type, {1}, {1}, target_id=0
@56 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@57 = @literal{0.41074} -> float_type, {1}, {0}, target_id=0
@58 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@59 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@60 = @literal{0.00197858} -> float_type, {1}, {0}, target_id=0
@61 = @literal{ ... } -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@62 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@63 = @literal{0.00145504} -> float_type, {1}, {1}, target_id=0
@64 = @literal{ ... } -> int32_type, {512}, {1}, target_id=0
@65 = @literal{0.46762} -> float_type, {1}, {0}, target_id=0
@66 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@67 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@68 = @literal{0.00364695} -> float_type, {1}, {0}, target_id=0
@69 = @literal{ ... } -> int8_type, {512, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@70 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@71 = @literal{0.0016644} -> float_type, {1}, {1}, target_id=0
@72 = @literal{ ... } -> int32_type, {256}, {1}, target_id=0
@73 = @literal{0.398974} -> float_type, {1}, {0}, target_id=0
@74 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@75 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@76 = @literal{0.00450157} -> float_type, {1}, {0}, target_id=0
@77 = @literal{ ... } -> int8_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@78 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@79 = @literal{0.00167394} -> float_type, {1}, {1}, target_id=0
@80 = @literal{ ... } -> int32_type, {256}, {1}, target_id=0
@81 = @literal{0.369739} -> float_type, {1}, {0}, target_id=0
@82 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@83 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@84 = @literal{0.00423602} -> float_type, {1}, {0}, target_id=0
@85 = @literal{ ... } -> int8_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@86 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@87 = @literal{0.00188817} -> float_type, {1}, {1}, target_id=0
@88 = @literal{ ... } -> int32_type, {256}, {1}, target_id=0
@89 = @literal{0.395168} -> float_type, {1}, {0}, target_id=0
@90 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@91 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@92 = @literal{0.00569332} -> float_type, {1}, {0}, target_id=0
@93 = @literal{ ... } -> int8_type, {256, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@94 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@95 = @literal{0.000692262} -> float_type, {1}, {1}, target_id=0
@96 = @literal{ ... } -> int32_type, {128}, {1}, target_id=0
@97 = @literal{0.331647} -> float_type, {1}, {0}, target_id=0
@98 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@99 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@100 = @literal{0.00350343} -> float_type, {1}, {0}, target_id=0
@101 = @literal{ ... } -> int8_type, {128, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@102 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@103 = @literal{0.000891812} -> float_type, {1}, {1}, target_id=0
@104 = @literal{ ... } -> int32_type, {128}, {1}, target_id=0
@105 = @literal{0.197596} -> float_type, {1}, {0}, target_id=0
@106 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@107 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@108 = @literal{0.00529674} -> float_type, {1}, {0}, target_id=0
@109 = @literal{ ... } -> int8_type, {128, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@110 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@111 = @literal{0.000335972} -> float_type, {1}, {1}, target_id=0
@112 = @literal{ ... } -> int32_type, {64}, {1}, target_id=0
@113 = @literal{0.16837} -> float_type, {1}, {0}, target_id=0
@114 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@115 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@116 = @literal{0.00454209} -> float_type, {1}, {0}, target_id=0
@117 = @literal{ ... } -> int8_type, {64, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@118 = @literal{0} -> int32_type, {1}, {1}, target_id=0
@119 = @literal{0.000246135} -> float_type, {1}, {1}, target_id=0
@120 = @literal{ ... } -> int32_type, {64}, {1}, target_id=0
@121 = @literal{0.0739686} -> float_type, {1}, {0}, target_id=0
@122 = @literal{0} -> uint8_type, {1}, {0}, target_id=0
@123 = @literal{0} -> int8_type, {1}, {0}, target_id=0
@124 = @literal{0.0131916} -> float_type, {1}, {0}, target_id=0
@125 = @literal{ ... } -> int8_type, {64, 3, 3, 3}, {27, 9, 3, 1}, target_id=0
@126 = @literal{0.0186584} -> float_type, {1}, {0}, target_id=0
@127 = @literal{114} -> uint8_type, {1}, {0}, target_id=0
@128 = @literal{ ... } -> float_type, {1000}, {1}, target_id=0
@129 = @literal{ ... } -> float_type, {4096}, {1}, target_id=0
@130 = @literal{ ... } -> float_type, {4096}, {1}, target_id=0
@131 = ref::multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@126) -> float_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
@132 = ref::contiguous(@131) -> float_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
@133 = ref::multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@127) -> uint8_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
@134 = ref::contiguous(@133) -> uint8_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
@135 = ref::quantizelinear(data,@132,@134) -> uint8_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
@136 = ref::multibroadcast[out_lens={64},out_dyn_dims={}](@119) -> float_type, {64}, {0}, target_id=0
@137 = ref::contiguous(@136) -> float_type, {64}, {1}, target_id=0
@138 = ref::multibroadcast[out_lens={64},out_dyn_dims={}](@118) -> int32_type, {64}, {0}, target_id=0
@139 = ref::contiguous(@138) -> int32_type, {64}, {1}, target_id=0
@140 = ref::dequantizelinear(@120,@137,@139) -> float_type, {64}, {1}, target_id=0
@141 = ref::multibroadcast[out_lens={64, 3, 3, 3},out_dyn_dims={}](@124) -> float_type, {64, 3, 3, 3}, {0, 0, 0, 0}, target_id=0
@142 = ref::contiguous(@141) -> float_type, {64, 3, 3, 3}, {27, 9, 3, 1}, target_id=0
@143 = ref::multibroadcast[out_lens={64, 3, 3, 3},out_dyn_dims={}](@123) -> int8_type, {64, 3, 3, 3}, {0, 0, 0, 0}, target_id=0
@144 = ref::contiguous(@143) -> int8_type, {64, 3, 3, 3}, {27, 9, 3, 1}, target_id=0
@145 = ref::dequantizelinear(@125,@142,@144) -> float_type, {64, 3, 3, 3}, {27, 9, 3, 1}, target_id=0
@146 = ref::multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@126) -> float_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
@147 = ref::contiguous(@146) -> float_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
@148 = ref::multibroadcast[out_lens={1, 3, 224, 224},out_dyn_dims={}](@127) -> uint8_type, {1, 3, 224, 224}, {0, 0, 0, 0}, target_id=0
@149 = ref::contiguous(@148) -> uint8_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
@150 = ref::dequantizelinear(@135,@147,@149) -> float_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
@151 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@150,@145) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@152 = ref::broadcast[axis=1,out_lens={1, 64, 224, 224}](@140) -> float_type, {1, 64, 224, 224}, {0, 1, 0, 0}, target_id=0
@153 = ref::contiguous(@152) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@154 = ref::add(@151,@153) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@155 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@121) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@156 = ref::contiguous(@155) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@157 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@122) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@158 = ref::contiguous(@157) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@159 = ref::quantizelinear(@154,@156,@158) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@160 = ref::multibroadcast[out_lens={64},out_dyn_dims={}](@111) -> float_type, {64}, {0}, target_id=0
@161 = ref::contiguous(@160) -> float_type, {64}, {1}, target_id=0
@162 = ref::multibroadcast[out_lens={64},out_dyn_dims={}](@110) -> int32_type, {64}, {0}, target_id=0
@163 = ref::contiguous(@162) -> int32_type, {64}, {1}, target_id=0
@164 = ref::dequantizelinear(@112,@161,@163) -> float_type, {64}, {1}, target_id=0
@165 = ref::multibroadcast[out_lens={64, 64, 3, 3},out_dyn_dims={}](@116) -> float_type, {64, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
@166 = ref::contiguous(@165) -> float_type, {64, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@167 = ref::multibroadcast[out_lens={64, 64, 3, 3},out_dyn_dims={}](@115) -> int8_type, {64, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
@168 = ref::contiguous(@167) -> int8_type, {64, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@169 = ref::dequantizelinear(@117,@166,@168) -> float_type, {64, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@170 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@121) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@171 = ref::contiguous(@170) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@172 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@122) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@173 = ref::contiguous(@172) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@174 = ref::dequantizelinear(@159,@171,@173) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@175 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@174,@169) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@176 = ref::broadcast[axis=1,out_lens={1, 64, 224, 224}](@164) -> float_type, {1, 64, 224, 224}, {0, 1, 0, 0}, target_id=0
@177 = ref::contiguous(@176) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@178 = ref::add(@175,@177) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@179 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@113) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@180 = ref::contiguous(@179) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@181 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@182 = ref::contiguous(@181) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@183 = ref::quantizelinear(@178,@180,@182) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@184 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@113) -> float_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@185 = ref::contiguous(@184) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@186 = ref::multibroadcast[out_lens={1, 64, 224, 224},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 224, 224}, {0, 0, 0, 0}, target_id=0
@187 = ref::contiguous(@186) -> uint8_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@188 = ref::dequantizelinear(@183,@185,@187) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
@189 = ref::pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@188) -> float_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
@190 = ref::multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@113) -> float_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
@191 = ref::contiguous(@190) -> float_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
@192 = ref::multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
@193 = ref::contiguous(@192) -> uint8_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
@194 = ref::quantizelinear(@189,@191,@193) -> uint8_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
@195 = ref::multibroadcast[out_lens={128},out_dyn_dims={}](@103) -> float_type, {128}, {0}, target_id=0
@196 = ref::contiguous(@195) -> float_type, {128}, {1}, target_id=0
@197 = ref::multibroadcast[out_lens={128},out_dyn_dims={}](@102) -> int32_type, {128}, {0}, target_id=0
@198 = ref::contiguous(@197) -> int32_type, {128}, {1}, target_id=0
@199 = ref::dequantizelinear(@104,@196,@198) -> float_type, {128}, {1}, target_id=0
@200 = ref::multibroadcast[out_lens={128, 64, 3, 3},out_dyn_dims={}](@108) -> float_type, {128, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
@201 = ref::contiguous(@200) -> float_type, {128, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@202 = ref::multibroadcast[out_lens={128, 64, 3, 3},out_dyn_dims={}](@107) -> int8_type, {128, 64, 3, 3}, {0, 0, 0, 0}, target_id=0
@203 = ref::contiguous(@202) -> int8_type, {128, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@204 = ref::dequantizelinear(@109,@201,@203) -> float_type, {128, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
@205 = ref::multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@113) -> float_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
@206 = ref::contiguous(@205) -> float_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
@207 = ref::multibroadcast[out_lens={1, 64, 112, 112},out_dyn_dims={}](@114) -> uint8_type, {1, 64, 112, 112}, {0, 0, 0, 0}, target_id=0
@208 = ref::contiguous(@207) -> uint8_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
@209 = ref::dequantizelinear(@194,@206,@208) -> float_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
@210 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@209,@204) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@211 = ref::broadcast[axis=1,out_lens={1, 128, 112, 112}](@199) -> float_type, {1, 128, 112, 112}, {0, 1, 0, 0}, target_id=0
@212 = ref::contiguous(@211) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@213 = ref::add(@210,@212) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@214 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@105) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@215 = ref::contiguous(@214) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@216 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@106) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@217 = ref::contiguous(@216) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@218 = ref::quantizelinear(@213,@215,@217) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@219 = ref::multibroadcast[out_lens={128},out_dyn_dims={}](@95) -> float_type, {128}, {0}, target_id=0
@220 = ref::contiguous(@219) -> float_type, {128}, {1}, target_id=0
@221 = ref::multibroadcast[out_lens={128},out_dyn_dims={}](@94) -> int32_type, {128}, {0}, target_id=0
@222 = ref::contiguous(@221) -> int32_type, {128}, {1}, target_id=0
@223 = ref::dequantizelinear(@96,@220,@222) -> float_type, {128}, {1}, target_id=0
@224 = ref::multibroadcast[out_lens={128, 128, 3, 3},out_dyn_dims={}](@100) -> float_type, {128, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
@225 = ref::contiguous(@224) -> float_type, {128, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@226 = ref::multibroadcast[out_lens={128, 128, 3, 3},out_dyn_dims={}](@99) -> int8_type, {128, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
@227 = ref::contiguous(@226) -> int8_type, {128, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@228 = ref::dequantizelinear(@101,@225,@227) -> float_type, {128, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@229 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@105) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@230 = ref::contiguous(@229) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@231 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@106) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@232 = ref::contiguous(@231) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@233 = ref::dequantizelinear(@218,@230,@232) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@234 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@233,@228) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@235 = ref::broadcast[axis=1,out_lens={1, 128, 112, 112}](@223) -> float_type, {1, 128, 112, 112}, {0, 1, 0, 0}, target_id=0
@236 = ref::contiguous(@235) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@237 = ref::add(@234,@236) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@238 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@97) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@239 = ref::contiguous(@238) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@240 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@241 = ref::contiguous(@240) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@242 = ref::quantizelinear(@237,@239,@241) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@243 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@97) -> float_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@244 = ref::contiguous(@243) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@245 = ref::multibroadcast[out_lens={1, 128, 112, 112},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 112, 112}, {0, 0, 0, 0}, target_id=0
@246 = ref::contiguous(@245) -> uint8_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@247 = ref::dequantizelinear(@242,@244,@246) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
@248 = ref::pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@247) -> float_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
@249 = ref::multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@97) -> float_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
@250 = ref::contiguous(@249) -> float_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
@251 = ref::multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
@252 = ref::contiguous(@251) -> uint8_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
@253 = ref::quantizelinear(@248,@250,@252) -> uint8_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
@254 = ref::multibroadcast[out_lens={256},out_dyn_dims={}](@87) -> float_type, {256}, {0}, target_id=0
@255 = ref::contiguous(@254) -> float_type, {256}, {1}, target_id=0
@256 = ref::multibroadcast[out_lens={256},out_dyn_dims={}](@86) -> int32_type, {256}, {0}, target_id=0
@257 = ref::contiguous(@256) -> int32_type, {256}, {1}, target_id=0
@258 = ref::dequantizelinear(@88,@255,@257) -> float_type, {256}, {1}, target_id=0
@259 = ref::multibroadcast[out_lens={256, 128, 3, 3},out_dyn_dims={}](@92) -> float_type, {256, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
@260 = ref::contiguous(@259) -> float_type, {256, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@261 = ref::multibroadcast[out_lens={256, 128, 3, 3},out_dyn_dims={}](@91) -> int8_type, {256, 128, 3, 3}, {0, 0, 0, 0}, target_id=0
@262 = ref::contiguous(@261) -> int8_type, {256, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@263 = ref::dequantizelinear(@93,@260,@262) -> float_type, {256, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
@264 = ref::multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@97) -> float_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
@265 = ref::contiguous(@264) -> float_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
@266 = ref::multibroadcast[out_lens={1, 128, 56, 56},out_dyn_dims={}](@98) -> uint8_type, {1, 128, 56, 56}, {0, 0, 0, 0}, target_id=0
@267 = ref::contiguous(@266) -> uint8_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
@268 = ref::dequantizelinear(@253,@265,@267) -> float_type, {1, 128, 56, 56}, {401408, 3136, 56, 1}, target_id=0
@269 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@268,@263) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@270 = ref::broadcast[axis=1,out_lens={1, 256, 56, 56}](@258) -> float_type, {1, 256, 56, 56}, {0, 1, 0, 0}, target_id=0
@271 = ref::contiguous(@270) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@272 = ref::add(@269,@271) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@273 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@89) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@274 = ref::contiguous(@273) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@275 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@90) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@276 = ref::contiguous(@275) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@277 = ref::quantizelinear(@272,@274,@276) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@278 = ref::multibroadcast[out_lens={256},out_dyn_dims={}](@79) -> float_type, {256}, {0}, target_id=0
@279 = ref::contiguous(@278) -> float_type, {256}, {1}, target_id=0
@280 = ref::multibroadcast[out_lens={256},out_dyn_dims={}](@78) -> int32_type, {256}, {0}, target_id=0
@281 = ref::contiguous(@280) -> int32_type, {256}, {1}, target_id=0
@282 = ref::dequantizelinear(@80,@279,@281) -> float_type, {256}, {1}, target_id=0
@283 = ref::multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@84) -> float_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@284 = ref::contiguous(@283) -> float_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@285 = ref::multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@83) -> int8_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@286 = ref::contiguous(@285) -> int8_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@287 = ref::dequantizelinear(@85,@284,@286) -> float_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@288 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@89) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@289 = ref::contiguous(@288) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@290 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@90) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@291 = ref::contiguous(@290) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@292 = ref::dequantizelinear(@277,@289,@291) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@293 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@292,@287) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@294 = ref::broadcast[axis=1,out_lens={1, 256, 56, 56}](@282) -> float_type, {1, 256, 56, 56}, {0, 1, 0, 0}, target_id=0
@295 = ref::contiguous(@294) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@296 = ref::add(@293,@295) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@297 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@81) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@298 = ref::contiguous(@297) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@299 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@82) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@300 = ref::contiguous(@299) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@301 = ref::quantizelinear(@296,@298,@300) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@302 = ref::multibroadcast[out_lens={256},out_dyn_dims={}](@71) -> float_type, {256}, {0}, target_id=0
@303 = ref::contiguous(@302) -> float_type, {256}, {1}, target_id=0
@304 = ref::multibroadcast[out_lens={256},out_dyn_dims={}](@70) -> int32_type, {256}, {0}, target_id=0
@305 = ref::contiguous(@304) -> int32_type, {256}, {1}, target_id=0
@306 = ref::dequantizelinear(@72,@303,@305) -> float_type, {256}, {1}, target_id=0
@307 = ref::multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@76) -> float_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@308 = ref::contiguous(@307) -> float_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@309 = ref::multibroadcast[out_lens={256, 256, 3, 3},out_dyn_dims={}](@75) -> int8_type, {256, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@310 = ref::contiguous(@309) -> int8_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@311 = ref::dequantizelinear(@77,@308,@310) -> float_type, {256, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@312 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@81) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@313 = ref::contiguous(@312) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@314 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@82) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@315 = ref::contiguous(@314) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@316 = ref::dequantizelinear(@301,@313,@315) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@317 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@316,@311) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@318 = ref::broadcast[axis=1,out_lens={1, 256, 56, 56}](@306) -> float_type, {1, 256, 56, 56}, {0, 1, 0, 0}, target_id=0
@319 = ref::contiguous(@318) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@320 = ref::add(@317,@319) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@321 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@73) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@322 = ref::contiguous(@321) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@323 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@324 = ref::contiguous(@323) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@325 = ref::quantizelinear(@320,@322,@324) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@326 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@73) -> float_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@327 = ref::contiguous(@326) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@328 = ref::multibroadcast[out_lens={1, 256, 56, 56},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 56, 56}, {0, 0, 0, 0}, target_id=0
@329 = ref::contiguous(@328) -> uint8_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@330 = ref::dequantizelinear(@325,@327,@329) -> float_type, {1, 256, 56, 56}, {802816, 3136, 56, 1}, target_id=0
@331 = ref::pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@330) -> float_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
@332 = ref::multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@73) -> float_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
@333 = ref::contiguous(@332) -> float_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
@334 = ref::multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
@335 = ref::contiguous(@334) -> uint8_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
@336 = ref::quantizelinear(@331,@333,@335) -> uint8_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
@337 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@63) -> float_type, {512}, {0}, target_id=0
@338 = ref::contiguous(@337) -> float_type, {512}, {1}, target_id=0
@339 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@62) -> int32_type, {512}, {0}, target_id=0
@340 = ref::contiguous(@339) -> int32_type, {512}, {1}, target_id=0
@341 = ref::dequantizelinear(@64,@338,@340) -> float_type, {512}, {1}, target_id=0
@342 = ref::multibroadcast[out_lens={512, 256, 3, 3},out_dyn_dims={}](@68) -> float_type, {512, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@343 = ref::contiguous(@342) -> float_type, {512, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@344 = ref::multibroadcast[out_lens={512, 256, 3, 3},out_dyn_dims={}](@67) -> int8_type, {512, 256, 3, 3}, {0, 0, 0, 0}, target_id=0
@345 = ref::contiguous(@344) -> int8_type, {512, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@346 = ref::dequantizelinear(@69,@343,@345) -> float_type, {512, 256, 3, 3}, {2304, 9, 3, 1}, target_id=0
@347 = ref::multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@73) -> float_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
@348 = ref::contiguous(@347) -> float_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
@349 = ref::multibroadcast[out_lens={1, 256, 28, 28},out_dyn_dims={}](@74) -> uint8_type, {1, 256, 28, 28}, {0, 0, 0, 0}, target_id=0
@350 = ref::contiguous(@349) -> uint8_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
@351 = ref::dequantizelinear(@336,@348,@350) -> float_type, {1, 256, 28, 28}, {200704, 784, 28, 1}, target_id=0
@352 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@351,@346) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@353 = ref::broadcast[axis=1,out_lens={1, 512, 28, 28}](@341) -> float_type, {1, 512, 28, 28}, {0, 1, 0, 0}, target_id=0
@354 = ref::contiguous(@353) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@355 = ref::add(@352,@354) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@356 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@65) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@357 = ref::contiguous(@356) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@358 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@66) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@359 = ref::contiguous(@358) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@360 = ref::quantizelinear(@355,@357,@359) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@361 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@55) -> float_type, {512}, {0}, target_id=0
@362 = ref::contiguous(@361) -> float_type, {512}, {1}, target_id=0
@363 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@54) -> int32_type, {512}, {0}, target_id=0
@364 = ref::contiguous(@363) -> int32_type, {512}, {1}, target_id=0
@365 = ref::dequantizelinear(@56,@362,@364) -> float_type, {512}, {1}, target_id=0
@366 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@60) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@367 = ref::contiguous(@366) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@368 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@59) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@369 = ref::contiguous(@368) -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@370 = ref::dequantizelinear(@61,@367,@369) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@371 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@65) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@372 = ref::contiguous(@371) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@373 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@66) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@374 = ref::contiguous(@373) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@375 = ref::dequantizelinear(@360,@372,@374) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@376 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@375,@370) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@377 = ref::broadcast[axis=1,out_lens={1, 512, 28, 28}](@365) -> float_type, {1, 512, 28, 28}, {0, 1, 0, 0}, target_id=0
@378 = ref::contiguous(@377) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@379 = ref::add(@376,@378) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@380 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@57) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@381 = ref::contiguous(@380) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@382 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@58) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@383 = ref::contiguous(@382) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@384 = ref::quantizelinear(@379,@381,@383) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@385 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@47) -> float_type, {512}, {0}, target_id=0
@386 = ref::contiguous(@385) -> float_type, {512}, {1}, target_id=0
@387 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@46) -> int32_type, {512}, {0}, target_id=0
@388 = ref::contiguous(@387) -> int32_type, {512}, {1}, target_id=0
@389 = ref::dequantizelinear(@48,@386,@388) -> float_type, {512}, {1}, target_id=0
@390 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@52) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@391 = ref::contiguous(@390) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@392 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@51) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@393 = ref::contiguous(@392) -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@394 = ref::dequantizelinear(@53,@391,@393) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@395 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@57) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@396 = ref::contiguous(@395) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@397 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@58) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@398 = ref::contiguous(@397) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@399 = ref::dequantizelinear(@384,@396,@398) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@400 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@399,@394) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@401 = ref::broadcast[axis=1,out_lens={1, 512, 28, 28}](@389) -> float_type, {1, 512, 28, 28}, {0, 1, 0, 0}, target_id=0
@402 = ref::contiguous(@401) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@403 = ref::add(@400,@402) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@404 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@49) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@405 = ref::contiguous(@404) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@406 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@407 = ref::contiguous(@406) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@408 = ref::quantizelinear(@403,@405,@407) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@409 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@49) -> float_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@410 = ref::contiguous(@409) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@411 = ref::multibroadcast[out_lens={1, 512, 28, 28},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 28, 28}, {0, 0, 0, 0}, target_id=0
@412 = ref::contiguous(@411) -> uint8_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@413 = ref::dequantizelinear(@408,@410,@412) -> float_type, {1, 512, 28, 28}, {401408, 784, 28, 1}, target_id=0
@414 = ref::pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@413) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@415 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@49) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@416 = ref::contiguous(@415) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@417 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@418 = ref::contiguous(@417) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@419 = ref::quantizelinear(@414,@416,@418) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@420 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@39) -> float_type, {512}, {0}, target_id=0
@421 = ref::contiguous(@420) -> float_type, {512}, {1}, target_id=0
@422 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@38) -> int32_type, {512}, {0}, target_id=0
@423 = ref::contiguous(@422) -> int32_type, {512}, {1}, target_id=0
@424 = ref::dequantizelinear(@40,@421,@423) -> float_type, {512}, {1}, target_id=0
@425 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@44) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@426 = ref::contiguous(@425) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@427 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@43) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@428 = ref::contiguous(@427) -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@429 = ref::dequantizelinear(@45,@426,@428) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@430 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@49) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@431 = ref::contiguous(@430) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@432 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@50) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@433 = ref::contiguous(@432) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@434 = ref::dequantizelinear(@419,@431,@433) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@435 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@434,@429) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@436 = ref::broadcast[axis=1,out_lens={1, 512, 14, 14}](@424) -> float_type, {1, 512, 14, 14}, {0, 1, 0, 0}, target_id=0
@437 = ref::contiguous(@436) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@438 = ref::add(@435,@437) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@439 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@41) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@440 = ref::contiguous(@439) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@441 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@42) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@442 = ref::contiguous(@441) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@443 = ref::quantizelinear(@438,@440,@442) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@444 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@31) -> float_type, {512}, {0}, target_id=0
@445 = ref::contiguous(@444) -> float_type, {512}, {1}, target_id=0
@446 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@30) -> int32_type, {512}, {0}, target_id=0
@447 = ref::contiguous(@446) -> int32_type, {512}, {1}, target_id=0
@448 = ref::dequantizelinear(@32,@445,@447) -> float_type, {512}, {1}, target_id=0
@449 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@36) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@450 = ref::contiguous(@449) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@451 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@35) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@452 = ref::contiguous(@451) -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@453 = ref::dequantizelinear(@37,@450,@452) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@454 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@41) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@455 = ref::contiguous(@454) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@456 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@42) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@457 = ref::contiguous(@456) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@458 = ref::dequantizelinear(@443,@455,@457) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@459 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@458,@453) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@460 = ref::broadcast[axis=1,out_lens={1, 512, 14, 14}](@448) -> float_type, {1, 512, 14, 14}, {0, 1, 0, 0}, target_id=0
@461 = ref::contiguous(@460) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@462 = ref::add(@459,@461) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@463 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@33) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@464 = ref::contiguous(@463) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@465 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@34) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@466 = ref::contiguous(@465) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@467 = ref::quantizelinear(@462,@464,@466) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@468 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@23) -> float_type, {512}, {0}, target_id=0
@469 = ref::contiguous(@468) -> float_type, {512}, {1}, target_id=0
@470 = ref::multibroadcast[out_lens={512},out_dyn_dims={}](@22) -> int32_type, {512}, {0}, target_id=0
@471 = ref::contiguous(@470) -> int32_type, {512}, {1}, target_id=0
@472 = ref::dequantizelinear(@24,@469,@471) -> float_type, {512}, {1}, target_id=0
@473 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@28) -> float_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@474 = ref::contiguous(@473) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@475 = ref::multibroadcast[out_lens={512, 512, 3, 3},out_dyn_dims={}](@27) -> int8_type, {512, 512, 3, 3}, {0, 0, 0, 0}, target_id=0
@476 = ref::contiguous(@475) -> int8_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@477 = ref::dequantizelinear(@29,@474,@476) -> float_type, {512, 512, 3, 3}, {4608, 9, 3, 1}, target_id=0
@478 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@33) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@479 = ref::contiguous(@478) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@480 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@34) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@481 = ref::contiguous(@480) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@482 = ref::dequantizelinear(@467,@479,@481) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@483 = ref::convolution[padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0](@482,@477) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@484 = ref::broadcast[axis=1,out_lens={1, 512, 14, 14}](@472) -> float_type, {1, 512, 14, 14}, {0, 1, 0, 0}, target_id=0
@485 = ref::contiguous(@484) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@486 = ref::add(@483,@485) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@487 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@25) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@488 = ref::contiguous(@487) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@489 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@490 = ref::contiguous(@489) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@491 = ref::quantizelinear(@486,@488,@490) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@492 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@25) -> float_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@493 = ref::contiguous(@492) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@494 = ref::multibroadcast[out_lens={1, 512, 14, 14},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 14, 14}, {0, 0, 0, 0}, target_id=0
@495 = ref::contiguous(@494) -> uint8_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@496 = ref::dequantizelinear(@491,@493,@495) -> float_type, {1, 512, 14, 14}, {100352, 196, 14, 1}, target_id=0
@497 = ref::pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@496) -> float_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
@498 = ref::multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@25) -> float_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
@499 = ref::contiguous(@498) -> float_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
@500 = ref::multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
@501 = ref::contiguous(@500) -> uint8_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
@502 = ref::quantizelinear(@497,@499,@501) -> uint8_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
@503 = ref::multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@25) -> float_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
@504 = ref::contiguous(@503) -> float_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
@505 = ref::multibroadcast[out_lens={1, 512, 7, 7},out_dyn_dims={}](@26) -> uint8_type, {1, 512, 7, 7}, {0, 0, 0, 0}, target_id=0
@506 = ref::contiguous(@505) -> uint8_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
@507 = ref::dequantizelinear(@502,@504,@506) -> float_type, {1, 512, 7, 7}, {25088, 49, 7, 1}, target_id=0
@508 = ref::flatten[axis=1](@507) -> float_type, {1, 25088}, {25088, 1}, target_id=0
@509 = ref::multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@20) -> float_type, {1, 25088}, {0, 0}, target_id=0
@510 = ref::contiguous(@509) -> float_type, {1, 25088}, {25088, 1}, target_id=0
@511 = ref::multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@21) -> uint8_type, {1, 25088}, {0, 0}, target_id=0
@512 = ref::contiguous(@511) -> uint8_type, {1, 25088}, {25088, 1}, target_id=0
@513 = ref::quantizelinear(@508,@510,@512) -> uint8_type, {1, 25088}, {25088, 1}, target_id=0
@514 = ref::multibroadcast[out_lens={25088, 4096},out_dyn_dims={}](@18) -> float_type, {25088, 4096}, {0, 0}, target_id=0
@515 = ref::contiguous(@514) -> float_type, {25088, 4096}, {4096, 1}, target_id=0
@516 = ref::multibroadcast[out_lens={25088, 4096},out_dyn_dims={}](@17) -> int8_type, {25088, 4096}, {0, 0}, target_id=0
@517 = ref::contiguous(@516) -> int8_type, {25088, 4096}, {4096, 1}, target_id=0
@518 = ref::dequantizelinear(@19,@515,@517) -> float_type, {25088, 4096}, {4096, 1}, target_id=0
@519 = ref::multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@20) -> float_type, {1, 25088}, {0, 0}, target_id=0
@520 = ref::contiguous(@519) -> float_type, {1, 25088}, {25088, 1}, target_id=0
@521 = ref::multibroadcast[out_lens={1, 25088},out_dyn_dims={}](@21) -> uint8_type, {1, 25088}, {0, 0}, target_id=0
@522 = ref::contiguous(@521) -> uint8_type, {1, 25088}, {25088, 1}, target_id=0
@523 = ref::dequantizelinear(@513,@520,@522) -> float_type, {1, 25088}, {25088, 1}, target_id=0
@524 = ref::dot(@523,@518) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@525 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@15) -> float_type, {1, 4096}, {0, 0}, target_id=0
@526 = ref::contiguous(@525) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@527 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@16) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@528 = ref::contiguous(@527) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@529 = ref::quantizelinear(@524,@526,@528) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@530 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@15) -> float_type, {1, 4096}, {0, 0}, target_id=0
@531 = ref::contiguous(@530) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@532 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@16) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@533 = ref::contiguous(@532) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@534 = ref::dequantizelinear(@529,@531,@533) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@535 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@130) -> float_type, {1, 4096}, {0, 1}, target_id=0
@536 = ref::contiguous(@535) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@537 = ref::add(@534,@536) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@538 = ref::relu(@537) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@539 = ref::flatten[axis=1](@538) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@540 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@13) -> float_type, {1, 4096}, {0, 0}, target_id=0
@541 = ref::contiguous(@540) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@542 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@14) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@543 = ref::contiguous(@542) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@544 = ref::quantizelinear(@539,@541,@543) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@545 = ref::multibroadcast[out_lens={4096, 4096},out_dyn_dims={}](@11) -> float_type, {4096, 4096}, {0, 0}, target_id=0
@546 = ref::contiguous(@545) -> float_type, {4096, 4096}, {4096, 1}, target_id=0
@547 = ref::multibroadcast[out_lens={4096, 4096},out_dyn_dims={}](@10) -> int8_type, {4096, 4096}, {0, 0}, target_id=0
@548 = ref::contiguous(@547) -> int8_type, {4096, 4096}, {4096, 1}, target_id=0
@549 = ref::dequantizelinear(@12,@546,@548) -> float_type, {4096, 4096}, {4096, 1}, target_id=0
@550 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@13) -> float_type, {1, 4096}, {0, 0}, target_id=0
@551 = ref::contiguous(@550) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@552 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@14) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@553 = ref::contiguous(@552) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@554 = ref::dequantizelinear(@544,@551,@553) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@555 = ref::dot(@554,@549) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@556 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@8) -> float_type, {1, 4096}, {0, 0}, target_id=0
@557 = ref::contiguous(@556) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@558 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@9) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@559 = ref::contiguous(@558) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@560 = ref::quantizelinear(@555,@557,@559) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@561 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@8) -> float_type, {1, 4096}, {0, 0}, target_id=0
@562 = ref::contiguous(@561) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@563 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@9) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@564 = ref::contiguous(@563) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@565 = ref::dequantizelinear(@560,@562,@564) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@566 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@129) -> float_type, {1, 4096}, {0, 1}, target_id=0
@567 = ref::contiguous(@566) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@568 = ref::add(@565,@567) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@569 = ref::relu(@568) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@570 = ref::flatten[axis=1](@569) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@571 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@6) -> float_type, {1, 4096}, {0, 0}, target_id=0
@572 = ref::contiguous(@571) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@573 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@7) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@574 = ref::contiguous(@573) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@575 = ref::quantizelinear(@570,@572,@574) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@576 = ref::multibroadcast[out_lens={4096, 1000},out_dyn_dims={}](@4) -> float_type, {4096, 1000}, {0, 0}, target_id=0
@577 = ref::contiguous(@576) -> float_type, {4096, 1000}, {1000, 1}, target_id=0
@578 = ref::multibroadcast[out_lens={4096, 1000},out_dyn_dims={}](@3) -> int8_type, {4096, 1000}, {0, 0}, target_id=0
@579 = ref::contiguous(@578) -> int8_type, {4096, 1000}, {1000, 1}, target_id=0
@580 = ref::dequantizelinear(@5,@577,@579) -> float_type, {4096, 1000}, {1000, 1}, target_id=0
@581 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@6) -> float_type, {1, 4096}, {0, 0}, target_id=0
@582 = ref::contiguous(@581) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@583 = ref::multibroadcast[out_lens={1, 4096},out_dyn_dims={}](@7) -> uint8_type, {1, 4096}, {0, 0}, target_id=0
@584 = ref::contiguous(@583) -> uint8_type, {1, 4096}, {4096, 1}, target_id=0
@585 = ref::dequantizelinear(@575,@582,@584) -> float_type, {1, 4096}, {4096, 1}, target_id=0
@586 = ref::dot(@585,@580) -> float_type, {1, 1000}, {1000, 1}, target_id=0
@587 = ref::multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@1) -> float_type, {1, 1000}, {0, 0}, target_id=0
@588 = ref::contiguous(@587) -> float_type, {1, 1000}, {1000, 1}, target_id=0
@589 = ref::multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@2) -> uint8_type, {1, 1000}, {0, 0}, target_id=0
@590 = ref::contiguous(@589) -> uint8_type, {1, 1000}, {1000, 1}, target_id=0
@591 = ref::quantizelinear(@586,@588,@590) -> uint8_type, {1, 1000}, {1000, 1}, target_id=0
@592 = ref::multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@1) -> float_type, {1, 1000}, {0, 0}, target_id=0
@593 = ref::contiguous(@592) -> float_type, {1, 1000}, {1000, 1}, target_id=0
@594 = ref::multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@2) -> uint8_type, {1, 1000}, {0, 0}, target_id=0
@595 = ref::contiguous(@594) -> uint8_type, {1, 1000}, {1000, 1}, target_id=0
@596 = ref::dequantizelinear(@591,@593,@595) -> float_type, {1, 1000}, {1000, 1}, target_id=0
@597 = ref::multibroadcast[out_lens={1, 1000},out_dyn_dims={}](@128) -> float_type, {1, 1000}, {0, 1}, target_id=0
@598 = ref::contiguous(@597) -> float_type, {1, 1000}, {1000, 1}, target_id=0
@599 = ref::add(@596,@598) -> float_type, {1, 1000}, {1000, 1}, target_id=0
@600 = @return(@599), target_id=0


Run instruction: @0 = check_context::migraphx::gpu::context -> float_type, {}, {}, target_id=0
Time: 0.01124ms, 0.01175ms
Run instruction: @1 = hip::hip_allocate_memory[shape=int8_type, {25690112}, {1},id=main:scratch] -> int8_type, {25690112}, {1}, target_id=0
Time: 0.01043ms, 0.01083ms
Output has normal
Output: �, �, �, �, �, ..., �, �, �, �, �
Min value: �, Max value: �, Mean: -66, StdDev: 0
Run instruction: @2 = hip::hip_copy_literal[id=main:@literal:12] -> float_type, {64, 3, 3, 3}, {27, 9, 3, 1}, target_id=0
Time: 0.01705ms, 0.0178ms
Output has zero, normal
Output: 0.197874, 0.118725, 0.0131916, 0.145108, 0.0395748, ..., -0.395748, 0.0131916, -0.131916, -0.0395748, 0
Min value: -1.33235, Max value: 1.67534, Mean: -0.00117564, StdDev: 0.258978
Run instruction: @3 = load[offset=0,end=0](@1) -> int8_type, {0}, {1}, target_id=0
Time: 0.023961ms, 0.024281ms
Run instruction: data = @param:data -> float_type, {1, 3, 224, 224}, {150528, 50176, 224, 1}, target_id=0
Time: 0.003ms, 0.00331ms
Run instruction: @5 = load[offset=12845056,end=25690112](@1) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 0.00127ms, 0.00151ms
Run instruction: @6 = gpu::convolution[op={padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0},solution_object={binary_object: 459},algo=0,solution_id=0](data,@2,@3,@5) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 0.122403ms, 0.183414ms
Output has zero, normal
Output: 0.403169, 0.508702, 0.324844, 0.412238, 0.267955, ..., -0.473249, 1.03224, -0.480669, -0.051942, 0.0230853
Min value: -5.5479, Max value: 5.10763, Mean: 0.00112999, StdDev: 0.774232
Run instruction: @7 = hip::hip_copy_literal[id=main:@literal:13] -> float_type, {64, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
Time: 0.00439ms, 0.00479ms
Output has zero, normal
Output: 0.0181683, -0.0136263, -0.0227104, 0.00908417, -0.0454209, ..., -0.0317946, -0.122636, 0.049963, 0.0272525, -0.049963
Min value: -0.54505, Max value: 0.576845, Mean: -0.00287885, StdDev: 0.0570212
Run instruction: @8 = load[offset=0,end=0](@1) -> int8_type, {0}, {1}, target_id=0
Time: 0.00294ms, 0.00327ms
Run instruction: @9 = load[offset=0,end=12845056](@1) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 0.00074ms, 0.00099ms
Run instruction: @10 = gpu::convolution[op={padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0},solution_object={binary_object: 460},algo=0,solution_id=0](@6,@7,@8,@9) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 0.062362ms, 0.260886ms
Output has normal
Output: 1.9545, -2.63159, -1.26235, 3.23512, 0.677195, ..., -0.411764, -0.380543, -0.576994, 2.63148, 3.12293
Min value: -26.2735, Max value: 25.3098, Mean: 0.00723832, StdDev: 3.66659
Run instruction: @11 = hip::hip_copy_literal[id=main:@literal:1] -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 0.00388ms, 0.00433ms
Output has normal
Output: 0.959302, 1.64596, 1.64596, 1.64596, 1.64596, ..., -0.138603, -0.138603, -0.138603, -0.138603, 0.0677202
Min value: -7.6594, Max value: 3.34195, Mean: 0.459357, StdDev: 1.77174
Run instruction: @12 = load[offset=12845056,end=25690112](@1) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 0.00208ms, 0.00243ms
Run instruction: @13 = gpu::code_object[code_object=4856,symbol_name=add_kernel,global=802816,local=1024,](@10,@11,@12) -> float_type, {1, 64, 224, 224}, {3211264, 50176, 224, 1}, target_id=0
Time: 0.040581ms, 0.092342ms
Output has normal
Output: 2.91381, -0.985627, 0.383609, 4.88108, 2.32316, ..., -0.550367, -0.519146, -0.715597, 2.49288, 3.19065
Min value: -25.7357, Max value: 25.8476, Mean: 0.466595, StdDev: 4.06919
Run instruction: @14 = load[offset=6422528,end=9633792](@1) -> float_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
Time: 0.00148ms, 0.001891ms
Run instruction: @15 = gpu::pooling[mode=max,padding={0, 0, 0, 0},padding_mode=0,stride={2, 2},lengths={2, 2},dilations={1, 1},ceil_mode=0,lp_order=2,dyn_global=0](@13,@14) -> float_type, {1, 64, 112, 112}, {802816, 12544, 112, 1}, target_id=0
Time: 118.479ms, 118.501ms
Output has normal
Output: 3.06242, 4.88108, 6.98191, 5.51414, 2.11506, ..., -0.850253, 2.00746, -0.550367, 1.81771, 4.53224
Min value: -13.193, Max value: 25.8476, Mean: 3.48186, StdDev: 3.63565
Run instruction: @16 = hip::hip_copy_literal[id=main:@literal:17] -> float_type, {128, 64, 3, 3}, {576, 9, 3, 1}, target_id=0
Time: 0.0062ms, 0.00667ms
Output has zero, normal
Output: 0.00529674, 0.132419, 0.0582641, 0.0635609, -0.0264837, ..., 0.0847479, -0.137715, -0.0476707, -0.158902, -0.291321
Min value: -0.450223, Max value: 0.672686, Mean: -0.00243996, StdDev: 0.0510446
Run instruction: @17 = load[offset=0,end=0](@1) -> int8_type, {0}, {1}, target_id=0
Time: 0.00346ms, 0.00381ms
Run instruction: @18 = load[offset=0,end=6422528](@1) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 0.00074ms, 0.00099ms
Run instruction: @19 = gpu::convolution[op={padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0},solution_object={binary_object: 456},algo=0,solution_id=0](@15,@16,@17,@18) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 0.055782ms, 0.171494ms
Output has normal
Output: 1.88164, 0.248343, -4.93461, -5.49327, -5.58615, ..., -10.1472, 2.21526, -11.4176, -7.49778, 3.33853
Min value: -62.3695, Max value: 58.1053, Mean: -3.88499, StdDev: 10.9804
Run instruction: @20 = hip::hip_copy_literal[id=main:@literal:19] -> float_type, {128, 128, 3, 3}, {1152, 9, 3, 1}, target_id=0
Time: 0.00259ms, 0.00291ms
Output has zero, normal
Output: 0.00350343, 0.12262, -0.0140137, -0.0595583, 0.0140137, ..., -0.00350343, -0.024524, 0, 0.0595583, 0.0280274
Min value: -0.329322, Max value: 0.444935, Mean: -0.00239929, StdDev: 0.039656
Run instruction: @21 = load[offset=0,end=0](@1) -> int8_type, {0}, {1}, target_id=0
Time: 0.00207ms, 0.00234ms
Run instruction: @22 = load[offset=9633792,end=16056320](@1) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 0.00065ms, 0.0009ms
Run instruction: @23 = gpu::convolution[op={padding={1, 1, 1, 1},stride={1, 1},dilation={1, 1},group=1,padding_mode=0},solution_object={binary_object: 440},algo=0,solution_id=0](@19,@20,@21,@22) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 0.037401ms, 0.206574ms
Output has normal
Output: -4.25608, -27.0178, -20.4665, 4.00207, 11.8674, ..., 42.6736, 53.2344, 40.1001, 32.622, 18.1882
Min value: -298.436, Max value: 204.308, Mean: 11.2996, StdDev: 38.7008
Run instruction: @24 = hip::hip_copy_literal[id=main:@literal:2] -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 0.00168ms, 0.00195ms
Output has normal
Output: -0.248511, -0.265758, -0.265758, -0.265758, -0.265758, ..., -0.109803, -0.109803, -0.109803, -0.109803, -0.0243944
Min value: -1.16978, Max value: 1.54601, Mean: -0.0318767, StdDev: 0.319991
Run instruction: @25 = load[offset=1605632,end=8028160](@1) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 0.00125ms, 0.00152ms
Run instruction: @26 = gpu::code_object[code_object=4856,symbol_name=add_kernel,global=401408,local=1024,](@23,@24,@25) -> float_type, {1, 128, 112, 112}, {1605632, 12544, 112, 1}, target_id=0
Time: 0.01213ms, 0.051231ms
